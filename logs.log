2025-02-18 06:50:37,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-18 06:50:37,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-18 06:50:37,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-18 06:50:37,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-18 06:51:57,959:INFO:PyCaret ClassificationExperiment
2025-02-18 06:51:57,961:INFO:Logging name: clf-default-name
2025-02-18 06:51:57,962:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-18 06:51:57,962:INFO:version 3.3.2
2025-02-18 06:51:57,962:INFO:Initializing setup()
2025-02-18 06:51:57,962:INFO:self.USI: d671
2025-02-18 06:51:57,963:INFO:self._variable_keys: {'y_test', 'exp_id', 'gpu_n_jobs_param', 'X_test', 'is_multiclass', 'idx', 'USI', 'seed', 'y', 'exp_name_log', 'log_plots_param', 'X_train', 'logging_param', 'pipeline', 'html_param', 'target_param', '_ml_usecase', 'data', '_available_plots', 'X', 'fold_generator', 'fold_groups_param', 'fix_imbalance', 'gpu_param', 'y_train', 'fold_shuffle_param', 'n_jobs_param', 'memory'}
2025-02-18 06:51:57,963:INFO:Checking environment
2025-02-18 06:51:57,963:INFO:python_version: 3.10.16
2025-02-18 06:51:57,963:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-18 06:51:57,963:INFO:machine: AMD64
2025-02-18 06:51:57,963:INFO:platform: Windows-10-10.0.22631-SP0
2025-02-18 06:51:57,969:INFO:Memory: svmem(total=8299257856, available=1233448960, percent=85.1, used=7065808896, free=1233448960)
2025-02-18 06:51:57,969:INFO:Physical Core: 4
2025-02-18 06:51:57,970:INFO:Logical Core: 8
2025-02-18 06:51:57,970:INFO:Checking libraries
2025-02-18 06:51:57,970:INFO:System:
2025-02-18 06:51:57,970:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-18 06:51:57,970:INFO:executable: c:\Users\ksaig\anaconda3\envs\regis\python.exe
2025-02-18 06:51:57,970:INFO:   machine: Windows-10-10.0.22631-SP0
2025-02-18 06:51:57,970:INFO:PyCaret required dependencies:
2025-02-18 06:51:58,016:INFO:                 pip: 25.0
2025-02-18 06:51:58,016:INFO:          setuptools: 75.8.0
2025-02-18 06:51:58,016:INFO:             pycaret: 3.3.2
2025-02-18 06:51:58,016:INFO:             IPython: 8.32.0
2025-02-18 06:51:58,016:INFO:          ipywidgets: 8.1.5
2025-02-18 06:51:58,016:INFO:                tqdm: 4.67.1
2025-02-18 06:51:58,016:INFO:               numpy: 1.26.4
2025-02-18 06:51:58,016:INFO:              pandas: 2.1.4
2025-02-18 06:51:58,016:INFO:              jinja2: 3.1.5
2025-02-18 06:51:58,016:INFO:               scipy: 1.11.4
2025-02-18 06:51:58,016:INFO:              joblib: 1.3.2
2025-02-18 06:51:58,016:INFO:             sklearn: 1.4.2
2025-02-18 06:51:58,016:INFO:                pyod: 2.0.3
2025-02-18 06:51:58,016:INFO:            imblearn: 0.13.0
2025-02-18 06:51:58,016:INFO:   category_encoders: 2.7.0
2025-02-18 06:51:58,016:INFO:            lightgbm: 4.4.0
2025-02-18 06:51:58,017:INFO:               numba: 0.61.0
2025-02-18 06:51:58,017:INFO:            requests: 2.32.3
2025-02-18 06:51:58,017:INFO:          matplotlib: 3.7.5
2025-02-18 06:51:58,017:INFO:          scikitplot: 0.3.7
2025-02-18 06:51:58,017:INFO:         yellowbrick: 1.5
2025-02-18 06:51:58,017:INFO:              plotly: 6.0.0
2025-02-18 06:51:58,017:INFO:    plotly-resampler: Not installed
2025-02-18 06:51:58,017:INFO:             kaleido: 0.2.1
2025-02-18 06:51:58,017:INFO:           schemdraw: 0.15
2025-02-18 06:51:58,017:INFO:         statsmodels: 0.14.4
2025-02-18 06:51:58,017:INFO:              sktime: 0.26.0
2025-02-18 06:51:58,017:INFO:               tbats: 1.1.3
2025-02-18 06:51:58,017:INFO:            pmdarima: 2.0.4
2025-02-18 06:51:58,017:INFO:              psutil: 6.1.1
2025-02-18 06:51:58,017:INFO:          markupsafe: 3.0.2
2025-02-18 06:51:58,017:INFO:             pickle5: Not installed
2025-02-18 06:51:58,017:INFO:         cloudpickle: 3.1.1
2025-02-18 06:51:58,017:INFO:         deprecation: 2.1.0
2025-02-18 06:51:58,017:INFO:              xxhash: 3.5.0
2025-02-18 06:51:58,017:INFO:           wurlitzer: 3.1.1
2025-02-18 06:51:58,017:INFO:PyCaret optional dependencies:
2025-02-18 06:51:58,028:INFO:                shap: Not installed
2025-02-18 06:51:58,028:INFO:           interpret: Not installed
2025-02-18 06:51:58,028:INFO:                umap: 0.5.7
2025-02-18 06:51:58,028:INFO:     ydata_profiling: Not installed
2025-02-18 06:51:58,028:INFO:  explainerdashboard: Not installed
2025-02-18 06:51:58,028:INFO:             autoviz: Not installed
2025-02-18 06:51:58,028:INFO:           fairlearn: Not installed
2025-02-18 06:51:58,028:INFO:          deepchecks: Not installed
2025-02-18 06:51:58,028:INFO:             xgboost: Not installed
2025-02-18 06:51:58,028:INFO:            catboost: Not installed
2025-02-18 06:51:58,028:INFO:              kmodes: Not installed
2025-02-18 06:51:58,029:INFO:             mlxtend: Not installed
2025-02-18 06:51:58,029:INFO:       statsforecast: Not installed
2025-02-18 06:51:58,029:INFO:        tune_sklearn: Not installed
2025-02-18 06:51:58,029:INFO:                 ray: Not installed
2025-02-18 06:51:58,029:INFO:            hyperopt: Not installed
2025-02-18 06:51:58,029:INFO:              optuna: Not installed
2025-02-18 06:51:58,029:INFO:               skopt: Not installed
2025-02-18 06:51:58,029:INFO:              mlflow: Not installed
2025-02-18 06:51:58,029:INFO:              gradio: Not installed
2025-02-18 06:51:58,029:INFO:             fastapi: Not installed
2025-02-18 06:51:58,029:INFO:             uvicorn: Not installed
2025-02-18 06:51:58,029:INFO:              m2cgen: Not installed
2025-02-18 06:51:58,029:INFO:           evidently: Not installed
2025-02-18 06:51:58,029:INFO:               fugue: Not installed
2025-02-18 06:51:58,029:INFO:           streamlit: Not installed
2025-02-18 06:51:58,029:INFO:             prophet: Not installed
2025-02-18 06:51:58,029:INFO:None
2025-02-18 06:51:58,029:INFO:Set up data.
2025-02-18 06:51:58,059:INFO:Set up folding strategy.
2025-02-18 06:51:58,059:INFO:Set up train/test split.
2025-02-18 06:51:58,080:INFO:Set up index.
2025-02-18 06:51:58,081:INFO:Assigning column types.
2025-02-18 06:51:58,086:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-18 06:51:58,128:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-18 06:51:58,133:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-18 06:51:58,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,214:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-18 06:51:58,214:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-18 06:51:58,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,239:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-18 06:51:58,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-18 06:51:58,307:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,344:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-18 06:51:58,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,369:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-18 06:51:58,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,496:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:58,501:INFO:Preparing preprocessing pipeline...
2025-02-18 06:51:58,503:INFO:Set up label encoding.
2025-02-18 06:51:58,504:INFO:Set up simple imputation.
2025-02-18 06:51:58,507:INFO:Set up encoding of categorical features.
2025-02-18 06:51:58,507:INFO:Set up column name cleaning.
2025-02-18 06:51:58,647:INFO:Finished creating preprocessing pipeline.
2025-02-18 06:51:58,655:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-02-18 06:51:58,655:INFO:Creating final display dataframe.
2025-02-18 06:51:59,001:INFO:Setup _display_container:                     Description             Value
0                    Session id              1929
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (7032, 12)
5        Transformed data shape        (7032, 17)
6   Transformed train set shape        (4922, 17)
7    Transformed test set shape        (2110, 17)
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              d671
2025-02-18 06:51:59,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:59,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:59,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:59,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-18 06:51:59,503:INFO:setup() successfully completed in 1.57s...............
2025-02-18 06:52:21,175:INFO:Initializing compare_models()
2025-02-18 06:52:21,175:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-18 06:52:21,175:INFO:Checking exceptions
2025-02-18 06:52:21,185:INFO:Preparing display monitor
2025-02-18 06:52:21,225:INFO:Initializing Logistic Regression
2025-02-18 06:52:21,225:INFO:Total runtime is 0.0 minutes
2025-02-18 06:52:21,230:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:21,231:INFO:Initializing create_model()
2025-02-18 06:52:21,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:21,232:INFO:Checking exceptions
2025-02-18 06:52:21,233:INFO:Importing libraries
2025-02-18 06:52:21,233:INFO:Copying training dataset
2025-02-18 06:52:21,240:INFO:Defining folds
2025-02-18 06:52:21,240:INFO:Declaring metric variables
2025-02-18 06:52:21,247:INFO:Importing untrained model
2025-02-18 06:52:21,254:INFO:Logistic Regression Imported successfully
2025-02-18 06:52:21,263:INFO:Starting cross validation
2025-02-18 06:52:21,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:29,139:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-18 06:52:29,227:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,240:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,245:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-18 06:52:29,251:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,323:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-18 06:52:29,330:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,343:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,358:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,378:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-18 06:52:29,378:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-18 06:52:29,401:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-18 06:52:29,435:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-18 06:52:29,442:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,453:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,461:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,465:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,469:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,471:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,477:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,484:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,485:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,489:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,495:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,506:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,517:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,529:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,540:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,778:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-18 06:52:29,830:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,837:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,916:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-18 06:52:29,949:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,953:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,959:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:29,995:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-18 06:52:30,036:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,044:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,050:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,066:INFO:Calculating mean and std
2025-02-18 06:52:30,069:INFO:Creating metrics dataframe
2025-02-18 06:52:30,073:INFO:Uploading results into container
2025-02-18 06:52:30,075:INFO:Uploading model into container now
2025-02-18 06:52:30,076:INFO:_master_model_container: 1
2025-02-18 06:52:30,077:INFO:_display_container: 2
2025-02-18 06:52:30,078:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1929, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-18 06:52:30,078:INFO:create_model() successfully completed......................................
2025-02-18 06:52:30,178:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:30,179:INFO:Creating metrics dataframe
2025-02-18 06:52:30,190:INFO:Initializing K Neighbors Classifier
2025-02-18 06:52:30,190:INFO:Total runtime is 0.1494282325108846 minutes
2025-02-18 06:52:30,198:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:30,199:INFO:Initializing create_model()
2025-02-18 06:52:30,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:30,199:INFO:Checking exceptions
2025-02-18 06:52:30,199:INFO:Importing libraries
2025-02-18 06:52:30,200:INFO:Copying training dataset
2025-02-18 06:52:30,216:INFO:Defining folds
2025-02-18 06:52:30,216:INFO:Declaring metric variables
2025-02-18 06:52:30,226:INFO:Importing untrained model
2025-02-18 06:52:30,235:INFO:K Neighbors Classifier Imported successfully
2025-02-18 06:52:30,246:INFO:Starting cross validation
2025-02-18 06:52:30,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:30,763:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,767:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,768:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,769:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,769:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,771:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,773:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,774:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,774:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,778:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,780:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,780:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,781:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,782:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,783:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,784:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,784:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,788:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,791:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,792:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,792:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,792:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,793:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,795:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,969:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,974:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,978:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,983:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,988:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:30,993:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,005:INFO:Calculating mean and std
2025-02-18 06:52:31,008:INFO:Creating metrics dataframe
2025-02-18 06:52:31,012:INFO:Uploading results into container
2025-02-18 06:52:31,013:INFO:Uploading model into container now
2025-02-18 06:52:31,013:INFO:_master_model_container: 2
2025-02-18 06:52:31,014:INFO:_display_container: 2
2025-02-18 06:52:31,014:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-18 06:52:31,014:INFO:create_model() successfully completed......................................
2025-02-18 06:52:31,091:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:31,091:INFO:Creating metrics dataframe
2025-02-18 06:52:31,099:INFO:Initializing Naive Bayes
2025-02-18 06:52:31,099:INFO:Total runtime is 0.16456266244252524 minutes
2025-02-18 06:52:31,103:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:31,104:INFO:Initializing create_model()
2025-02-18 06:52:31,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:31,104:INFO:Checking exceptions
2025-02-18 06:52:31,104:INFO:Importing libraries
2025-02-18 06:52:31,104:INFO:Copying training dataset
2025-02-18 06:52:31,112:INFO:Defining folds
2025-02-18 06:52:31,112:INFO:Declaring metric variables
2025-02-18 06:52:31,118:INFO:Importing untrained model
2025-02-18 06:52:31,123:INFO:Naive Bayes Imported successfully
2025-02-18 06:52:31,134:INFO:Starting cross validation
2025-02-18 06:52:31,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:31,443:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,449:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,452:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,452:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,454:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,454:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,460:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,462:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,464:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,465:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,467:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,471:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,472:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,472:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,476:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,479:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,479:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,485:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,490:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,491:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,497:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,500:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,510:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,633:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,637:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,640:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,647:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,649:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,652:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:31,662:INFO:Calculating mean and std
2025-02-18 06:52:31,664:INFO:Creating metrics dataframe
2025-02-18 06:52:31,666:INFO:Uploading results into container
2025-02-18 06:52:31,667:INFO:Uploading model into container now
2025-02-18 06:52:31,667:INFO:_master_model_container: 3
2025-02-18 06:52:31,667:INFO:_display_container: 2
2025-02-18 06:52:31,668:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-18 06:52:31,668:INFO:create_model() successfully completed......................................
2025-02-18 06:52:31,765:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:31,765:INFO:Creating metrics dataframe
2025-02-18 06:52:31,779:INFO:Initializing Decision Tree Classifier
2025-02-18 06:52:31,780:INFO:Total runtime is 0.17592382828394573 minutes
2025-02-18 06:52:31,783:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:31,784:INFO:Initializing create_model()
2025-02-18 06:52:31,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:31,784:INFO:Checking exceptions
2025-02-18 06:52:31,784:INFO:Importing libraries
2025-02-18 06:52:31,784:INFO:Copying training dataset
2025-02-18 06:52:31,793:INFO:Defining folds
2025-02-18 06:52:31,794:INFO:Declaring metric variables
2025-02-18 06:52:31,799:INFO:Importing untrained model
2025-02-18 06:52:31,804:INFO:Decision Tree Classifier Imported successfully
2025-02-18 06:52:31,815:INFO:Starting cross validation
2025-02-18 06:52:31,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:32,114:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,115:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,115:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,117:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,124:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,125:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,126:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,126:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,129:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,129:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,131:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:32,131:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:32,132:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:32,132:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,134:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:32,135:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,136:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,136:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,136:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,137:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,139:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,140:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,140:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:32,143:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:32,143:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,145:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:32,145:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,147:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,149:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:32,150:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,157:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,305:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,309:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,310:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,313:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:32,315:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,315:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,318:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:32,322:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,337:INFO:Calculating mean and std
2025-02-18 06:52:32,339:INFO:Creating metrics dataframe
2025-02-18 06:52:32,341:INFO:Uploading results into container
2025-02-18 06:52:32,341:INFO:Uploading model into container now
2025-02-18 06:52:32,341:INFO:_master_model_container: 4
2025-02-18 06:52:32,341:INFO:_display_container: 2
2025-02-18 06:52:32,343:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1929, splitter='best')
2025-02-18 06:52:32,343:INFO:create_model() successfully completed......................................
2025-02-18 06:52:32,421:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:32,422:INFO:Creating metrics dataframe
2025-02-18 06:52:32,428:INFO:Initializing SVM - Linear Kernel
2025-02-18 06:52:32,429:INFO:Total runtime is 0.18673579295476278 minutes
2025-02-18 06:52:32,433:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:32,434:INFO:Initializing create_model()
2025-02-18 06:52:32,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:32,434:INFO:Checking exceptions
2025-02-18 06:52:32,434:INFO:Importing libraries
2025-02-18 06:52:32,434:INFO:Copying training dataset
2025-02-18 06:52:32,442:INFO:Defining folds
2025-02-18 06:52:32,442:INFO:Declaring metric variables
2025-02-18 06:52:32,450:INFO:Importing untrained model
2025-02-18 06:52:32,469:INFO:SVM - Linear Kernel Imported successfully
2025-02-18 06:52:32,485:INFO:Starting cross validation
2025-02-18 06:52:32,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:32,826:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,828:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,835:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,835:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,837:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,842:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,843:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,845:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,846:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,847:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,852:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,854:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,854:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,856:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,856:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,862:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,862:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,864:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,875:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,883:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,884:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,891:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:32,896:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,061:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,067:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,068:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,074:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,075:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,081:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,099:INFO:Calculating mean and std
2025-02-18 06:52:33,101:INFO:Creating metrics dataframe
2025-02-18 06:52:33,107:INFO:Uploading results into container
2025-02-18 06:52:33,108:INFO:Uploading model into container now
2025-02-18 06:52:33,140:INFO:_master_model_container: 5
2025-02-18 06:52:33,140:INFO:_display_container: 2
2025-02-18 06:52:33,141:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1929, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-18 06:52:33,141:INFO:create_model() successfully completed......................................
2025-02-18 06:52:33,221:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:33,221:INFO:Creating metrics dataframe
2025-02-18 06:52:33,229:INFO:Initializing Ridge Classifier
2025-02-18 06:52:33,229:INFO:Total runtime is 0.20006289879480998 minutes
2025-02-18 06:52:33,234:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:33,235:INFO:Initializing create_model()
2025-02-18 06:52:33,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:33,235:INFO:Checking exceptions
2025-02-18 06:52:33,235:INFO:Importing libraries
2025-02-18 06:52:33,235:INFO:Copying training dataset
2025-02-18 06:52:33,246:INFO:Defining folds
2025-02-18 06:52:33,246:INFO:Declaring metric variables
2025-02-18 06:52:33,251:INFO:Importing untrained model
2025-02-18 06:52:33,260:INFO:Ridge Classifier Imported successfully
2025-02-18 06:52:33,271:INFO:Starting cross validation
2025-02-18 06:52:33,275:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:33,578:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,582:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,582:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,583:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,586:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,588:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,589:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,590:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,592:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,593:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,594:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,597:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,597:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,598:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,599:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,600:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,604:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,605:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,606:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,607:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,608:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,609:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,610:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,756:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,759:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,763:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,766:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,767:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,772:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:33,792:INFO:Calculating mean and std
2025-02-18 06:52:33,793:INFO:Creating metrics dataframe
2025-02-18 06:52:33,795:INFO:Uploading results into container
2025-02-18 06:52:33,796:INFO:Uploading model into container now
2025-02-18 06:52:33,797:INFO:_master_model_container: 6
2025-02-18 06:52:33,797:INFO:_display_container: 2
2025-02-18 06:52:33,797:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1929, solver='auto',
                tol=0.0001)
2025-02-18 06:52:33,798:INFO:create_model() successfully completed......................................
2025-02-18 06:52:33,883:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:33,884:INFO:Creating metrics dataframe
2025-02-18 06:52:33,894:INFO:Initializing Random Forest Classifier
2025-02-18 06:52:33,894:INFO:Total runtime is 0.21114698251088462 minutes
2025-02-18 06:52:33,899:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:33,899:INFO:Initializing create_model()
2025-02-18 06:52:33,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:33,900:INFO:Checking exceptions
2025-02-18 06:52:33,900:INFO:Importing libraries
2025-02-18 06:52:33,900:INFO:Copying training dataset
2025-02-18 06:52:33,910:INFO:Defining folds
2025-02-18 06:52:33,910:INFO:Declaring metric variables
2025-02-18 06:52:33,915:INFO:Importing untrained model
2025-02-18 06:52:33,918:INFO:Random Forest Classifier Imported successfully
2025-02-18 06:52:33,929:INFO:Starting cross validation
2025-02-18 06:52:33,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:34,846:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,848:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,857:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,858:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,863:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:34,868:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,871:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,893:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,894:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,895:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,904:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,904:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,905:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:34,910:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:34,913:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,914:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,917:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,925:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,927:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,937:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,938:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,945:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,947:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,969:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,975:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:34,978:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:34,981:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,360:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,361:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,366:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,366:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,368:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:35,370:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,373:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,383:INFO:Calculating mean and std
2025-02-18 06:52:35,385:INFO:Creating metrics dataframe
2025-02-18 06:52:35,387:INFO:Uploading results into container
2025-02-18 06:52:35,388:INFO:Uploading model into container now
2025-02-18 06:52:35,388:INFO:_master_model_container: 7
2025-02-18 06:52:35,388:INFO:_display_container: 2
2025-02-18 06:52:35,390:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1929, verbose=0,
                       warm_start=False)
2025-02-18 06:52:35,390:INFO:create_model() successfully completed......................................
2025-02-18 06:52:35,462:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:35,462:INFO:Creating metrics dataframe
2025-02-18 06:52:35,471:INFO:Initializing Quadratic Discriminant Analysis
2025-02-18 06:52:35,471:INFO:Total runtime is 0.2374404271443685 minutes
2025-02-18 06:52:35,475:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:35,476:INFO:Initializing create_model()
2025-02-18 06:52:35,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:35,476:INFO:Checking exceptions
2025-02-18 06:52:35,476:INFO:Importing libraries
2025-02-18 06:52:35,476:INFO:Copying training dataset
2025-02-18 06:52:35,482:INFO:Defining folds
2025-02-18 06:52:35,482:INFO:Declaring metric variables
2025-02-18 06:52:35,485:INFO:Importing untrained model
2025-02-18 06:52:35,490:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-18 06:52:35,501:INFO:Starting cross validation
2025-02-18 06:52:35,503:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:35,749:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-18 06:52:35,749:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-18 06:52:35,765:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-18 06:52:35,777:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-18 06:52:35,778:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-18 06:52:35,780:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-18 06:52:35,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-18 06:52:35,796:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-18 06:52:35,840:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,846:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,850:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,860:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,860:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,860:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,863:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,871:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,874:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,874:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,874:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,874:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,878:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,880:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,885:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,885:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,888:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,889:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,893:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,894:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,895:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,905:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,907:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:35,908:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,005:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-18 06:52:36,021:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-18 06:52:36,058:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,065:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,068:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,074:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,076:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,081:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,102:INFO:Calculating mean and std
2025-02-18 06:52:36,104:INFO:Creating metrics dataframe
2025-02-18 06:52:36,107:INFO:Uploading results into container
2025-02-18 06:52:36,108:INFO:Uploading model into container now
2025-02-18 06:52:36,108:INFO:_master_model_container: 8
2025-02-18 06:52:36,109:INFO:_display_container: 2
2025-02-18 06:52:36,109:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-18 06:52:36,109:INFO:create_model() successfully completed......................................
2025-02-18 06:52:36,191:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:36,191:INFO:Creating metrics dataframe
2025-02-18 06:52:36,204:INFO:Initializing Ada Boost Classifier
2025-02-18 06:52:36,205:INFO:Total runtime is 0.24967231750488283 minutes
2025-02-18 06:52:36,212:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:36,213:INFO:Initializing create_model()
2025-02-18 06:52:36,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:36,213:INFO:Checking exceptions
2025-02-18 06:52:36,213:INFO:Importing libraries
2025-02-18 06:52:36,214:INFO:Copying training dataset
2025-02-18 06:52:36,223:INFO:Defining folds
2025-02-18 06:52:36,223:INFO:Declaring metric variables
2025-02-18 06:52:36,230:INFO:Importing untrained model
2025-02-18 06:52:36,242:INFO:Ada Boost Classifier Imported successfully
2025-02-18 06:52:36,262:INFO:Starting cross validation
2025-02-18 06:52:36,265:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:36,482:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-18 06:52:36,486:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-18 06:52:36,500:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-18 06:52:36,515:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-18 06:52:36,518:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-18 06:52:36,521:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-18 06:52:36,553:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-18 06:52:36,555:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-18 06:52:36,572:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,583:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,586:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,591:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:36,594:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,596:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,600:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,600:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:36,603:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,606:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,608:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,612:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,612:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,613:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,618:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:36,619:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:36,619:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,622:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,623:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,625:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:36,626:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,628:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:36,630:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,632:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,635:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,640:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,647:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,649:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,652:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:36,652:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:36,655:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,655:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,712:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-18 06:52:36,724:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-18 06:52:36,751:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,755:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,757:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:36,760:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,769:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,774:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,777:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:36,779:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:36,795:INFO:Calculating mean and std
2025-02-18 06:52:36,796:INFO:Creating metrics dataframe
2025-02-18 06:52:36,801:INFO:Uploading results into container
2025-02-18 06:52:36,803:INFO:Uploading model into container now
2025-02-18 06:52:36,805:INFO:_master_model_container: 9
2025-02-18 06:52:36,806:INFO:_display_container: 2
2025-02-18 06:52:36,806:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1929)
2025-02-18 06:52:36,807:INFO:create_model() successfully completed......................................
2025-02-18 06:52:36,893:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:36,893:INFO:Creating metrics dataframe
2025-02-18 06:52:36,904:INFO:Initializing Gradient Boosting Classifier
2025-02-18 06:52:36,905:INFO:Total runtime is 0.2613355080286662 minutes
2025-02-18 06:52:36,909:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:36,910:INFO:Initializing create_model()
2025-02-18 06:52:36,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:36,910:INFO:Checking exceptions
2025-02-18 06:52:36,910:INFO:Importing libraries
2025-02-18 06:52:36,910:INFO:Copying training dataset
2025-02-18 06:52:36,918:INFO:Defining folds
2025-02-18 06:52:36,919:INFO:Declaring metric variables
2025-02-18 06:52:36,927:INFO:Importing untrained model
2025-02-18 06:52:36,931:INFO:Gradient Boosting Classifier Imported successfully
2025-02-18 06:52:36,947:INFO:Starting cross validation
2025-02-18 06:52:36,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:38,207:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,215:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,220:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,226:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:38,227:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,230:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,231:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,234:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:38,240:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,242:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,245:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,248:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:38,256:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,261:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,267:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:38,274:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,527:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,531:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,536:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,537:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,542:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,544:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:38,550:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,552:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,555:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,557:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:38,560:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,563:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,573:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:38,581:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,032:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,038:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,042:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,045:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,084:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,091:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,096:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,104:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,134:INFO:Calculating mean and std
2025-02-18 06:52:39,139:INFO:Creating metrics dataframe
2025-02-18 06:52:39,144:INFO:Uploading results into container
2025-02-18 06:52:39,145:INFO:Uploading model into container now
2025-02-18 06:52:39,146:INFO:_master_model_container: 10
2025-02-18 06:52:39,146:INFO:_display_container: 2
2025-02-18 06:52:39,147:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1929, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-18 06:52:39,147:INFO:create_model() successfully completed......................................
2025-02-18 06:52:39,246:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:39,247:INFO:Creating metrics dataframe
2025-02-18 06:52:39,258:INFO:Initializing Linear Discriminant Analysis
2025-02-18 06:52:39,258:INFO:Total runtime is 0.3005544940630595 minutes
2025-02-18 06:52:39,263:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:39,263:INFO:Initializing create_model()
2025-02-18 06:52:39,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:39,263:INFO:Checking exceptions
2025-02-18 06:52:39,263:INFO:Importing libraries
2025-02-18 06:52:39,263:INFO:Copying training dataset
2025-02-18 06:52:39,271:INFO:Defining folds
2025-02-18 06:52:39,272:INFO:Declaring metric variables
2025-02-18 06:52:39,276:INFO:Importing untrained model
2025-02-18 06:52:39,281:INFO:Linear Discriminant Analysis Imported successfully
2025-02-18 06:52:39,310:INFO:Starting cross validation
2025-02-18 06:52:39,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:39,637:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,649:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,649:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,655:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,658:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,659:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,660:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,660:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,665:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,666:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,668:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,668:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,670:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,672:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,674:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,678:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,678:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,678:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,679:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,682:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,683:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,686:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,686:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,690:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,691:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,691:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,698:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,702:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,703:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,707:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,712:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,836:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,840:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,842:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,846:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,847:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,850:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,851:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:39,854:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:39,871:INFO:Calculating mean and std
2025-02-18 06:52:39,873:INFO:Creating metrics dataframe
2025-02-18 06:52:39,875:INFO:Uploading results into container
2025-02-18 06:52:39,876:INFO:Uploading model into container now
2025-02-18 06:52:39,876:INFO:_master_model_container: 11
2025-02-18 06:52:39,876:INFO:_display_container: 2
2025-02-18 06:52:39,877:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-18 06:52:39,877:INFO:create_model() successfully completed......................................
2025-02-18 06:52:39,962:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:39,962:INFO:Creating metrics dataframe
2025-02-18 06:52:39,974:INFO:Initializing Extra Trees Classifier
2025-02-18 06:52:39,975:INFO:Total runtime is 0.3125059167544047 minutes
2025-02-18 06:52:39,979:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:39,979:INFO:Initializing create_model()
2025-02-18 06:52:39,981:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:39,981:INFO:Checking exceptions
2025-02-18 06:52:39,981:INFO:Importing libraries
2025-02-18 06:52:39,981:INFO:Copying training dataset
2025-02-18 06:52:39,989:INFO:Defining folds
2025-02-18 06:52:39,989:INFO:Declaring metric variables
2025-02-18 06:52:39,996:INFO:Importing untrained model
2025-02-18 06:52:40,004:INFO:Extra Trees Classifier Imported successfully
2025-02-18 06:52:40,015:INFO:Starting cross validation
2025-02-18 06:52:40,018:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:40,791:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,803:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,804:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,810:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,816:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,820:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,821:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,825:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,830:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,833:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,833:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,837:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,848:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,851:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,883:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,893:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,906:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,943:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,952:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,960:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,961:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,970:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:40,977:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:41,317:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:41,318:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:41,322:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:41,324:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:41,328:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:41,330:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:41,357:INFO:Calculating mean and std
2025-02-18 06:52:41,359:INFO:Creating metrics dataframe
2025-02-18 06:52:41,362:INFO:Uploading results into container
2025-02-18 06:52:41,363:INFO:Uploading model into container now
2025-02-18 06:52:41,364:INFO:_master_model_container: 12
2025-02-18 06:52:41,364:INFO:_display_container: 2
2025-02-18 06:52:41,364:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1929, verbose=0,
                     warm_start=False)
2025-02-18 06:52:41,364:INFO:create_model() successfully completed......................................
2025-02-18 06:52:41,451:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:41,451:INFO:Creating metrics dataframe
2025-02-18 06:52:41,461:INFO:Initializing Light Gradient Boosting Machine
2025-02-18 06:52:41,463:INFO:Total runtime is 0.3372770587603251 minutes
2025-02-18 06:52:41,470:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:41,470:INFO:Initializing create_model()
2025-02-18 06:52:41,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:41,471:INFO:Checking exceptions
2025-02-18 06:52:41,471:INFO:Importing libraries
2025-02-18 06:52:41,471:INFO:Copying training dataset
2025-02-18 06:52:41,477:INFO:Defining folds
2025-02-18 06:52:41,477:INFO:Declaring metric variables
2025-02-18 06:52:41,484:INFO:Importing untrained model
2025-02-18 06:52:41,490:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-18 06:52:41,503:INFO:Starting cross validation
2025-02-18 06:52:41,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:42,363:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,366:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,370:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,374:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,377:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,380:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:42,381:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,383:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:42,387:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:42,389:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,389:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,392:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,397:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,407:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,413:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:42,418:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,534:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,545:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,551:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:42,573:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,589:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,602:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,607:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:42,616:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,625:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,637:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,645:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:42,652:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,741:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,752:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,759:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:42,764:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,919:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,920:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,923:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:42,928:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,929:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,934:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:42,939:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:42,964:INFO:Calculating mean and std
2025-02-18 06:52:42,966:INFO:Creating metrics dataframe
2025-02-18 06:52:42,971:INFO:Uploading results into container
2025-02-18 06:52:42,973:INFO:Uploading model into container now
2025-02-18 06:52:42,974:INFO:_master_model_container: 13
2025-02-18 06:52:42,974:INFO:_display_container: 2
2025-02-18 06:52:42,975:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1929, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-18 06:52:42,975:INFO:create_model() successfully completed......................................
2025-02-18 06:52:43,060:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:43,060:INFO:Creating metrics dataframe
2025-02-18 06:52:43,073:INFO:Initializing Dummy Classifier
2025-02-18 06:52:43,073:INFO:Total runtime is 0.36414196093877155 minutes
2025-02-18 06:52:43,079:INFO:SubProcess create_model() called ==================================
2025-02-18 06:52:43,079:INFO:Initializing create_model()
2025-02-18 06:52:43,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286D61B2020>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:43,080:INFO:Checking exceptions
2025-02-18 06:52:43,080:INFO:Importing libraries
2025-02-18 06:52:43,080:INFO:Copying training dataset
2025-02-18 06:52:43,087:INFO:Defining folds
2025-02-18 06:52:43,087:INFO:Declaring metric variables
2025-02-18 06:52:43,093:INFO:Importing untrained model
2025-02-18 06:52:43,100:INFO:Dummy Classifier Imported successfully
2025-02-18 06:52:43,115:INFO:Starting cross validation
2025-02-18 06:52:43,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-18 06:52:43,445:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,456:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,461:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:43,468:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,495:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,496:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,506:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,508:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,510:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,512:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:43,513:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:43,519:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,519:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,520:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,525:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:43,535:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,544:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,554:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,556:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,560:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,562:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:43,567:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,569:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,575:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:43,575:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:43,580:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,581:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,581:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,588:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:43,596:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,702:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,708:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,711:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:43,715:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,726:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,733:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,735:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-18 06:52:43,737:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-18 06:52:43,758:INFO:Calculating mean and std
2025-02-18 06:52:43,760:INFO:Creating metrics dataframe
2025-02-18 06:52:43,763:INFO:Uploading results into container
2025-02-18 06:52:43,764:INFO:Uploading model into container now
2025-02-18 06:52:43,764:INFO:_master_model_container: 14
2025-02-18 06:52:43,764:INFO:_display_container: 2
2025-02-18 06:52:43,765:INFO:DummyClassifier(constant=None, random_state=1929, strategy='prior')
2025-02-18 06:52:43,766:INFO:create_model() successfully completed......................................
2025-02-18 06:52:43,856:INFO:SubProcess create_model() end ==================================
2025-02-18 06:52:43,856:INFO:Creating metrics dataframe
2025-02-18 06:52:43,890:INFO:Initializing create_model()
2025-02-18 06:52:43,890:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1929, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-18 06:52:43,890:INFO:Checking exceptions
2025-02-18 06:52:43,893:INFO:Importing libraries
2025-02-18 06:52:43,894:INFO:Copying training dataset
2025-02-18 06:52:43,909:INFO:Defining folds
2025-02-18 06:52:43,909:INFO:Declaring metric variables
2025-02-18 06:52:43,910:INFO:Importing untrained model
2025-02-18 06:52:43,911:INFO:Declaring custom model
2025-02-18 06:52:43,913:INFO:Logistic Regression Imported successfully
2025-02-18 06:52:43,917:INFO:Cross validation set to False
2025-02-18 06:52:43,917:INFO:Fitting Model
2025-02-18 06:52:44,692:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2025-02-18 06:52:44,692:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2025-02-18 06:52:44,692:WARNING:
2025-02-18 06:52:44,692:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2025-02-18 06:52:44,692:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2025-02-18 06:52:44,693:WARNING:Please also refer to the documentation for alternative solver options:
2025-02-18 06:52:44,693:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2025-02-18 06:52:44,693:WARNING:  n_iter_i = _check_optimize_result(
2025-02-18 06:52:44,694:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1929, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-18 06:52:44,694:INFO:create_model() successfully completed......................................
2025-02-18 06:52:44,820:INFO:_master_model_container: 14
2025-02-18 06:52:44,821:INFO:_display_container: 2
2025-02-18 06:52:44,822:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1929, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-18 06:52:44,822:INFO:compare_models() successfully completed......................................
2025-02-18 06:54:18,443:INFO:Initializing predict_model()
2025-02-18 06:54:18,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1929, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000286D609C5E0>)
2025-02-18 06:54:18,444:INFO:Checking exceptions
2025-02-18 06:54:18,444:INFO:Preloading libraries
2025-02-18 06:54:39,015:INFO:Initializing predict_model()
2025-02-18 06:54:39,015:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1929, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000286D8C84820>)
2025-02-18 06:54:39,015:INFO:Checking exceptions
2025-02-18 06:54:39,016:INFO:Preloading libraries
2025-02-18 06:57:45,599:INFO:Initializing predict_model()
2025-02-18 06:57:45,600:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1929, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000286DA0C5870>)
2025-02-18 06:57:45,600:INFO:Checking exceptions
2025-02-18 06:57:45,600:INFO:Preloading libraries
2025-02-18 06:57:45,603:INFO:Set up data.
2025-02-18 06:57:45,606:INFO:Set up index.
2025-02-18 06:58:19,616:INFO:Initializing predict_model()
2025-02-18 06:58:19,617:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1929, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000286DA0C7A30>)
2025-02-18 06:58:19,617:INFO:Checking exceptions
2025-02-18 06:58:19,617:INFO:Preloading libraries
2025-02-18 06:58:19,620:INFO:Set up data.
2025-02-18 06:58:19,635:INFO:Set up index.
2025-02-18 06:58:19,741:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
2025-02-18 06:58:19,741:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
2025-02-18 06:58:19,741:WARNING:    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
2025-02-18 06:58:19,741:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
2025-02-18 06:58:19,741:WARNING:    return self.score_func(y_true, y_pred, **kwargs)
2025-02-18 06:58:19,741:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
2025-02-18 06:58:19,741:WARNING:    return func(*args, **kwargs)
2025-02-18 06:58:19,742:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
2025-02-18 06:58:19,742:WARNING:    return _average_binary_score(
2025-02-18 06:58:19,742:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
2025-02-18 06:58:19,742:WARNING:    return binary_metric(y_true, y_score, sample_weight=sample_weight)
2025-02-18 06:58:19,742:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
2025-02-18 06:58:19,742:WARNING:    raise ValueError(
2025-02-18 06:58:19,742:WARNING:ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.
2025-02-18 06:58:19,742:WARNING:
2025-02-18 06:58:19,742:WARNING:During handling of the above exception, another exception occurred:
2025-02-18 06:58:19,742:WARNING:
2025-02-18 06:58:19,742:WARNING:Traceback (most recent call last):
2025-02-18 06:58:19,742:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
2025-02-18 06:58:19,742:WARNING:    calculated_metric = score_func(y_test, target, **kwargs)
2025-02-18 06:58:19,742:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
2025-02-18 06:58:19,742:WARNING:    return self.score_func(y_true, y_pred, **kwargs)
2025-02-18 06:58:19,742:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
2025-02-18 06:58:19,742:WARNING:    return func(*args, **kwargs)
2025-02-18 06:58:19,742:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
2025-02-18 06:58:19,742:WARNING:    return _average_binary_score(
2025-02-18 06:58:19,742:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
2025-02-18 06:58:19,742:WARNING:    return binary_metric(y_true, y_score, sample_weight=sample_weight)
2025-02-18 06:58:19,742:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
2025-02-18 06:58:19,742:WARNING:    raise ValueError(
2025-02-18 06:58:19,742:WARNING:ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.
2025-02-18 06:58:19,742:WARNING:
2025-02-18 06:58:19,742:WARNING:  warnings.warn(traceback.format_exc())
2025-02-18 06:58:19,745:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
2025-02-18 06:58:19,746:WARNING:  warnings.warn(
2025-02-18 06:58:19,747:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
2025-02-18 06:58:19,747:WARNING:  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
2025-02-18 06:58:19,748:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
2025-02-18 06:58:19,748:WARNING:  warnings.warn(
2025-02-18 06:58:19,749:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
2025-02-18 06:58:19,749:WARNING:  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
2025-02-18 06:58:19,751:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
2025-02-18 06:58:19,751:WARNING:  warnings.warn(
2025-02-18 06:58:19,752:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
2025-02-18 06:58:19,752:WARNING:  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
2025-02-18 06:58:19,753:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
2025-02-18 06:58:19,753:WARNING:  warnings.warn(
2025-02-18 06:58:19,753:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
2025-02-18 06:58:19,754:WARNING:  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)
2025-02-18 06:58:19,755:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
2025-02-18 06:58:19,755:WARNING:  warnings.warn(
2025-02-18 06:59:02,853:INFO:Initializing save_model()
2025-02-18 06:59:02,853:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1929, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-18 06:59:02,854:INFO:Adding model into prep_pipe
2025-02-18 06:59:02,866:INFO:LDA.pkl saved in current working directory
2025-02-18 06:59:02,875:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1929,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-18 06:59:02,876:INFO:save_model() successfully completed......................................
2025-02-20 08:03:01,183:INFO:Initializing load_model()
2025-02-20 08:03:01,189:INFO:load_model(model_name=LDA, platform=None, authentication=None, verbose=True)
2025-02-20 08:03:11,719:INFO:Initializing predict_model()
2025-02-20 08:03:11,719:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286D61B2E30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1929,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000286DAD62710>)
2025-02-20 08:03:11,719:INFO:Checking exceptions
2025-02-20 08:03:11,719:INFO:Preloading libraries
2025-02-20 08:03:11,778:INFO:Set up data.
2025-02-20 08:03:11,827:INFO:Set up index.
2025-02-20 12:00:08,836:INFO:PyCaret ClassificationExperiment
2025-02-20 12:00:08,888:INFO:Logging name: clf-default-name
2025-02-20 12:00:08,888:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-20 12:00:08,888:INFO:version 3.3.2
2025-02-20 12:00:08,888:INFO:Initializing setup()
2025-02-20 12:00:08,888:INFO:self.USI: b633
2025-02-20 12:00:08,888:INFO:self._variable_keys: {'y_test', 'exp_id', 'gpu_n_jobs_param', 'X_test', 'is_multiclass', 'idx', 'USI', 'seed', 'y', 'exp_name_log', 'log_plots_param', 'X_train', 'logging_param', 'pipeline', 'html_param', 'target_param', '_ml_usecase', 'data', '_available_plots', 'X', 'fold_generator', 'fold_groups_param', 'fix_imbalance', 'gpu_param', 'y_train', 'fold_shuffle_param', 'n_jobs_param', 'memory'}
2025-02-20 12:00:08,899:INFO:Checking environment
2025-02-20 12:00:08,899:INFO:python_version: 3.10.16
2025-02-20 12:00:08,899:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-20 12:00:08,910:INFO:machine: AMD64
2025-02-20 12:00:08,932:INFO:platform: Windows-10-10.0.22631-SP0
2025-02-20 12:00:09,072:INFO:Memory: svmem(total=8299257856, available=762810368, percent=90.8, used=7536447488, free=762810368)
2025-02-20 12:00:09,083:INFO:Physical Core: 4
2025-02-20 12:00:09,083:INFO:Logical Core: 8
2025-02-20 12:00:09,083:INFO:Checking libraries
2025-02-20 12:00:09,093:INFO:System:
2025-02-20 12:00:09,094:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-20 12:00:09,094:INFO:executable: c:\Users\ksaig\anaconda3\envs\regis\python.exe
2025-02-20 12:00:09,095:INFO:   machine: Windows-10-10.0.22631-SP0
2025-02-20 12:00:09,095:INFO:PyCaret required dependencies:
2025-02-20 12:00:09,169:INFO:                 pip: 25.0
2025-02-20 12:00:09,169:INFO:          setuptools: 75.8.0
2025-02-20 12:00:09,169:INFO:             pycaret: 3.3.2
2025-02-20 12:00:09,169:INFO:             IPython: 8.32.0
2025-02-20 12:00:09,170:INFO:          ipywidgets: 8.1.5
2025-02-20 12:00:09,170:INFO:                tqdm: 4.67.1
2025-02-20 12:00:09,170:INFO:               numpy: 1.26.4
2025-02-20 12:00:09,170:INFO:              pandas: 2.1.4
2025-02-20 12:00:09,170:INFO:              jinja2: 3.1.5
2025-02-20 12:00:09,170:INFO:               scipy: 1.11.4
2025-02-20 12:00:09,170:INFO:              joblib: 1.3.2
2025-02-20 12:00:09,170:INFO:             sklearn: 1.4.2
2025-02-20 12:00:09,170:INFO:                pyod: 2.0.3
2025-02-20 12:00:09,171:INFO:            imblearn: 0.13.0
2025-02-20 12:00:09,171:INFO:   category_encoders: 2.7.0
2025-02-20 12:00:09,171:INFO:            lightgbm: 4.4.0
2025-02-20 12:00:09,171:INFO:               numba: 0.61.0
2025-02-20 12:00:09,171:INFO:            requests: 2.32.3
2025-02-20 12:00:09,171:INFO:          matplotlib: 3.7.5
2025-02-20 12:00:09,171:INFO:          scikitplot: 0.3.7
2025-02-20 12:00:09,171:INFO:         yellowbrick: 1.5
2025-02-20 12:00:09,171:INFO:              plotly: 6.0.0
2025-02-20 12:00:09,172:INFO:    plotly-resampler: Not installed
2025-02-20 12:00:09,172:INFO:             kaleido: 0.2.1
2025-02-20 12:00:09,172:INFO:           schemdraw: 0.15
2025-02-20 12:00:09,172:INFO:         statsmodels: 0.14.4
2025-02-20 12:00:09,172:INFO:              sktime: 0.26.0
2025-02-20 12:00:09,172:INFO:               tbats: 1.1.3
2025-02-20 12:00:09,172:INFO:            pmdarima: 2.0.4
2025-02-20 12:00:09,172:INFO:              psutil: 6.1.1
2025-02-20 12:00:09,172:INFO:          markupsafe: 3.0.2
2025-02-20 12:00:09,172:INFO:             pickle5: Not installed
2025-02-20 12:00:09,173:INFO:         cloudpickle: 3.1.1
2025-02-20 12:00:09,173:INFO:         deprecation: 2.1.0
2025-02-20 12:00:09,173:INFO:              xxhash: 3.5.0
2025-02-20 12:00:09,173:INFO:           wurlitzer: 3.1.1
2025-02-20 12:00:09,173:INFO:PyCaret optional dependencies:
2025-02-20 12:00:09,173:INFO:                shap: Not installed
2025-02-20 12:00:09,173:INFO:           interpret: Not installed
2025-02-20 12:00:09,173:INFO:                umap: 0.5.7
2025-02-20 12:00:09,173:INFO:     ydata_profiling: Not installed
2025-02-20 12:00:09,173:INFO:  explainerdashboard: Not installed
2025-02-20 12:00:09,174:INFO:             autoviz: Not installed
2025-02-20 12:00:09,174:INFO:           fairlearn: Not installed
2025-02-20 12:00:09,174:INFO:          deepchecks: Not installed
2025-02-20 12:00:09,174:INFO:             xgboost: Not installed
2025-02-20 12:00:09,174:INFO:            catboost: Not installed
2025-02-20 12:00:09,174:INFO:              kmodes: Not installed
2025-02-20 12:00:09,174:INFO:             mlxtend: Not installed
2025-02-20 12:00:09,174:INFO:       statsforecast: Not installed
2025-02-20 12:00:09,174:INFO:        tune_sklearn: Not installed
2025-02-20 12:00:09,174:INFO:                 ray: Not installed
2025-02-20 12:00:09,174:INFO:            hyperopt: Not installed
2025-02-20 12:00:09,175:INFO:              optuna: Not installed
2025-02-20 12:00:09,175:INFO:               skopt: Not installed
2025-02-20 12:00:09,175:INFO:              mlflow: Not installed
2025-02-20 12:00:09,175:INFO:              gradio: Not installed
2025-02-20 12:00:09,175:INFO:             fastapi: Not installed
2025-02-20 12:00:09,175:INFO:             uvicorn: Not installed
2025-02-20 12:00:09,175:INFO:              m2cgen: Not installed
2025-02-20 12:00:09,175:INFO:           evidently: Not installed
2025-02-20 12:00:09,175:INFO:               fugue: Not installed
2025-02-20 12:00:09,175:INFO:           streamlit: Not installed
2025-02-20 12:00:09,175:INFO:             prophet: Not installed
2025-02-20 12:00:09,176:INFO:None
2025-02-20 12:00:09,210:INFO:Set up data.
2025-02-20 12:00:10,335:INFO:Set up folding strategy.
2025-02-20 12:00:10,350:INFO:Set up train/test split.
2025-02-20 12:00:10,425:INFO:Set up index.
2025-02-20 12:00:10,453:INFO:Assigning column types.
2025-02-20 12:00:10,468:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-20 12:00:10,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 12:00:10,552:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:00:10,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:10,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:10,656:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 12:00:10,660:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:00:10,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:10,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:10,693:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-20 12:00:10,742:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:00:10,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:10,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:10,857:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:00:10,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:10,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:10,897:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-20 12:00:10,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:10,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:11,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:11,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:11,082:INFO:Preparing preprocessing pipeline...
2025-02-20 12:00:11,084:INFO:Set up label encoding.
2025-02-20 12:00:11,086:INFO:Set up simple imputation.
2025-02-20 12:00:11,092:INFO:Set up encoding of categorical features.
2025-02-20 12:00:11,095:INFO:Set up column name cleaning.
2025-02-20 12:00:11,368:INFO:Finished creating preprocessing pipeline.
2025-02-20 12:00:11,385:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-02-20 12:00:11,385:INFO:Creating final display dataframe.
2025-02-20 12:00:11,816:INFO:Setup _display_container:                     Description             Value
0                    Session id              1864
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (7032, 12)
5        Transformed data shape        (7032, 17)
6   Transformed train set shape        (4922, 17)
7    Transformed test set shape        (2110, 17)
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              b633
2025-02-20 12:00:11,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:11,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:12,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:12,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:00:12,035:INFO:setup() successfully completed in 4.35s...............
2025-02-20 12:00:12,097:INFO:Initializing compare_models()
2025-02-20 12:00:12,098:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-20 12:00:12,098:INFO:Checking exceptions
2025-02-20 12:00:12,110:INFO:Preparing display monitor
2025-02-20 12:00:12,167:INFO:Initializing Logistic Regression
2025-02-20 12:00:12,167:INFO:Total runtime is 1.6216437021891276e-05 minutes
2025-02-20 12:00:12,174:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:12,177:INFO:Initializing create_model()
2025-02-20 12:00:12,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:12,178:INFO:Checking exceptions
2025-02-20 12:00:12,178:INFO:Importing libraries
2025-02-20 12:00:12,178:INFO:Copying training dataset
2025-02-20 12:00:12,185:INFO:Defining folds
2025-02-20 12:00:12,185:INFO:Declaring metric variables
2025-02-20 12:00:12,193:INFO:Importing untrained model
2025-02-20 12:00:12,200:INFO:Logistic Regression Imported successfully
2025-02-20 12:00:12,213:INFO:Starting cross validation
2025-02-20 12:00:12,221:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:21,426:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:00:21,582:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,597:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,606:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,613:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:00:21,651:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:00:21,726:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:00:21,742:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,742:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:00:21,742:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,774:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,821:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,836:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:00:21,852:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,868:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,883:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,883:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,883:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,899:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,947:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,962:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,983:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:21,996:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:00:22,110:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,126:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,136:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,284:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:00:22,348:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,373:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,388:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,531:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:00:22,565:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,580:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,582:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,598:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:00:22,631:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,646:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,647:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:22,664:INFO:Calculating mean and std
2025-02-20 12:00:22,664:INFO:Creating metrics dataframe
2025-02-20 12:00:22,664:INFO:Uploading results into container
2025-02-20 12:00:22,664:INFO:Uploading model into container now
2025-02-20 12:00:22,664:INFO:_master_model_container: 1
2025-02-20 12:00:22,664:INFO:_display_container: 2
2025-02-20 12:00:22,664:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1864, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 12:00:22,664:INFO:create_model() successfully completed......................................
2025-02-20 12:00:23,531:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:23,531:INFO:Creating metrics dataframe
2025-02-20 12:00:23,547:INFO:Initializing K Neighbors Classifier
2025-02-20 12:00:23,547:INFO:Total runtime is 0.18969141244888307 minutes
2025-02-20 12:00:23,562:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:23,562:INFO:Initializing create_model()
2025-02-20 12:00:23,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:23,562:INFO:Checking exceptions
2025-02-20 12:00:23,562:INFO:Importing libraries
2025-02-20 12:00:23,562:INFO:Copying training dataset
2025-02-20 12:00:23,564:INFO:Defining folds
2025-02-20 12:00:23,564:INFO:Declaring metric variables
2025-02-20 12:00:23,564:INFO:Importing untrained model
2025-02-20 12:00:23,564:INFO:K Neighbors Classifier Imported successfully
2025-02-20 12:00:23,584:INFO:Starting cross validation
2025-02-20 12:00:23,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:24,147:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,162:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,163:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,163:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,180:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,180:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,180:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,196:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,212:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,213:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,214:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,223:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,223:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,223:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,223:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,230:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,230:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,230:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,230:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,246:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,246:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,246:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,246:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,263:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,379:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,379:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,379:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,379:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,379:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,396:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,411:INFO:Calculating mean and std
2025-02-20 12:00:24,412:INFO:Creating metrics dataframe
2025-02-20 12:00:24,415:INFO:Uploading results into container
2025-02-20 12:00:24,415:INFO:Uploading model into container now
2025-02-20 12:00:24,416:INFO:_master_model_container: 2
2025-02-20 12:00:24,416:INFO:_display_container: 2
2025-02-20 12:00:24,416:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-20 12:00:24,416:INFO:create_model() successfully completed......................................
2025-02-20 12:00:24,530:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:24,530:INFO:Creating metrics dataframe
2025-02-20 12:00:24,546:INFO:Initializing Naive Bayes
2025-02-20 12:00:24,546:INFO:Total runtime is 0.2063478668530782 minutes
2025-02-20 12:00:24,546:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:24,546:INFO:Initializing create_model()
2025-02-20 12:00:24,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:24,546:INFO:Checking exceptions
2025-02-20 12:00:24,546:INFO:Importing libraries
2025-02-20 12:00:24,546:INFO:Copying training dataset
2025-02-20 12:00:24,546:INFO:Defining folds
2025-02-20 12:00:24,546:INFO:Declaring metric variables
2025-02-20 12:00:24,563:INFO:Importing untrained model
2025-02-20 12:00:24,563:INFO:Naive Bayes Imported successfully
2025-02-20 12:00:24,578:INFO:Starting cross validation
2025-02-20 12:00:24,578:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:24,846:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,862:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,862:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,862:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,862:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,862:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,862:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,894:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,896:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,896:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,896:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,913:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,929:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,929:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:24,929:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,020:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,024:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,025:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,029:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,029:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,029:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,045:INFO:Calculating mean and std
2025-02-20 12:00:25,045:INFO:Creating metrics dataframe
2025-02-20 12:00:25,045:INFO:Uploading results into container
2025-02-20 12:00:25,045:INFO:Uploading model into container now
2025-02-20 12:00:25,045:INFO:_master_model_container: 3
2025-02-20 12:00:25,045:INFO:_display_container: 2
2025-02-20 12:00:25,045:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-20 12:00:25,045:INFO:create_model() successfully completed......................................
2025-02-20 12:00:25,163:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:25,163:INFO:Creating metrics dataframe
2025-02-20 12:00:25,179:INFO:Initializing Decision Tree Classifier
2025-02-20 12:00:25,179:INFO:Total runtime is 0.2168932557106018 minutes
2025-02-20 12:00:25,179:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:25,179:INFO:Initializing create_model()
2025-02-20 12:00:25,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:25,179:INFO:Checking exceptions
2025-02-20 12:00:25,179:INFO:Importing libraries
2025-02-20 12:00:25,179:INFO:Copying training dataset
2025-02-20 12:00:25,179:INFO:Defining folds
2025-02-20 12:00:25,179:INFO:Declaring metric variables
2025-02-20 12:00:25,195:INFO:Importing untrained model
2025-02-20 12:00:25,195:INFO:Decision Tree Classifier Imported successfully
2025-02-20 12:00:25,212:INFO:Starting cross validation
2025-02-20 12:00:25,215:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:25,480:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,480:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,480:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,496:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,496:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,499:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,500:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,501:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,502:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:25,504:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,504:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:25,507:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,507:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,509:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:25,509:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,510:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,511:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,512:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,512:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:25,512:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:25,512:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:25,512:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,512:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,512:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,512:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,528:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,529:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:25,529:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,529:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,545:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,545:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:25,545:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,628:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,644:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,645:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,645:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,645:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:25,645:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:25,645:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,645:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:25,661:INFO:Calculating mean and std
2025-02-20 12:00:25,662:INFO:Creating metrics dataframe
2025-02-20 12:00:25,662:INFO:Uploading results into container
2025-02-20 12:00:25,662:INFO:Uploading model into container now
2025-02-20 12:00:25,662:INFO:_master_model_container: 4
2025-02-20 12:00:25,662:INFO:_display_container: 2
2025-02-20 12:00:25,662:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1864, splitter='best')
2025-02-20 12:00:25,662:INFO:create_model() successfully completed......................................
2025-02-20 12:00:25,779:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:25,779:INFO:Creating metrics dataframe
2025-02-20 12:00:25,779:INFO:Initializing SVM - Linear Kernel
2025-02-20 12:00:25,779:INFO:Total runtime is 0.22689000368118287 minutes
2025-02-20 12:00:25,796:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:25,796:INFO:Initializing create_model()
2025-02-20 12:00:25,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:25,797:INFO:Checking exceptions
2025-02-20 12:00:25,797:INFO:Importing libraries
2025-02-20 12:00:25,797:INFO:Copying training dataset
2025-02-20 12:00:25,804:INFO:Defining folds
2025-02-20 12:00:25,805:INFO:Declaring metric variables
2025-02-20 12:00:25,808:INFO:Importing untrained model
2025-02-20 12:00:25,812:INFO:SVM - Linear Kernel Imported successfully
2025-02-20 12:00:25,812:INFO:Starting cross validation
2025-02-20 12:00:25,812:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:26,145:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,145:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,145:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,160:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,160:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,178:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,178:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,178:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,178:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,178:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,178:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,178:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,178:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,196:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,206:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,329:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,329:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,329:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,344:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,345:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,345:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,360:INFO:Calculating mean and std
2025-02-20 12:00:26,361:INFO:Creating metrics dataframe
2025-02-20 12:00:26,361:INFO:Uploading results into container
2025-02-20 12:00:26,361:INFO:Uploading model into container now
2025-02-20 12:00:26,361:INFO:_master_model_container: 5
2025-02-20 12:00:26,361:INFO:_display_container: 2
2025-02-20 12:00:26,361:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1864, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-20 12:00:26,361:INFO:create_model() successfully completed......................................
2025-02-20 12:00:26,478:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:26,478:INFO:Creating metrics dataframe
2025-02-20 12:00:26,498:INFO:Initializing Ridge Classifier
2025-02-20 12:00:26,498:INFO:Total runtime is 0.23886892795562745 minutes
2025-02-20 12:00:26,501:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:26,501:INFO:Initializing create_model()
2025-02-20 12:00:26,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:26,503:INFO:Checking exceptions
2025-02-20 12:00:26,503:INFO:Importing libraries
2025-02-20 12:00:26,503:INFO:Copying training dataset
2025-02-20 12:00:26,510:INFO:Defining folds
2025-02-20 12:00:26,510:INFO:Declaring metric variables
2025-02-20 12:00:26,511:INFO:Importing untrained model
2025-02-20 12:00:26,511:INFO:Ridge Classifier Imported successfully
2025-02-20 12:00:26,526:INFO:Starting cross validation
2025-02-20 12:00:26,527:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:26,827:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,827:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,827:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,827:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,827:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,827:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,827:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,827:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,827:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,859:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,861:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,861:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,861:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,877:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:26,993:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:27,000:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:27,007:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:27,007:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:27,010:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:27,010:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:27,025:INFO:Calculating mean and std
2025-02-20 12:00:27,026:INFO:Creating metrics dataframe
2025-02-20 12:00:27,027:INFO:Uploading results into container
2025-02-20 12:00:27,027:INFO:Uploading model into container now
2025-02-20 12:00:27,027:INFO:_master_model_container: 6
2025-02-20 12:00:27,027:INFO:_display_container: 2
2025-02-20 12:00:27,027:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1864, solver='auto',
                tol=0.0001)
2025-02-20 12:00:27,027:INFO:create_model() successfully completed......................................
2025-02-20 12:00:27,144:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:27,144:INFO:Creating metrics dataframe
2025-02-20 12:00:27,144:INFO:Initializing Random Forest Classifier
2025-02-20 12:00:27,144:INFO:Total runtime is 0.24964452981948854 minutes
2025-02-20 12:00:27,144:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:27,160:INFO:Initializing create_model()
2025-02-20 12:00:27,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:27,160:INFO:Checking exceptions
2025-02-20 12:00:27,160:INFO:Importing libraries
2025-02-20 12:00:27,160:INFO:Copying training dataset
2025-02-20 12:00:27,160:INFO:Defining folds
2025-02-20 12:00:27,160:INFO:Declaring metric variables
2025-02-20 12:00:27,160:INFO:Importing untrained model
2025-02-20 12:00:27,177:INFO:Random Forest Classifier Imported successfully
2025-02-20 12:00:27,177:INFO:Starting cross validation
2025-02-20 12:00:27,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:28,010:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,031:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,043:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:28,043:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,060:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,060:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,060:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,086:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,086:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,096:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,102:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:28,104:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,107:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,110:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:28,110:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,176:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,176:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,195:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,196:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,200:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:28,205:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,209:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,244:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,259:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,259:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:28,259:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,279:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,324:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,326:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:28,326:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,705:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,709:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,709:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:28,709:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,709:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,709:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,709:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:28,724:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:28,741:INFO:Calculating mean and std
2025-02-20 12:00:28,742:INFO:Creating metrics dataframe
2025-02-20 12:00:28,742:INFO:Uploading results into container
2025-02-20 12:00:28,742:INFO:Uploading model into container now
2025-02-20 12:00:28,742:INFO:_master_model_container: 7
2025-02-20 12:00:28,742:INFO:_display_container: 2
2025-02-20 12:00:28,742:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1864, verbose=0,
                       warm_start=False)
2025-02-20 12:00:28,742:INFO:create_model() successfully completed......................................
2025-02-20 12:00:28,875:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:28,875:INFO:Creating metrics dataframe
2025-02-20 12:00:28,875:INFO:Initializing Quadratic Discriminant Analysis
2025-02-20 12:00:28,875:INFO:Total runtime is 0.27849818468093873 minutes
2025-02-20 12:00:28,894:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:28,895:INFO:Initializing create_model()
2025-02-20 12:00:28,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:28,895:INFO:Checking exceptions
2025-02-20 12:00:28,895:INFO:Importing libraries
2025-02-20 12:00:28,895:INFO:Copying training dataset
2025-02-20 12:00:28,900:INFO:Defining folds
2025-02-20 12:00:28,900:INFO:Declaring metric variables
2025-02-20 12:00:28,904:INFO:Importing untrained model
2025-02-20 12:00:28,911:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-20 12:00:28,913:INFO:Starting cross validation
2025-02-20 12:00:28,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:29,125:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:00:29,142:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:00:29,157:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:00:29,160:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:00:29,176:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:00:29,200:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:00:29,212:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:00:29,225:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,225:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:00:29,225:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,225:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,244:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,244:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,244:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,255:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,259:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,259:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,259:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,259:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,281:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,284:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,284:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,288:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,291:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,292:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,293:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,293:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,293:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,308:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,343:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,343:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,358:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,392:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:00:29,408:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:00:29,426:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,442:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,442:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,457:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,458:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,458:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,490:INFO:Calculating mean and std
2025-02-20 12:00:29,492:INFO:Creating metrics dataframe
2025-02-20 12:00:29,492:INFO:Uploading results into container
2025-02-20 12:00:29,492:INFO:Uploading model into container now
2025-02-20 12:00:29,492:INFO:_master_model_container: 8
2025-02-20 12:00:29,492:INFO:_display_container: 2
2025-02-20 12:00:29,492:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-20 12:00:29,492:INFO:create_model() successfully completed......................................
2025-02-20 12:00:29,625:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:29,625:INFO:Creating metrics dataframe
2025-02-20 12:00:29,641:INFO:Initializing Ada Boost Classifier
2025-02-20 12:00:29,641:INFO:Total runtime is 0.29126301606496174 minutes
2025-02-20 12:00:29,641:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:29,641:INFO:Initializing create_model()
2025-02-20 12:00:29,641:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:29,641:INFO:Checking exceptions
2025-02-20 12:00:29,641:INFO:Importing libraries
2025-02-20 12:00:29,641:INFO:Copying training dataset
2025-02-20 12:00:29,641:INFO:Defining folds
2025-02-20 12:00:29,641:INFO:Declaring metric variables
2025-02-20 12:00:29,660:INFO:Importing untrained model
2025-02-20 12:00:29,660:INFO:Ada Boost Classifier Imported successfully
2025-02-20 12:00:29,673:INFO:Starting cross validation
2025-02-20 12:00:29,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:29,893:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:00:29,893:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:00:29,893:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:00:29,893:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:00:29,893:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:00:29,925:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:00:29,941:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:00:29,960:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:00:29,980:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,983:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,985:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,985:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,989:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,991:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:29,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:29,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:29,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:29,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,007:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,007:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:29,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,025:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:30,025:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,041:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,041:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,041:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:30,059:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,059:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,059:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,059:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,059:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:30,059:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,078:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,082:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:30,087:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,125:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:00:30,141:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:00:30,183:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,188:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,188:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,191:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:30,191:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,191:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:30,191:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:30,222:INFO:Calculating mean and std
2025-02-20 12:00:30,224:INFO:Creating metrics dataframe
2025-02-20 12:00:30,224:INFO:Uploading results into container
2025-02-20 12:00:30,224:INFO:Uploading model into container now
2025-02-20 12:00:30,224:INFO:_master_model_container: 9
2025-02-20 12:00:30,224:INFO:_display_container: 2
2025-02-20 12:00:30,224:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1864)
2025-02-20 12:00:30,224:INFO:create_model() successfully completed......................................
2025-02-20 12:00:30,358:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:30,358:INFO:Creating metrics dataframe
2025-02-20 12:00:30,358:INFO:Initializing Gradient Boosting Classifier
2025-02-20 12:00:30,358:INFO:Total runtime is 0.30320079723993937 minutes
2025-02-20 12:00:30,374:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:30,375:INFO:Initializing create_model()
2025-02-20 12:00:30,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:30,375:INFO:Checking exceptions
2025-02-20 12:00:30,375:INFO:Importing libraries
2025-02-20 12:00:30,375:INFO:Copying training dataset
2025-02-20 12:00:30,383:INFO:Defining folds
2025-02-20 12:00:30,383:INFO:Declaring metric variables
2025-02-20 12:00:30,387:INFO:Importing untrained model
2025-02-20 12:00:30,391:INFO:Gradient Boosting Classifier Imported successfully
2025-02-20 12:00:30,391:INFO:Starting cross validation
2025-02-20 12:00:30,391:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:31,492:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,494:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,494:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,507:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,507:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:31,507:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,524:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:31,524:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,524:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,542:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,542:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,542:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:31,542:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,542:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,557:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:31,557:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,790:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,790:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:31,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:31,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,822:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,823:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,823:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,823:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:31,839:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,840:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:31,840:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:31,840:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,273:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,277:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,280:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,282:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,289:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,306:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,306:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,306:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,321:INFO:Calculating mean and std
2025-02-20 12:00:32,322:INFO:Creating metrics dataframe
2025-02-20 12:00:32,322:INFO:Uploading results into container
2025-02-20 12:00:32,322:INFO:Uploading model into container now
2025-02-20 12:00:32,322:INFO:_master_model_container: 10
2025-02-20 12:00:32,322:INFO:_display_container: 2
2025-02-20 12:00:32,322:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1864, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-20 12:00:32,322:INFO:create_model() successfully completed......................................
2025-02-20 12:00:32,456:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:32,456:INFO:Creating metrics dataframe
2025-02-20 12:00:32,456:INFO:Initializing Linear Discriminant Analysis
2025-02-20 12:00:32,456:INFO:Total runtime is 0.33817321856816607 minutes
2025-02-20 12:00:32,456:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:32,456:INFO:Initializing create_model()
2025-02-20 12:00:32,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:32,456:INFO:Checking exceptions
2025-02-20 12:00:32,456:INFO:Importing libraries
2025-02-20 12:00:32,456:INFO:Copying training dataset
2025-02-20 12:00:32,478:INFO:Defining folds
2025-02-20 12:00:32,478:INFO:Declaring metric variables
2025-02-20 12:00:32,482:INFO:Importing untrained model
2025-02-20 12:00:32,488:INFO:Linear Discriminant Analysis Imported successfully
2025-02-20 12:00:32,490:INFO:Starting cross validation
2025-02-20 12:00:32,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:32,776:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,778:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,787:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,821:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,822:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,822:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,822:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,822:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,839:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,839:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,839:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,855:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,855:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,855:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,855:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,939:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,939:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,955:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,955:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,955:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:32,955:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,955:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:32,987:INFO:Calculating mean and std
2025-02-20 12:00:32,988:INFO:Creating metrics dataframe
2025-02-20 12:00:32,989:INFO:Uploading results into container
2025-02-20 12:00:32,989:INFO:Uploading model into container now
2025-02-20 12:00:32,989:INFO:_master_model_container: 11
2025-02-20 12:00:32,989:INFO:_display_container: 2
2025-02-20 12:00:32,989:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-20 12:00:32,989:INFO:create_model() successfully completed......................................
2025-02-20 12:00:33,106:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:33,106:INFO:Creating metrics dataframe
2025-02-20 12:00:33,122:INFO:Initializing Extra Trees Classifier
2025-02-20 12:00:33,122:INFO:Total runtime is 0.34927424192428586 minutes
2025-02-20 12:00:33,122:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:33,122:INFO:Initializing create_model()
2025-02-20 12:00:33,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:33,122:INFO:Checking exceptions
2025-02-20 12:00:33,122:INFO:Importing libraries
2025-02-20 12:00:33,122:INFO:Copying training dataset
2025-02-20 12:00:33,138:INFO:Defining folds
2025-02-20 12:00:33,138:INFO:Declaring metric variables
2025-02-20 12:00:33,138:INFO:Importing untrained model
2025-02-20 12:00:33,138:INFO:Extra Trees Classifier Imported successfully
2025-02-20 12:00:33,155:INFO:Starting cross validation
2025-02-20 12:00:33,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:33,788:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,799:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,805:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,811:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,821:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,827:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,841:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,841:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,858:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,858:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,864:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,868:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,868:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,871:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,871:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,888:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,888:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,888:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,938:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,957:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,965:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,971:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,971:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:33,987:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:34,187:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:34,187:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:34,187:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:34,187:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:34,204:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:34,204:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:34,220:INFO:Calculating mean and std
2025-02-20 12:00:34,221:INFO:Creating metrics dataframe
2025-02-20 12:00:34,224:INFO:Uploading results into container
2025-02-20 12:00:34,224:INFO:Uploading model into container now
2025-02-20 12:00:34,225:INFO:_master_model_container: 12
2025-02-20 12:00:34,225:INFO:_display_container: 2
2025-02-20 12:00:34,225:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1864, verbose=0,
                     warm_start=False)
2025-02-20 12:00:34,225:INFO:create_model() successfully completed......................................
2025-02-20 12:00:34,337:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:34,337:INFO:Creating metrics dataframe
2025-02-20 12:00:34,359:INFO:Initializing Light Gradient Boosting Machine
2025-02-20 12:00:34,359:INFO:Total runtime is 0.3698836008707682 minutes
2025-02-20 12:00:34,363:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:34,363:INFO:Initializing create_model()
2025-02-20 12:00:34,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:34,364:INFO:Checking exceptions
2025-02-20 12:00:34,364:INFO:Importing libraries
2025-02-20 12:00:34,364:INFO:Copying training dataset
2025-02-20 12:00:34,371:INFO:Defining folds
2025-02-20 12:00:34,371:INFO:Declaring metric variables
2025-02-20 12:00:34,371:INFO:Importing untrained model
2025-02-20 12:00:34,371:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 12:00:34,389:INFO:Starting cross validation
2025-02-20 12:00:34,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:35,060:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,063:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,070:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,070:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,075:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:35,077:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:35,077:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,082:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,082:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,090:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,097:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:35,102:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,103:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,110:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,118:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:35,120:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,220:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,231:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,238:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:35,239:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,306:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,320:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,320:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:35,328:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,374:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,386:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,392:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:35,397:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,413:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,429:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,441:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:35,448:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,951:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,961:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,966:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:35,974:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:35,997:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,007:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,016:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,021:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,050:INFO:Calculating mean and std
2025-02-20 12:00:36,053:INFO:Creating metrics dataframe
2025-02-20 12:00:36,058:INFO:Uploading results into container
2025-02-20 12:00:36,059:INFO:Uploading model into container now
2025-02-20 12:00:36,059:INFO:_master_model_container: 13
2025-02-20 12:00:36,059:INFO:_display_container: 2
2025-02-20 12:00:36,061:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1864, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-20 12:00:36,061:INFO:create_model() successfully completed......................................
2025-02-20 12:00:36,268:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:36,269:INFO:Creating metrics dataframe
2025-02-20 12:00:36,287:INFO:Initializing Dummy Classifier
2025-02-20 12:00:36,287:INFO:Total runtime is 0.402025024096171 minutes
2025-02-20 12:00:36,295:INFO:SubProcess create_model() called ==================================
2025-02-20 12:00:36,295:INFO:Initializing create_model()
2025-02-20 12:00:36,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000286DAB765C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:36,297:INFO:Checking exceptions
2025-02-20 12:00:36,297:INFO:Importing libraries
2025-02-20 12:00:36,297:INFO:Copying training dataset
2025-02-20 12:00:36,304:INFO:Defining folds
2025-02-20 12:00:36,304:INFO:Declaring metric variables
2025-02-20 12:00:36,304:INFO:Importing untrained model
2025-02-20 12:00:36,322:INFO:Dummy Classifier Imported successfully
2025-02-20 12:00:36,335:INFO:Starting cross validation
2025-02-20 12:00:36,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:00:36,636:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,636:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,656:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,657:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,662:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,662:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,663:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,666:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,667:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,669:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,669:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,680:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,680:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,685:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,685:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,685:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,685:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,702:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,702:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,702:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,702:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,702:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,721:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,722:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,723:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,723:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,728:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,729:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,734:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,735:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,735:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,748:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,888:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,897:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,900:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,905:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,905:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,905:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,905:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:00:36,919:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:00:36,951:INFO:Calculating mean and std
2025-02-20 12:00:36,952:INFO:Creating metrics dataframe
2025-02-20 12:00:36,952:INFO:Uploading results into container
2025-02-20 12:00:36,956:INFO:Uploading model into container now
2025-02-20 12:00:36,956:INFO:_master_model_container: 14
2025-02-20 12:00:36,956:INFO:_display_container: 2
2025-02-20 12:00:36,956:INFO:DummyClassifier(constant=None, random_state=1864, strategy='prior')
2025-02-20 12:00:36,956:INFO:create_model() successfully completed......................................
2025-02-20 12:00:37,148:INFO:SubProcess create_model() end ==================================
2025-02-20 12:00:37,148:INFO:Creating metrics dataframe
2025-02-20 12:00:37,183:INFO:Initializing create_model()
2025-02-20 12:00:37,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1864, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:00:37,185:INFO:Checking exceptions
2025-02-20 12:00:37,187:INFO:Importing libraries
2025-02-20 12:00:37,187:INFO:Copying training dataset
2025-02-20 12:00:37,187:INFO:Defining folds
2025-02-20 12:00:37,187:INFO:Declaring metric variables
2025-02-20 12:00:37,187:INFO:Importing untrained model
2025-02-20 12:00:37,187:INFO:Declaring custom model
2025-02-20 12:00:37,187:INFO:Logistic Regression Imported successfully
2025-02-20 12:00:37,203:INFO:Cross validation set to False
2025-02-20 12:00:37,203:INFO:Fitting Model
2025-02-20 12:00:37,901:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
2025-02-20 12:00:37,901:WARNING:STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.
2025-02-20 12:00:37,901:WARNING:
2025-02-20 12:00:37,901:WARNING:Increase the number of iterations (max_iter) or scale the data as shown in:
2025-02-20 12:00:37,901:WARNING:    https://scikit-learn.org/stable/modules/preprocessing.html
2025-02-20 12:00:37,901:WARNING:Please also refer to the documentation for alternative solver options:
2025-02-20 12:00:37,901:WARNING:    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
2025-02-20 12:00:37,901:WARNING:  n_iter_i = _check_optimize_result(
2025-02-20 12:00:37,901:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1864, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 12:00:37,901:INFO:create_model() successfully completed......................................
2025-02-20 12:00:38,122:INFO:_master_model_container: 14
2025-02-20 12:00:38,123:INFO:_display_container: 2
2025-02-20 12:00:38,123:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1864, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 12:00:38,123:INFO:compare_models() successfully completed......................................
2025-02-20 12:00:38,225:INFO:Initializing predict_model()
2025-02-20 12:00:38,233:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1864, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000286DBB2DC60>)
2025-02-20 12:00:38,234:INFO:Checking exceptions
2025-02-20 12:00:38,234:INFO:Preloading libraries
2025-02-20 12:00:38,238:INFO:Set up data.
2025-02-20 12:00:38,244:INFO:Set up index.
2025-02-20 12:00:38,350:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
2025-02-20 12:00:38,350:WARNING:    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
2025-02-20 12:00:38,350:WARNING:    return self.score_func(y_true, y_pred, **kwargs)
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
2025-02-20 12:00:38,350:WARNING:    return func(*args, **kwargs)
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
2025-02-20 12:00:38,350:WARNING:    return _average_binary_score(
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
2025-02-20 12:00:38,350:WARNING:    return binary_metric(y_true, y_score, sample_weight=sample_weight)
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
2025-02-20 12:00:38,350:WARNING:    raise ValueError(
2025-02-20 12:00:38,350:WARNING:ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.
2025-02-20 12:00:38,350:WARNING:
2025-02-20 12:00:38,350:WARNING:During handling of the above exception, another exception occurred:
2025-02-20 12:00:38,350:WARNING:
2025-02-20 12:00:38,350:WARNING:Traceback (most recent call last):
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
2025-02-20 12:00:38,350:WARNING:    calculated_metric = score_func(y_test, target, **kwargs)
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
2025-02-20 12:00:38,350:WARNING:    return self.score_func(y_true, y_pred, **kwargs)
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
2025-02-20 12:00:38,350:WARNING:    return func(*args, **kwargs)
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
2025-02-20 12:00:38,350:WARNING:    return _average_binary_score(
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
2025-02-20 12:00:38,350:WARNING:    return binary_metric(y_true, y_score, sample_weight=sample_weight)
2025-02-20 12:00:38,350:WARNING:  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
2025-02-20 12:00:38,350:WARNING:    raise ValueError(
2025-02-20 12:00:38,350:WARNING:ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.
2025-02-20 12:00:38,350:WARNING:
2025-02-20 12:00:38,350:WARNING:  warnings.warn(traceback.format_exc())
2025-02-20 12:00:38,350:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
2025-02-20 12:00:38,350:WARNING:  warnings.warn(
2025-02-20 12:00:38,350:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
2025-02-20 12:00:38,350:WARNING:  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
2025-02-20 12:00:38,350:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
2025-02-20 12:00:38,366:WARNING:  warnings.warn(
2025-02-20 12:00:38,368:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
2025-02-20 12:00:38,368:WARNING:  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
2025-02-20 12:00:38,368:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
2025-02-20 12:00:38,368:WARNING:  warnings.warn(
2025-02-20 12:00:38,368:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
2025-02-20 12:00:38,368:WARNING:  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
2025-02-20 12:00:38,368:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
2025-02-20 12:00:38,368:WARNING:  warnings.warn(
2025-02-20 12:00:38,368:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
2025-02-20 12:00:38,368:WARNING:  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)
2025-02-20 12:00:38,368:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
2025-02-20 12:00:38,368:WARNING:  warnings.warn(
2025-02-20 12:00:38,591:INFO:Initializing save_model()
2025-02-20 12:00:38,591:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1864, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 12:00:38,591:INFO:Adding model into prep_pipe
2025-02-20 12:00:38,604:INFO:LDA.pkl saved in current working directory
2025-02-20 12:00:38,623:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1864,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 12:00:38,624:INFO:save_model() successfully completed......................................
2025-02-20 12:01:20,270:INFO:Initializing load_model()
2025-02-20 12:01:20,271:INFO:load_model(model_name=LDA, platform=None, authentication=None, verbose=True)
2025-02-20 12:01:22,819:INFO:Initializing predict_model()
2025-02-20 12:01:22,819:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1864,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000286DB6AA9E0>)
2025-02-20 12:01:22,819:INFO:Checking exceptions
2025-02-20 12:01:22,819:INFO:Preloading libraries
2025-02-20 12:01:22,828:INFO:Set up data.
2025-02-20 12:01:22,836:INFO:Set up index.
2025-02-20 12:06:05,000:INFO:Initializing save_model()
2025-02-20 12:06:05,000:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1864, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=GBC, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 12:06:05,000:INFO:Adding model into prep_pipe
2025-02-20 12:06:05,032:INFO:GBC.pkl saved in current working directory
2025-02-20 12:06:05,049:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1864,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 12:06:05,050:INFO:save_model() successfully completed......................................
2025-02-20 12:10:07,220:INFO:Initializing save_model()
2025-02-20 12:10:07,220:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1864, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 12:10:07,220:INFO:Adding model into prep_pipe
2025-02-20 12:10:07,257:INFO:LDA.pkl saved in current working directory
2025-02-20 12:10:07,272:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1864,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 12:10:07,272:INFO:save_model() successfully completed......................................
2025-02-20 12:11:02,622:INFO:Initializing predict_model()
2025-02-20 12:11:02,622:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000286DB9AEA10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1864,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000286DB9AAB00>)
2025-02-20 12:11:02,622:INFO:Checking exceptions
2025-02-20 12:11:02,622:INFO:Preloading libraries
2025-02-20 12:11:02,886:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
2025-02-20 12:11:02,886:WARNING:  warnings.warn(
2025-02-20 12:11:02,889:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
2025-02-20 12:11:02,889:WARNING:  warnings.warn(
2025-02-20 12:11:02,906:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
2025-02-20 12:11:02,906:WARNING:  warnings.warn(
2025-02-20 12:13:03,556:INFO:Initializing load_model()
2025-02-20 12:13:03,556:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 12:52:59,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 12:52:59,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 12:52:59,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 12:52:59,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 12:53:00,512:INFO:PyCaret ClassificationExperiment
2025-02-20 12:53:00,516:INFO:Logging name: clf-default-name
2025-02-20 12:53:00,516:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-20 12:53:00,516:INFO:version 3.3.2
2025-02-20 12:53:00,516:INFO:Initializing setup()
2025-02-20 12:53:00,516:INFO:self.USI: 9ac8
2025-02-20 12:53:00,516:INFO:self._variable_keys: {'fold_shuffle_param', 'log_plots_param', 'exp_name_log', 'fix_imbalance', '_ml_usecase', 'is_multiclass', 'y_test', 'seed', 'target_param', 'logging_param', 'html_param', 'idx', 'USI', '_available_plots', 'gpu_param', 'y', 'fold_generator', 'X', 'X_train', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_id', 'memory', 'y_train', 'data', 'n_jobs_param', 'pipeline', 'X_test'}
2025-02-20 12:53:00,516:INFO:Checking environment
2025-02-20 12:53:00,516:INFO:python_version: 3.10.16
2025-02-20 12:53:00,516:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-20 12:53:00,516:INFO:machine: AMD64
2025-02-20 12:53:00,516:INFO:platform: Windows-10-10.0.22631-SP0
2025-02-20 12:53:00,520:INFO:Memory: svmem(total=8299257856, available=1730256896, percent=79.2, used=6569000960, free=1730256896)
2025-02-20 12:53:00,521:INFO:Physical Core: 4
2025-02-20 12:53:00,521:INFO:Logical Core: 8
2025-02-20 12:53:00,521:INFO:Checking libraries
2025-02-20 12:53:00,521:INFO:System:
2025-02-20 12:53:00,521:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-20 12:53:00,521:INFO:executable: c:\Users\ksaig\anaconda3\envs\regis\python.exe
2025-02-20 12:53:00,521:INFO:   machine: Windows-10-10.0.22631-SP0
2025-02-20 12:53:00,521:INFO:PyCaret required dependencies:
2025-02-20 12:53:00,561:INFO:                 pip: 25.0
2025-02-20 12:53:00,561:INFO:          setuptools: 75.8.0
2025-02-20 12:53:00,561:INFO:             pycaret: 3.3.2
2025-02-20 12:53:00,561:INFO:             IPython: 8.32.0
2025-02-20 12:53:00,561:INFO:          ipywidgets: 8.1.5
2025-02-20 12:53:00,561:INFO:                tqdm: 4.67.1
2025-02-20 12:53:00,561:INFO:               numpy: 1.26.4
2025-02-20 12:53:00,561:INFO:              pandas: 2.1.4
2025-02-20 12:53:00,561:INFO:              jinja2: 3.1.5
2025-02-20 12:53:00,561:INFO:               scipy: 1.11.4
2025-02-20 12:53:00,561:INFO:              joblib: 1.3.2
2025-02-20 12:53:00,561:INFO:             sklearn: 1.4.2
2025-02-20 12:53:00,561:INFO:                pyod: 2.0.3
2025-02-20 12:53:00,561:INFO:            imblearn: 0.13.0
2025-02-20 12:53:00,561:INFO:   category_encoders: 2.7.0
2025-02-20 12:53:00,561:INFO:            lightgbm: 4.4.0
2025-02-20 12:53:00,561:INFO:               numba: 0.61.0
2025-02-20 12:53:00,561:INFO:            requests: 2.32.3
2025-02-20 12:53:00,561:INFO:          matplotlib: 3.7.5
2025-02-20 12:53:00,561:INFO:          scikitplot: 0.3.7
2025-02-20 12:53:00,561:INFO:         yellowbrick: 1.5
2025-02-20 12:53:00,561:INFO:              plotly: 6.0.0
2025-02-20 12:53:00,561:INFO:    plotly-resampler: Not installed
2025-02-20 12:53:00,561:INFO:             kaleido: 0.2.1
2025-02-20 12:53:00,561:INFO:           schemdraw: 0.15
2025-02-20 12:53:00,561:INFO:         statsmodels: 0.14.4
2025-02-20 12:53:00,561:INFO:              sktime: 0.26.0
2025-02-20 12:53:00,561:INFO:               tbats: 1.1.3
2025-02-20 12:53:00,561:INFO:            pmdarima: 2.0.4
2025-02-20 12:53:00,561:INFO:              psutil: 6.1.1
2025-02-20 12:53:00,561:INFO:          markupsafe: 3.0.2
2025-02-20 12:53:00,561:INFO:             pickle5: Not installed
2025-02-20 12:53:00,561:INFO:         cloudpickle: 3.1.1
2025-02-20 12:53:00,561:INFO:         deprecation: 2.1.0
2025-02-20 12:53:00,561:INFO:              xxhash: 3.5.0
2025-02-20 12:53:00,561:INFO:           wurlitzer: 3.1.1
2025-02-20 12:53:00,561:INFO:PyCaret optional dependencies:
2025-02-20 12:53:00,574:INFO:                shap: Not installed
2025-02-20 12:53:00,574:INFO:           interpret: Not installed
2025-02-20 12:53:00,575:INFO:                umap: 0.5.7
2025-02-20 12:53:00,575:INFO:     ydata_profiling: Not installed
2025-02-20 12:53:00,575:INFO:  explainerdashboard: Not installed
2025-02-20 12:53:00,575:INFO:             autoviz: Not installed
2025-02-20 12:53:00,575:INFO:           fairlearn: Not installed
2025-02-20 12:53:00,575:INFO:          deepchecks: Not installed
2025-02-20 12:53:00,575:INFO:             xgboost: Not installed
2025-02-20 12:53:00,575:INFO:            catboost: Not installed
2025-02-20 12:53:00,575:INFO:              kmodes: Not installed
2025-02-20 12:53:00,575:INFO:             mlxtend: Not installed
2025-02-20 12:53:00,575:INFO:       statsforecast: Not installed
2025-02-20 12:53:00,575:INFO:        tune_sklearn: Not installed
2025-02-20 12:53:00,575:INFO:                 ray: Not installed
2025-02-20 12:53:00,575:INFO:            hyperopt: Not installed
2025-02-20 12:53:00,575:INFO:              optuna: Not installed
2025-02-20 12:53:00,575:INFO:               skopt: Not installed
2025-02-20 12:53:00,575:INFO:              mlflow: Not installed
2025-02-20 12:53:00,575:INFO:              gradio: Not installed
2025-02-20 12:53:00,575:INFO:             fastapi: Not installed
2025-02-20 12:53:00,575:INFO:             uvicorn: Not installed
2025-02-20 12:53:00,575:INFO:              m2cgen: Not installed
2025-02-20 12:53:00,575:INFO:           evidently: Not installed
2025-02-20 12:53:00,575:INFO:               fugue: Not installed
2025-02-20 12:53:00,575:INFO:           streamlit: Not installed
2025-02-20 12:53:00,575:INFO:             prophet: Not installed
2025-02-20 12:53:00,575:INFO:None
2025-02-20 12:53:00,575:INFO:Set up data.
2025-02-20 12:53:00,587:INFO:Set up folding strategy.
2025-02-20 12:53:00,588:INFO:Set up train/test split.
2025-02-20 12:53:00,601:INFO:Set up index.
2025-02-20 12:53:00,601:INFO:Assigning column types.
2025-02-20 12:53:00,606:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-20 12:53:00,655:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 12:53:00,655:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:53:00,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:00,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:00,753:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 12:53:00,753:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:53:00,784:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:00,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:00,784:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-20 12:53:00,832:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:53:00,852:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:00,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:00,884:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:53:00,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:00,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:00,921:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-20 12:53:00,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:00,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:01,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:01,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:01,072:INFO:Preparing preprocessing pipeline...
2025-02-20 12:53:01,072:INFO:Set up label encoding.
2025-02-20 12:53:01,072:INFO:Set up simple imputation.
2025-02-20 12:53:01,086:INFO:Set up encoding of categorical features.
2025-02-20 12:53:01,086:INFO:Set up column name cleaning.
2025-02-20 12:53:01,250:INFO:Finished creating preprocessing pipeline.
2025-02-20 12:53:01,266:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-02-20 12:53:01,266:INFO:Creating final display dataframe.
2025-02-20 12:53:01,699:INFO:Setup _display_container:                     Description             Value
0                    Session id              2143
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (7032, 12)
5        Transformed data shape        (7032, 17)
6   Transformed train set shape        (4922, 17)
7    Transformed test set shape        (2110, 17)
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              9ac8
2025-02-20 12:53:01,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:01,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:01,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:01,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:53:01,869:INFO:setup() successfully completed in 1.36s...............
2025-02-20 12:53:01,886:INFO:Initializing compare_models()
2025-02-20 12:53:01,886:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-20 12:53:01,886:INFO:Checking exceptions
2025-02-20 12:53:01,886:INFO:Preparing display monitor
2025-02-20 12:53:01,929:INFO:Initializing Logistic Regression
2025-02-20 12:53:01,930:INFO:Total runtime is 1.6621748606363933e-05 minutes
2025-02-20 12:53:01,935:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:01,935:INFO:Initializing create_model()
2025-02-20 12:53:01,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:01,936:INFO:Checking exceptions
2025-02-20 12:53:01,936:INFO:Importing libraries
2025-02-20 12:53:01,936:INFO:Copying training dataset
2025-02-20 12:53:01,945:INFO:Defining folds
2025-02-20 12:53:01,946:INFO:Declaring metric variables
2025-02-20 12:53:01,949:INFO:Importing untrained model
2025-02-20 12:53:01,954:INFO:Logistic Regression Imported successfully
2025-02-20 12:53:01,963:INFO:Starting cross validation
2025-02-20 12:53:01,966:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:08,812:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:08,812:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:08,833:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:08,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:08,844:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:08,885:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:08,891:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,891:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,907:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,912:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,912:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,923:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,923:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,923:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,923:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,923:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,923:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,938:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,938:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,938:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,954:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,954:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,970:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,985:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:08,985:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:08,985:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:09,063:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,080:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,080:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,080:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,095:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,095:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,540:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:09,545:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:09,578:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,578:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,578:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,578:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,578:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,594:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:09,609:INFO:Calculating mean and std
2025-02-20 12:53:09,609:INFO:Creating metrics dataframe
2025-02-20 12:53:09,609:INFO:Uploading results into container
2025-02-20 12:53:09,609:INFO:Uploading model into container now
2025-02-20 12:53:09,609:INFO:_master_model_container: 1
2025-02-20 12:53:09,609:INFO:_display_container: 2
2025-02-20 12:53:09,609:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2143, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 12:53:09,609:INFO:create_model() successfully completed......................................
2025-02-20 12:53:09,672:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:09,672:INFO:Creating metrics dataframe
2025-02-20 12:53:09,688:INFO:Initializing K Neighbors Classifier
2025-02-20 12:53:09,688:INFO:Total runtime is 0.1293064792950948 minutes
2025-02-20 12:53:09,688:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:09,688:INFO:Initializing create_model()
2025-02-20 12:53:09,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:09,688:INFO:Checking exceptions
2025-02-20 12:53:09,688:INFO:Importing libraries
2025-02-20 12:53:09,688:INFO:Copying training dataset
2025-02-20 12:53:09,688:INFO:Defining folds
2025-02-20 12:53:09,688:INFO:Declaring metric variables
2025-02-20 12:53:09,688:INFO:Importing untrained model
2025-02-20 12:53:09,688:INFO:K Neighbors Classifier Imported successfully
2025-02-20 12:53:09,704:INFO:Starting cross validation
2025-02-20 12:53:09,712:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:10,177:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,193:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,193:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,193:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,193:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,213:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,213:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,213:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,228:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,228:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,228:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,244:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,244:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,244:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,260:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,260:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,260:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,275:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,275:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,291:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,295:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,295:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,311:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,444:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,444:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,444:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,460:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,460:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,460:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,491:INFO:Calculating mean and std
2025-02-20 12:53:10,491:INFO:Creating metrics dataframe
2025-02-20 12:53:10,491:INFO:Uploading results into container
2025-02-20 12:53:10,491:INFO:Uploading model into container now
2025-02-20 12:53:10,491:INFO:_master_model_container: 2
2025-02-20 12:53:10,491:INFO:_display_container: 2
2025-02-20 12:53:10,491:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-20 12:53:10,491:INFO:create_model() successfully completed......................................
2025-02-20 12:53:10,554:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:10,554:INFO:Creating metrics dataframe
2025-02-20 12:53:10,570:INFO:Initializing Naive Bayes
2025-02-20 12:53:10,570:INFO:Total runtime is 0.14401006301244101 minutes
2025-02-20 12:53:10,570:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:10,570:INFO:Initializing create_model()
2025-02-20 12:53:10,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:10,570:INFO:Checking exceptions
2025-02-20 12:53:10,570:INFO:Importing libraries
2025-02-20 12:53:10,570:INFO:Copying training dataset
2025-02-20 12:53:10,586:INFO:Defining folds
2025-02-20 12:53:10,586:INFO:Declaring metric variables
2025-02-20 12:53:10,586:INFO:Importing untrained model
2025-02-20 12:53:10,595:INFO:Naive Bayes Imported successfully
2025-02-20 12:53:10,595:INFO:Starting cross validation
2025-02-20 12:53:10,610:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:10,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,879:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,894:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,894:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,894:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,894:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,894:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,894:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,894:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,909:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,925:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,930:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,930:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,930:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:10,941:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,051:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,051:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,051:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,051:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,051:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,051:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,083:INFO:Calculating mean and std
2025-02-20 12:53:11,083:INFO:Creating metrics dataframe
2025-02-20 12:53:11,083:INFO:Uploading results into container
2025-02-20 12:53:11,083:INFO:Uploading model into container now
2025-02-20 12:53:11,083:INFO:_master_model_container: 3
2025-02-20 12:53:11,083:INFO:_display_container: 2
2025-02-20 12:53:11,083:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-20 12:53:11,083:INFO:create_model() successfully completed......................................
2025-02-20 12:53:11,145:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:11,145:INFO:Creating metrics dataframe
2025-02-20 12:53:11,145:INFO:Initializing Decision Tree Classifier
2025-02-20 12:53:11,145:INFO:Total runtime is 0.1535998304684957 minutes
2025-02-20 12:53:11,161:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:11,161:INFO:Initializing create_model()
2025-02-20 12:53:11,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:11,161:INFO:Checking exceptions
2025-02-20 12:53:11,161:INFO:Importing libraries
2025-02-20 12:53:11,161:INFO:Copying training dataset
2025-02-20 12:53:11,161:INFO:Defining folds
2025-02-20 12:53:11,161:INFO:Declaring metric variables
2025-02-20 12:53:11,161:INFO:Importing untrained model
2025-02-20 12:53:11,161:INFO:Decision Tree Classifier Imported successfully
2025-02-20 12:53:11,179:INFO:Starting cross validation
2025-02-20 12:53:11,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:11,429:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,429:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,445:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,445:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,461:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,461:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,461:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,461:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,461:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,461:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,461:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,476:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,476:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,476:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,476:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,476:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,501:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,505:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,506:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,512:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,516:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,516:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,523:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,523:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,634:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,634:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,634:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,634:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,634:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,650:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:11,666:INFO:Calculating mean and std
2025-02-20 12:53:11,666:INFO:Creating metrics dataframe
2025-02-20 12:53:11,666:INFO:Uploading results into container
2025-02-20 12:53:11,666:INFO:Uploading model into container now
2025-02-20 12:53:11,666:INFO:_master_model_container: 4
2025-02-20 12:53:11,666:INFO:_display_container: 2
2025-02-20 12:53:11,666:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2143, splitter='best')
2025-02-20 12:53:11,666:INFO:create_model() successfully completed......................................
2025-02-20 12:53:11,726:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:11,726:INFO:Creating metrics dataframe
2025-02-20 12:53:11,726:INFO:Initializing SVM - Linear Kernel
2025-02-20 12:53:11,726:INFO:Total runtime is 0.16327128807703656 minutes
2025-02-20 12:53:11,775:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:11,775:INFO:Initializing create_model()
2025-02-20 12:53:11,775:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:11,775:INFO:Checking exceptions
2025-02-20 12:53:11,775:INFO:Importing libraries
2025-02-20 12:53:11,775:INFO:Copying training dataset
2025-02-20 12:53:11,775:INFO:Defining folds
2025-02-20 12:53:11,791:INFO:Declaring metric variables
2025-02-20 12:53:11,791:INFO:Importing untrained model
2025-02-20 12:53:11,791:INFO:SVM - Linear Kernel Imported successfully
2025-02-20 12:53:11,810:INFO:Starting cross validation
2025-02-20 12:53:11,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:12,144:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,144:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,144:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,161:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,176:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,176:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,176:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,180:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,183:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,184:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,186:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,187:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,191:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,191:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,193:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,194:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,194:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,194:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,210:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,368:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,376:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,381:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,393:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,393:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,393:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,408:INFO:Calculating mean and std
2025-02-20 12:53:12,409:INFO:Creating metrics dataframe
2025-02-20 12:53:12,410:INFO:Uploading results into container
2025-02-20 12:53:12,410:INFO:Uploading model into container now
2025-02-20 12:53:12,410:INFO:_master_model_container: 5
2025-02-20 12:53:12,410:INFO:_display_container: 2
2025-02-20 12:53:12,410:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2143, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-20 12:53:12,410:INFO:create_model() successfully completed......................................
2025-02-20 12:53:12,476:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:12,476:INFO:Creating metrics dataframe
2025-02-20 12:53:12,482:INFO:Initializing Ridge Classifier
2025-02-20 12:53:12,482:INFO:Total runtime is 0.17588290770848594 minutes
2025-02-20 12:53:12,485:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:12,485:INFO:Initializing create_model()
2025-02-20 12:53:12,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:12,485:INFO:Checking exceptions
2025-02-20 12:53:12,485:INFO:Importing libraries
2025-02-20 12:53:12,485:INFO:Copying training dataset
2025-02-20 12:53:12,491:INFO:Defining folds
2025-02-20 12:53:12,492:INFO:Declaring metric variables
2025-02-20 12:53:12,494:INFO:Importing untrained model
2025-02-20 12:53:12,494:INFO:Ridge Classifier Imported successfully
2025-02-20 12:53:12,494:INFO:Starting cross validation
2025-02-20 12:53:12,494:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:12,786:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,787:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,788:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,788:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,788:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,792:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,793:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,793:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,793:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,793:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,793:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,793:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,793:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,793:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,793:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,809:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,810:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,810:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,810:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,810:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,810:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,810:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,960:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,960:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,976:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,978:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,985:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:12,986:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:13,009:INFO:Calculating mean and std
2025-02-20 12:53:13,009:INFO:Creating metrics dataframe
2025-02-20 12:53:13,012:INFO:Uploading results into container
2025-02-20 12:53:13,012:INFO:Uploading model into container now
2025-02-20 12:53:13,012:INFO:_master_model_container: 6
2025-02-20 12:53:13,012:INFO:_display_container: 2
2025-02-20 12:53:13,012:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2143, solver='auto',
                tol=0.0001)
2025-02-20 12:53:13,017:INFO:create_model() successfully completed......................................
2025-02-20 12:53:13,088:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:13,088:INFO:Creating metrics dataframe
2025-02-20 12:53:13,093:INFO:Initializing Random Forest Classifier
2025-02-20 12:53:13,093:INFO:Total runtime is 0.18605733315149944 minutes
2025-02-20 12:53:13,093:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:13,093:INFO:Initializing create_model()
2025-02-20 12:53:13,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:13,093:INFO:Checking exceptions
2025-02-20 12:53:13,093:INFO:Importing libraries
2025-02-20 12:53:13,093:INFO:Copying training dataset
2025-02-20 12:53:13,109:INFO:Defining folds
2025-02-20 12:53:13,109:INFO:Declaring metric variables
2025-02-20 12:53:13,112:INFO:Importing untrained model
2025-02-20 12:53:13,112:INFO:Random Forest Classifier Imported successfully
2025-02-20 12:53:13,126:INFO:Starting cross validation
2025-02-20 12:53:13,126:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:13,968:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:13,976:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:13,976:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:13,992:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:13,996:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:13,996:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:13,996:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:13,996:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,009:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,012:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,026:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,026:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,092:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,109:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,109:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,125:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,145:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,149:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,232:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,242:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,242:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,242:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,259:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,265:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,525:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,525:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,525:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,525:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,525:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,525:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,556:INFO:Calculating mean and std
2025-02-20 12:53:14,558:INFO:Creating metrics dataframe
2025-02-20 12:53:14,561:INFO:Uploading results into container
2025-02-20 12:53:14,561:INFO:Uploading model into container now
2025-02-20 12:53:14,562:INFO:_master_model_container: 7
2025-02-20 12:53:14,562:INFO:_display_container: 2
2025-02-20 12:53:14,563:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2143, verbose=0,
                       warm_start=False)
2025-02-20 12:53:14,563:INFO:create_model() successfully completed......................................
2025-02-20 12:53:14,625:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:14,625:INFO:Creating metrics dataframe
2025-02-20 12:53:14,625:INFO:Initializing Quadratic Discriminant Analysis
2025-02-20 12:53:14,625:INFO:Total runtime is 0.21158774693806967 minutes
2025-02-20 12:53:14,640:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:14,641:INFO:Initializing create_model()
2025-02-20 12:53:14,641:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:14,641:INFO:Checking exceptions
2025-02-20 12:53:14,641:INFO:Importing libraries
2025-02-20 12:53:14,641:INFO:Copying training dataset
2025-02-20 12:53:14,641:INFO:Defining folds
2025-02-20 12:53:14,641:INFO:Declaring metric variables
2025-02-20 12:53:14,641:INFO:Importing untrained model
2025-02-20 12:53:14,641:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-20 12:53:14,658:INFO:Starting cross validation
2025-02-20 12:53:14,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:14,875:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:53:14,875:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:53:14,875:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:53:14,875:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:53:14,875:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:53:14,875:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:53:14,875:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:53:14,941:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,941:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,941:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,941:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,941:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,941:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,941:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,960:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,960:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,961:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,961:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,961:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,961:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,962:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,963:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,970:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,970:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,971:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,971:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,971:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,971:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,972:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:14,974:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,060:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:53:15,062:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:53:15,091:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,091:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,091:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,091:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,091:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,108:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,123:INFO:Calculating mean and std
2025-02-20 12:53:15,125:INFO:Creating metrics dataframe
2025-02-20 12:53:15,125:INFO:Uploading results into container
2025-02-20 12:53:15,125:INFO:Uploading model into container now
2025-02-20 12:53:15,125:INFO:_master_model_container: 8
2025-02-20 12:53:15,125:INFO:_display_container: 2
2025-02-20 12:53:15,125:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-20 12:53:15,125:INFO:create_model() successfully completed......................................
2025-02-20 12:53:15,174:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:15,174:INFO:Creating metrics dataframe
2025-02-20 12:53:15,191:INFO:Initializing Ada Boost Classifier
2025-02-20 12:53:15,191:INFO:Total runtime is 0.22102347215016685 minutes
2025-02-20 12:53:15,191:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:15,191:INFO:Initializing create_model()
2025-02-20 12:53:15,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:15,191:INFO:Checking exceptions
2025-02-20 12:53:15,191:INFO:Importing libraries
2025-02-20 12:53:15,191:INFO:Copying training dataset
2025-02-20 12:53:15,191:INFO:Defining folds
2025-02-20 12:53:15,191:INFO:Declaring metric variables
2025-02-20 12:53:15,191:INFO:Importing untrained model
2025-02-20 12:53:15,208:INFO:Ada Boost Classifier Imported successfully
2025-02-20 12:53:15,208:INFO:Starting cross validation
2025-02-20 12:53:15,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:15,391:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:53:15,408:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:53:15,408:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:53:15,424:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:53:15,424:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:53:15,424:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:53:15,441:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:53:15,474:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,474:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:53:15,491:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,491:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,491:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,491:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,491:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,506:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,507:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,507:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,508:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,508:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,508:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,508:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,508:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,524:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,524:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,524:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,524:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,524:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,540:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,541:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,560:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,564:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,607:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:53:15,607:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:53:15,640:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,640:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,640:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,659:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,660:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,665:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:15,672:INFO:Calculating mean and std
2025-02-20 12:53:15,673:INFO:Creating metrics dataframe
2025-02-20 12:53:15,674:INFO:Uploading results into container
2025-02-20 12:53:15,674:INFO:Uploading model into container now
2025-02-20 12:53:15,674:INFO:_master_model_container: 9
2025-02-20 12:53:15,674:INFO:_display_container: 2
2025-02-20 12:53:15,674:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2143)
2025-02-20 12:53:15,674:INFO:create_model() successfully completed......................................
2025-02-20 12:53:15,724:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:15,724:INFO:Creating metrics dataframe
2025-02-20 12:53:15,741:INFO:Initializing Gradient Boosting Classifier
2025-02-20 12:53:15,741:INFO:Total runtime is 0.23018405834833783 minutes
2025-02-20 12:53:15,741:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:15,741:INFO:Initializing create_model()
2025-02-20 12:53:15,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:15,741:INFO:Checking exceptions
2025-02-20 12:53:15,741:INFO:Importing libraries
2025-02-20 12:53:15,741:INFO:Copying training dataset
2025-02-20 12:53:15,741:INFO:Defining folds
2025-02-20 12:53:15,741:INFO:Declaring metric variables
2025-02-20 12:53:15,741:INFO:Importing untrained model
2025-02-20 12:53:15,757:INFO:Gradient Boosting Classifier Imported successfully
2025-02-20 12:53:15,763:INFO:Starting cross validation
2025-02-20 12:53:15,765:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:16,774:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,790:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,790:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,790:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,790:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,790:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:16,790:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,808:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,808:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:16,808:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:16,808:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,808:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:16,808:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,808:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,808:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,825:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,828:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,828:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,828:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,828:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,840:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:16,841:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:16,841:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,841:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,841:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,841:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,841:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:16,856:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:16,856:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:16,861:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,355:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,356:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,356:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,356:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,356:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,356:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,356:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,356:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,388:INFO:Calculating mean and std
2025-02-20 12:53:17,388:INFO:Creating metrics dataframe
2025-02-20 12:53:17,389:INFO:Uploading results into container
2025-02-20 12:53:17,389:INFO:Uploading model into container now
2025-02-20 12:53:17,389:INFO:_master_model_container: 10
2025-02-20 12:53:17,389:INFO:_display_container: 2
2025-02-20 12:53:17,389:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2143, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-20 12:53:17,389:INFO:create_model() successfully completed......................................
2025-02-20 12:53:17,451:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:17,451:INFO:Creating metrics dataframe
2025-02-20 12:53:17,456:INFO:Initializing Linear Discriminant Analysis
2025-02-20 12:53:17,456:INFO:Total runtime is 0.25876952012379967 minutes
2025-02-20 12:53:17,456:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:17,456:INFO:Initializing create_model()
2025-02-20 12:53:17,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:17,456:INFO:Checking exceptions
2025-02-20 12:53:17,456:INFO:Importing libraries
2025-02-20 12:53:17,456:INFO:Copying training dataset
2025-02-20 12:53:17,456:INFO:Defining folds
2025-02-20 12:53:17,456:INFO:Declaring metric variables
2025-02-20 12:53:17,472:INFO:Importing untrained model
2025-02-20 12:53:17,472:INFO:Linear Discriminant Analysis Imported successfully
2025-02-20 12:53:17,472:INFO:Starting cross validation
2025-02-20 12:53:17,472:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:17,741:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,741:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,751:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,751:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,752:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,756:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,756:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,756:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,756:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,756:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,756:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,756:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,756:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,756:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,773:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,773:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,773:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,773:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,773:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,773:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,773:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,789:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,805:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,806:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,888:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,888:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,906:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,906:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,906:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,912:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:17,912:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,914:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:17,937:INFO:Calculating mean and std
2025-02-20 12:53:17,938:INFO:Creating metrics dataframe
2025-02-20 12:53:17,940:INFO:Uploading results into container
2025-02-20 12:53:17,940:INFO:Uploading model into container now
2025-02-20 12:53:17,941:INFO:_master_model_container: 11
2025-02-20 12:53:17,941:INFO:_display_container: 2
2025-02-20 12:53:17,942:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-20 12:53:17,942:INFO:create_model() successfully completed......................................
2025-02-20 12:53:18,005:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:18,005:INFO:Creating metrics dataframe
2025-02-20 12:53:18,005:INFO:Initializing Extra Trees Classifier
2025-02-20 12:53:18,005:INFO:Total runtime is 0.26793296337127687 minutes
2025-02-20 12:53:18,005:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:18,005:INFO:Initializing create_model()
2025-02-20 12:53:18,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:18,005:INFO:Checking exceptions
2025-02-20 12:53:18,005:INFO:Importing libraries
2025-02-20 12:53:18,005:INFO:Copying training dataset
2025-02-20 12:53:18,022:INFO:Defining folds
2025-02-20 12:53:18,022:INFO:Declaring metric variables
2025-02-20 12:53:18,022:INFO:Importing untrained model
2025-02-20 12:53:18,022:INFO:Extra Trees Classifier Imported successfully
2025-02-20 12:53:18,055:INFO:Starting cross validation
2025-02-20 12:53:18,072:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:18,683:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,695:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,705:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,705:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,721:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,721:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,721:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,746:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,747:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,755:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,755:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,755:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,755:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,771:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,771:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,805:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,805:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,821:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,843:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,850:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,855:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,855:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,870:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:18,871:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,104:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,104:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,104:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,104:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,104:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,104:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,136:INFO:Calculating mean and std
2025-02-20 12:53:19,138:INFO:Creating metrics dataframe
2025-02-20 12:53:19,139:INFO:Uploading results into container
2025-02-20 12:53:19,140:INFO:Uploading model into container now
2025-02-20 12:53:19,140:INFO:_master_model_container: 12
2025-02-20 12:53:19,140:INFO:_display_container: 2
2025-02-20 12:53:19,141:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2143, verbose=0,
                     warm_start=False)
2025-02-20 12:53:19,141:INFO:create_model() successfully completed......................................
2025-02-20 12:53:19,204:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:19,204:INFO:Creating metrics dataframe
2025-02-20 12:53:19,222:INFO:Initializing Light Gradient Boosting Machine
2025-02-20 12:53:19,222:INFO:Total runtime is 0.28820762236913045 minutes
2025-02-20 12:53:19,222:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:19,222:INFO:Initializing create_model()
2025-02-20 12:53:19,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:19,222:INFO:Checking exceptions
2025-02-20 12:53:19,222:INFO:Importing libraries
2025-02-20 12:53:19,222:INFO:Copying training dataset
2025-02-20 12:53:19,222:INFO:Defining folds
2025-02-20 12:53:19,222:INFO:Declaring metric variables
2025-02-20 12:53:19,236:INFO:Importing untrained model
2025-02-20 12:53:19,240:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 12:53:19,248:INFO:Starting cross validation
2025-02-20 12:53:19,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:19,772:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,773:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,774:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,775:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,775:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,775:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,786:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:19,787:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:19,787:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:19,787:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,787:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,787:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,804:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,821:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,821:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:19,821:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,904:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,904:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,920:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:19,920:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,954:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,954:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,954:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,973:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:19,975:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,978:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:19,978:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:19,978:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,053:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,054:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,054:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,069:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,142:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,142:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,151:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,153:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,153:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,153:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,153:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,185:INFO:Calculating mean and std
2025-02-20 12:53:20,186:INFO:Creating metrics dataframe
2025-02-20 12:53:20,190:INFO:Uploading results into container
2025-02-20 12:53:20,192:INFO:Uploading model into container now
2025-02-20 12:53:20,192:INFO:_master_model_container: 13
2025-02-20 12:53:20,192:INFO:_display_container: 2
2025-02-20 12:53:20,193:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2143, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-20 12:53:20,194:INFO:create_model() successfully completed......................................
2025-02-20 12:53:20,253:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:20,253:INFO:Creating metrics dataframe
2025-02-20 12:53:20,270:INFO:Initializing Dummy Classifier
2025-02-20 12:53:20,270:INFO:Total runtime is 0.30567314227422077 minutes
2025-02-20 12:53:20,270:INFO:SubProcess create_model() called ==================================
2025-02-20 12:53:20,270:INFO:Initializing create_model()
2025-02-20 12:53:20,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D6B13A1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:20,270:INFO:Checking exceptions
2025-02-20 12:53:20,270:INFO:Importing libraries
2025-02-20 12:53:20,270:INFO:Copying training dataset
2025-02-20 12:53:20,270:INFO:Defining folds
2025-02-20 12:53:20,270:INFO:Declaring metric variables
2025-02-20 12:53:20,287:INFO:Importing untrained model
2025-02-20 12:53:20,287:INFO:Dummy Classifier Imported successfully
2025-02-20 12:53:20,287:INFO:Starting cross validation
2025-02-20 12:53:20,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:53:20,541:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,552:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,553:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,553:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,553:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,553:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,553:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,553:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,553:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,570:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,586:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,586:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,586:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,588:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,588:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,588:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,588:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,602:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,603:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,603:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,686:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,686:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,704:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,704:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,704:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,704:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,704:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:20,704:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:20,735:INFO:Calculating mean and std
2025-02-20 12:53:20,736:INFO:Creating metrics dataframe
2025-02-20 12:53:20,738:INFO:Uploading results into container
2025-02-20 12:53:20,738:INFO:Uploading model into container now
2025-02-20 12:53:20,739:INFO:_master_model_container: 14
2025-02-20 12:53:20,739:INFO:_display_container: 2
2025-02-20 12:53:20,739:INFO:DummyClassifier(constant=None, random_state=2143, strategy='prior')
2025-02-20 12:53:20,739:INFO:create_model() successfully completed......................................
2025-02-20 12:53:20,803:INFO:SubProcess create_model() end ==================================
2025-02-20 12:53:20,803:INFO:Creating metrics dataframe
2025-02-20 12:53:20,803:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-20 12:53:20,819:INFO:Initializing create_model()
2025-02-20 12:53:20,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2143, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:53:20,819:INFO:Checking exceptions
2025-02-20 12:53:20,819:INFO:Importing libraries
2025-02-20 12:53:20,819:INFO:Copying training dataset
2025-02-20 12:53:20,819:INFO:Defining folds
2025-02-20 12:53:20,819:INFO:Declaring metric variables
2025-02-20 12:53:20,819:INFO:Importing untrained model
2025-02-20 12:53:20,819:INFO:Declaring custom model
2025-02-20 12:53:20,819:INFO:Logistic Regression Imported successfully
2025-02-20 12:53:20,819:INFO:Cross validation set to False
2025-02-20 12:53:20,819:INFO:Fitting Model
2025-02-20 12:53:21,202:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:53:21,202:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2143, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 12:53:21,202:INFO:create_model() successfully completed......................................
2025-02-20 12:53:21,302:INFO:_master_model_container: 14
2025-02-20 12:53:21,302:INFO:_display_container: 2
2025-02-20 12:53:21,302:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2143, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 12:53:21,302:INFO:compare_models() successfully completed......................................
2025-02-20 12:53:21,403:INFO:Initializing predict_model()
2025-02-20 12:53:21,403:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2143, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D6A9713880>)
2025-02-20 12:53:21,403:INFO:Checking exceptions
2025-02-20 12:53:21,403:INFO:Preloading libraries
2025-02-20 12:53:21,403:INFO:Set up data.
2025-02-20 12:53:21,403:INFO:Set up index.
2025-02-20 12:53:21,520:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2025-02-20 12:53:21,520:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:21,520:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:21,520:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:21,520:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:21,535:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:21,536:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:53:21,536:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 12:53:21,536:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2025-02-20 12:53:21,536:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 12:53:21,635:INFO:Initializing save_model()
2025-02-20 12:53:21,635:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2143, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 12:53:21,635:INFO:Adding model into prep_pipe
2025-02-20 12:53:21,642:INFO:LDA.pkl saved in current working directory
2025-02-20 12:53:21,658:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2143,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 12:53:21,658:INFO:save_model() successfully completed......................................
2025-02-20 12:53:21,755:INFO:Initializing load_model()
2025-02-20 12:53:21,755:INFO:load_model(model_name=LDA, platform=None, authentication=None, verbose=True)
2025-02-20 12:53:41,386:INFO:Initializing predict_model()
2025-02-20 12:53:41,386:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2143,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D6B17EBD90>)
2025-02-20 12:53:41,386:INFO:Checking exceptions
2025-02-20 12:53:41,386:INFO:Preloading libraries
2025-02-20 12:53:41,602:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:41,618:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:53:41,639:WARNING:c:\Users\ksaig\anaconda3\envs\regis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:54:22,035:INFO:Initializing load_model()
2025-02-20 12:54:22,035:INFO:load_model(model_name=LDA, platform=None, authentication=None, verbose=True)
2025-02-20 12:54:29,530:INFO:Initializing predict_model()
2025-02-20 12:54:29,530:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D6B13A1030>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2143,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D6A9713880>)
2025-02-20 12:54:29,531:INFO:Checking exceptions
2025-02-20 12:54:29,531:INFO:Preloading libraries
2025-02-20 12:54:29,533:INFO:Set up data.
2025-02-20 12:54:29,533:INFO:Set up index.
2025-02-20 12:59:25,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 12:59:25,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 12:59:25,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 12:59:25,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 12:59:25,834:INFO:PyCaret ClassificationExperiment
2025-02-20 12:59:25,834:INFO:Logging name: clf-default-name
2025-02-20 12:59:25,834:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-20 12:59:25,834:INFO:version 3.3.2
2025-02-20 12:59:25,834:INFO:Initializing setup()
2025-02-20 12:59:25,834:INFO:self.USI: ebc7
2025-02-20 12:59:25,834:INFO:self._variable_keys: {'_ml_usecase', 'n_jobs_param', 'fix_imbalance', 'logging_param', 'memory', 'y_test', 'y', 'data', 'idx', 'X', 'fold_shuffle_param', 'fold_generator', 'gpu_n_jobs_param', 'USI', 'exp_id', 'gpu_param', 'target_param', 'is_multiclass', 'y_train', 'html_param', 'log_plots_param', 'X_train', '_available_plots', 'X_test', 'exp_name_log', 'pipeline', 'fold_groups_param', 'seed'}
2025-02-20 12:59:25,834:INFO:Checking environment
2025-02-20 12:59:25,834:INFO:python_version: 3.10.16
2025-02-20 12:59:25,834:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-20 12:59:25,834:INFO:machine: AMD64
2025-02-20 12:59:25,834:INFO:platform: Windows-10-10.0.22631-SP0
2025-02-20 12:59:25,834:INFO:Memory: svmem(total=8299257856, available=1483759616, percent=82.1, used=6815498240, free=1483759616)
2025-02-20 12:59:25,834:INFO:Physical Core: 4
2025-02-20 12:59:25,834:INFO:Logical Core: 8
2025-02-20 12:59:25,834:INFO:Checking libraries
2025-02-20 12:59:25,834:INFO:System:
2025-02-20 12:59:25,834:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-20 12:59:25,834:INFO:executable: c:\Users\ksaig\anaconda3\envs\sai\python.exe
2025-02-20 12:59:25,834:INFO:   machine: Windows-10-10.0.22631-SP0
2025-02-20 12:59:25,834:INFO:PyCaret required dependencies:
2025-02-20 12:59:25,873:INFO:                 pip: 24.2
2025-02-20 12:59:25,873:INFO:          setuptools: 75.1.0
2025-02-20 12:59:25,873:INFO:             pycaret: 3.3.2
2025-02-20 12:59:25,873:INFO:             IPython: 8.32.0
2025-02-20 12:59:25,873:INFO:          ipywidgets: 8.1.5
2025-02-20 12:59:25,873:INFO:                tqdm: 4.67.1
2025-02-20 12:59:25,873:INFO:               numpy: 1.26.4
2025-02-20 12:59:25,873:INFO:              pandas: 2.1.4
2025-02-20 12:59:25,873:INFO:              jinja2: 3.1.5
2025-02-20 12:59:25,873:INFO:               scipy: 1.11.4
2025-02-20 12:59:25,873:INFO:              joblib: 1.3.2
2025-02-20 12:59:25,873:INFO:             sklearn: 1.4.2
2025-02-20 12:59:25,873:INFO:                pyod: 2.0.3
2025-02-20 12:59:25,873:INFO:            imblearn: 0.13.0
2025-02-20 12:59:25,873:INFO:   category_encoders: 2.7.0
2025-02-20 12:59:25,873:INFO:            lightgbm: 4.6.0
2025-02-20 12:59:25,873:INFO:               numba: 0.61.0
2025-02-20 12:59:25,873:INFO:            requests: 2.32.3
2025-02-20 12:59:25,873:INFO:          matplotlib: 3.7.5
2025-02-20 12:59:25,873:INFO:          scikitplot: 0.3.7
2025-02-20 12:59:25,873:INFO:         yellowbrick: 1.5
2025-02-20 12:59:25,873:INFO:              plotly: 5.24.1
2025-02-20 12:59:25,873:INFO:    plotly-resampler: Not installed
2025-02-20 12:59:25,873:INFO:             kaleido: 0.2.1
2025-02-20 12:59:25,873:INFO:           schemdraw: 0.15
2025-02-20 12:59:25,873:INFO:         statsmodels: 0.14.4
2025-02-20 12:59:25,873:INFO:              sktime: 0.26.0
2025-02-20 12:59:25,873:INFO:               tbats: 1.1.3
2025-02-20 12:59:25,873:INFO:            pmdarima: 2.0.4
2025-02-20 12:59:25,873:INFO:              psutil: 6.1.1
2025-02-20 12:59:25,873:INFO:          markupsafe: 3.0.2
2025-02-20 12:59:25,873:INFO:             pickle5: Not installed
2025-02-20 12:59:25,873:INFO:         cloudpickle: 3.1.1
2025-02-20 12:59:25,873:INFO:         deprecation: 2.1.0
2025-02-20 12:59:25,873:INFO:              xxhash: 3.5.0
2025-02-20 12:59:25,873:INFO:           wurlitzer: Not installed
2025-02-20 12:59:25,873:INFO:PyCaret optional dependencies:
2025-02-20 12:59:25,888:INFO:                shap: Not installed
2025-02-20 12:59:25,888:INFO:           interpret: Not installed
2025-02-20 12:59:25,888:INFO:                umap: Not installed
2025-02-20 12:59:25,888:INFO:     ydata_profiling: Not installed
2025-02-20 12:59:25,888:INFO:  explainerdashboard: Not installed
2025-02-20 12:59:25,888:INFO:             autoviz: Not installed
2025-02-20 12:59:25,888:INFO:           fairlearn: Not installed
2025-02-20 12:59:25,889:INFO:          deepchecks: Not installed
2025-02-20 12:59:25,889:INFO:             xgboost: Not installed
2025-02-20 12:59:25,889:INFO:            catboost: Not installed
2025-02-20 12:59:25,889:INFO:              kmodes: Not installed
2025-02-20 12:59:25,889:INFO:             mlxtend: Not installed
2025-02-20 12:59:25,889:INFO:       statsforecast: Not installed
2025-02-20 12:59:25,889:INFO:        tune_sklearn: Not installed
2025-02-20 12:59:25,889:INFO:                 ray: Not installed
2025-02-20 12:59:25,889:INFO:            hyperopt: Not installed
2025-02-20 12:59:25,889:INFO:              optuna: Not installed
2025-02-20 12:59:25,889:INFO:               skopt: Not installed
2025-02-20 12:59:25,889:INFO:              mlflow: Not installed
2025-02-20 12:59:25,889:INFO:              gradio: Not installed
2025-02-20 12:59:25,889:INFO:             fastapi: Not installed
2025-02-20 12:59:25,889:INFO:             uvicorn: Not installed
2025-02-20 12:59:25,889:INFO:              m2cgen: Not installed
2025-02-20 12:59:25,890:INFO:           evidently: Not installed
2025-02-20 12:59:25,890:INFO:               fugue: Not installed
2025-02-20 12:59:25,890:INFO:           streamlit: Not installed
2025-02-20 12:59:25,890:INFO:             prophet: Not installed
2025-02-20 12:59:25,890:INFO:None
2025-02-20 12:59:25,890:INFO:Set up data.
2025-02-20 12:59:25,906:INFO:Set up folding strategy.
2025-02-20 12:59:25,906:INFO:Set up train/test split.
2025-02-20 12:59:25,922:INFO:Set up index.
2025-02-20 12:59:25,922:INFO:Assigning column types.
2025-02-20 12:59:25,926:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-20 12:59:25,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 12:59:25,965:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:59:26,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,072:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 12:59:26,072:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:59:26,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,105:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-20 12:59:26,168:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:59:26,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,254:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 12:59:26,311:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,313:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-20 12:59:26,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:26,618:INFO:Preparing preprocessing pipeline...
2025-02-20 12:59:26,632:INFO:Set up label encoding.
2025-02-20 12:59:26,633:INFO:Set up simple imputation.
2025-02-20 12:59:26,635:INFO:Set up encoding of categorical features.
2025-02-20 12:59:26,635:INFO:Set up column name cleaning.
2025-02-20 12:59:26,818:INFO:Finished creating preprocessing pipeline.
2025-02-20 12:59:26,834:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-02-20 12:59:26,834:INFO:Creating final display dataframe.
2025-02-20 12:59:27,385:INFO:Setup _display_container:                     Description             Value
0                    Session id              6320
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (7032, 12)
5        Transformed data shape        (7032, 17)
6   Transformed train set shape        (4922, 17)
7    Transformed test set shape        (2110, 17)
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              ebc7
2025-02-20 12:59:27,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:27,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:27,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:27,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 12:59:27,615:INFO:setup() successfully completed in 1.78s...............
2025-02-20 12:59:27,625:INFO:Initializing compare_models()
2025-02-20 12:59:27,625:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-20 12:59:27,625:INFO:Checking exceptions
2025-02-20 12:59:27,634:INFO:Preparing display monitor
2025-02-20 12:59:27,670:INFO:Initializing Logistic Regression
2025-02-20 12:59:27,671:INFO:Total runtime is 1.7269452412923178e-05 minutes
2025-02-20 12:59:27,675:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:27,675:INFO:Initializing create_model()
2025-02-20 12:59:27,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:27,675:INFO:Checking exceptions
2025-02-20 12:59:27,675:INFO:Importing libraries
2025-02-20 12:59:27,675:INFO:Copying training dataset
2025-02-20 12:59:27,687:INFO:Defining folds
2025-02-20 12:59:27,687:INFO:Declaring metric variables
2025-02-20 12:59:27,691:INFO:Importing untrained model
2025-02-20 12:59:27,696:INFO:Logistic Regression Imported successfully
2025-02-20 12:59:27,709:INFO:Starting cross validation
2025-02-20 12:59:27,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:36,943:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:37,026:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:37,109:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,134:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,160:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:37,160:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,191:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,218:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,275:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:37,331:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,362:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,384:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,412:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:37,478:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,491:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,524:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,555:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,575:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,591:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,595:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:37,611:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:37,722:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,739:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,741:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,741:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,741:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:37,758:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:38,174:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:38,242:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:38,242:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:38,242:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:38,242:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:38,307:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:38,307:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:38,324:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:38,423:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:38,457:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:38,472:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:38,473:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:38,490:INFO:Calculating mean and std
2025-02-20 12:59:38,492:INFO:Creating metrics dataframe
2025-02-20 12:59:38,492:INFO:Uploading results into container
2025-02-20 12:59:38,492:INFO:Uploading model into container now
2025-02-20 12:59:38,492:INFO:_master_model_container: 1
2025-02-20 12:59:38,492:INFO:_display_container: 2
2025-02-20 12:59:38,492:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6320, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 12:59:38,492:INFO:create_model() successfully completed......................................
2025-02-20 12:59:38,573:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:38,573:INFO:Creating metrics dataframe
2025-02-20 12:59:38,573:INFO:Initializing K Neighbors Classifier
2025-02-20 12:59:38,573:INFO:Total runtime is 0.18170807361602784 minutes
2025-02-20 12:59:38,588:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:38,588:INFO:Initializing create_model()
2025-02-20 12:59:38,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:38,589:INFO:Checking exceptions
2025-02-20 12:59:38,589:INFO:Importing libraries
2025-02-20 12:59:38,589:INFO:Copying training dataset
2025-02-20 12:59:38,593:INFO:Defining folds
2025-02-20 12:59:38,593:INFO:Declaring metric variables
2025-02-20 12:59:38,593:INFO:Importing untrained model
2025-02-20 12:59:38,607:INFO:K Neighbors Classifier Imported successfully
2025-02-20 12:59:38,618:INFO:Starting cross validation
2025-02-20 12:59:38,618:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:39,286:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,290:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,290:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,306:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,309:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,317:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,329:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,343:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,354:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,457:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,474:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,483:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,490:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,490:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,507:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,523:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,523:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,578:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,578:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,591:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,591:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,612:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,622:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,697:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,710:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,716:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,716:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,726:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,733:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:39,756:INFO:Calculating mean and std
2025-02-20 12:59:39,756:INFO:Creating metrics dataframe
2025-02-20 12:59:39,756:INFO:Uploading results into container
2025-02-20 12:59:39,756:INFO:Uploading model into container now
2025-02-20 12:59:39,756:INFO:_master_model_container: 2
2025-02-20 12:59:39,756:INFO:_display_container: 2
2025-02-20 12:59:39,756:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-20 12:59:39,756:INFO:create_model() successfully completed......................................
2025-02-20 12:59:39,856:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:39,856:INFO:Creating metrics dataframe
2025-02-20 12:59:39,875:INFO:Initializing Naive Bayes
2025-02-20 12:59:39,875:INFO:Total runtime is 0.20341565211613974 minutes
2025-02-20 12:59:39,880:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:39,880:INFO:Initializing create_model()
2025-02-20 12:59:39,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:39,880:INFO:Checking exceptions
2025-02-20 12:59:39,880:INFO:Importing libraries
2025-02-20 12:59:39,880:INFO:Copying training dataset
2025-02-20 12:59:39,891:INFO:Defining folds
2025-02-20 12:59:39,892:INFO:Declaring metric variables
2025-02-20 12:59:39,897:INFO:Importing untrained model
2025-02-20 12:59:39,900:INFO:Naive Bayes Imported successfully
2025-02-20 12:59:39,908:INFO:Starting cross validation
2025-02-20 12:59:39,908:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:40,260:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,272:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,272:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,285:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,297:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,320:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,323:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,342:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,342:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,441:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,464:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,467:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,479:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,483:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,487:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,541:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,554:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,554:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,582:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,586:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,592:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,592:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,604:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,604:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,621:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,621:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,638:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,671:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,671:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,686:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:40,702:INFO:Calculating mean and std
2025-02-20 12:59:40,704:INFO:Creating metrics dataframe
2025-02-20 12:59:40,708:INFO:Uploading results into container
2025-02-20 12:59:40,710:INFO:Uploading model into container now
2025-02-20 12:59:40,710:INFO:_master_model_container: 3
2025-02-20 12:59:40,711:INFO:_display_container: 2
2025-02-20 12:59:40,711:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-20 12:59:40,711:INFO:create_model() successfully completed......................................
2025-02-20 12:59:40,789:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:40,789:INFO:Creating metrics dataframe
2025-02-20 12:59:40,795:INFO:Initializing Decision Tree Classifier
2025-02-20 12:59:40,795:INFO:Total runtime is 0.21874756813049318 minutes
2025-02-20 12:59:40,799:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:40,799:INFO:Initializing create_model()
2025-02-20 12:59:40,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:40,800:INFO:Checking exceptions
2025-02-20 12:59:40,800:INFO:Importing libraries
2025-02-20 12:59:40,800:INFO:Copying training dataset
2025-02-20 12:59:40,805:INFO:Defining folds
2025-02-20 12:59:40,805:INFO:Declaring metric variables
2025-02-20 12:59:40,815:INFO:Importing untrained model
2025-02-20 12:59:40,820:INFO:Decision Tree Classifier Imported successfully
2025-02-20 12:59:40,823:INFO:Starting cross validation
2025-02-20 12:59:40,823:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:41,154:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,169:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,169:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,169:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,169:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:41,185:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,185:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,185:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,185:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,185:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:41,185:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,200:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:41,201:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,201:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,201:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:41,201:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,201:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,216:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,226:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:41,228:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,228:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,242:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,242:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:41,242:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,255:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,257:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,257:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,257:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,271:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:41,271:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:41,271:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,271:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,367:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,382:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,382:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:41,382:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,382:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,382:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,399:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:41,399:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,414:INFO:Calculating mean and std
2025-02-20 12:59:41,414:INFO:Creating metrics dataframe
2025-02-20 12:59:41,414:INFO:Uploading results into container
2025-02-20 12:59:41,414:INFO:Uploading model into container now
2025-02-20 12:59:41,414:INFO:_master_model_container: 4
2025-02-20 12:59:41,414:INFO:_display_container: 2
2025-02-20 12:59:41,414:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6320, splitter='best')
2025-02-20 12:59:41,414:INFO:create_model() successfully completed......................................
2025-02-20 12:59:41,485:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:41,485:INFO:Creating metrics dataframe
2025-02-20 12:59:41,485:INFO:Initializing SVM - Linear Kernel
2025-02-20 12:59:41,501:INFO:Total runtime is 0.23051509459813438 minutes
2025-02-20 12:59:41,505:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:41,505:INFO:Initializing create_model()
2025-02-20 12:59:41,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:41,505:INFO:Checking exceptions
2025-02-20 12:59:41,505:INFO:Importing libraries
2025-02-20 12:59:41,505:INFO:Copying training dataset
2025-02-20 12:59:41,505:INFO:Defining folds
2025-02-20 12:59:41,505:INFO:Declaring metric variables
2025-02-20 12:59:41,505:INFO:Importing untrained model
2025-02-20 12:59:41,505:INFO:SVM - Linear Kernel Imported successfully
2025-02-20 12:59:41,520:INFO:Starting cross validation
2025-02-20 12:59:41,520:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:41,878:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,893:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,894:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,906:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,909:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,922:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,929:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,943:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,946:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,956:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,961:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:41,979:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,041:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,058:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,061:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,070:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,074:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,117:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,127:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,142:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,178:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,181:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,212:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,216:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,313:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,320:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,326:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,326:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,328:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,340:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,370:INFO:Calculating mean and std
2025-02-20 12:59:42,370:INFO:Creating metrics dataframe
2025-02-20 12:59:42,370:INFO:Uploading results into container
2025-02-20 12:59:42,370:INFO:Uploading model into container now
2025-02-20 12:59:42,370:INFO:_master_model_container: 5
2025-02-20 12:59:42,370:INFO:_display_container: 2
2025-02-20 12:59:42,370:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6320, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-20 12:59:42,370:INFO:create_model() successfully completed......................................
2025-02-20 12:59:42,456:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:42,456:INFO:Creating metrics dataframe
2025-02-20 12:59:42,463:INFO:Initializing Ridge Classifier
2025-02-20 12:59:42,463:INFO:Total runtime is 0.2465404788653056 minutes
2025-02-20 12:59:42,471:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:42,471:INFO:Initializing create_model()
2025-02-20 12:59:42,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:42,471:INFO:Checking exceptions
2025-02-20 12:59:42,471:INFO:Importing libraries
2025-02-20 12:59:42,471:INFO:Copying training dataset
2025-02-20 12:59:42,471:INFO:Defining folds
2025-02-20 12:59:42,471:INFO:Declaring metric variables
2025-02-20 12:59:42,486:INFO:Importing untrained model
2025-02-20 12:59:42,488:INFO:Ridge Classifier Imported successfully
2025-02-20 12:59:42,488:INFO:Starting cross validation
2025-02-20 12:59:42,503:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:42,855:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,868:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,873:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,880:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,885:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,900:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,901:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,913:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,921:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,921:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,921:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,944:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,948:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,948:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,954:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,954:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,974:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,974:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,987:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,987:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:42,987:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:43,005:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:43,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:43,120:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:43,137:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:43,137:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:43,137:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:43,154:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:43,170:INFO:Calculating mean and std
2025-02-20 12:59:43,170:INFO:Creating metrics dataframe
2025-02-20 12:59:43,170:INFO:Uploading results into container
2025-02-20 12:59:43,170:INFO:Uploading model into container now
2025-02-20 12:59:43,170:INFO:_master_model_container: 6
2025-02-20 12:59:43,170:INFO:_display_container: 2
2025-02-20 12:59:43,170:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6320, solver='auto',
                tol=0.0001)
2025-02-20 12:59:43,170:INFO:create_model() successfully completed......................................
2025-02-20 12:59:43,247:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:43,248:INFO:Creating metrics dataframe
2025-02-20 12:59:43,257:INFO:Initializing Random Forest Classifier
2025-02-20 12:59:43,257:INFO:Total runtime is 0.259778094291687 minutes
2025-02-20 12:59:43,260:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:43,260:INFO:Initializing create_model()
2025-02-20 12:59:43,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:43,260:INFO:Checking exceptions
2025-02-20 12:59:43,260:INFO:Importing libraries
2025-02-20 12:59:43,260:INFO:Copying training dataset
2025-02-20 12:59:43,273:INFO:Defining folds
2025-02-20 12:59:43,273:INFO:Declaring metric variables
2025-02-20 12:59:43,279:INFO:Importing untrained model
2025-02-20 12:59:43,284:INFO:Random Forest Classifier Imported successfully
2025-02-20 12:59:43,292:INFO:Starting cross validation
2025-02-20 12:59:43,295:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:44,734:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,736:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,749:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,750:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,762:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,765:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,815:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,828:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,828:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,842:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,842:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,848:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,850:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,860:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,863:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,868:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,868:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,889:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,901:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,904:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,904:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,920:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:44,920:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,374:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,389:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,391:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,391:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,391:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,406:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,434:INFO:Calculating mean and std
2025-02-20 12:59:45,436:INFO:Creating metrics dataframe
2025-02-20 12:59:45,438:INFO:Uploading results into container
2025-02-20 12:59:45,438:INFO:Uploading model into container now
2025-02-20 12:59:45,438:INFO:_master_model_container: 7
2025-02-20 12:59:45,438:INFO:_display_container: 2
2025-02-20 12:59:45,438:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6320, verbose=0,
                       warm_start=False)
2025-02-20 12:59:45,438:INFO:create_model() successfully completed......................................
2025-02-20 12:59:45,524:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:45,525:INFO:Creating metrics dataframe
2025-02-20 12:59:45,541:INFO:Initializing Quadratic Discriminant Analysis
2025-02-20 12:59:45,541:INFO:Total runtime is 0.29784530798594155 minutes
2025-02-20 12:59:45,541:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:45,541:INFO:Initializing create_model()
2025-02-20 12:59:45,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:45,541:INFO:Checking exceptions
2025-02-20 12:59:45,541:INFO:Importing libraries
2025-02-20 12:59:45,541:INFO:Copying training dataset
2025-02-20 12:59:45,560:INFO:Defining folds
2025-02-20 12:59:45,560:INFO:Declaring metric variables
2025-02-20 12:59:45,567:INFO:Importing untrained model
2025-02-20 12:59:45,568:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-20 12:59:45,582:INFO:Starting cross validation
2025-02-20 12:59:45,585:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:45,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:59:45,840:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:59:45,879:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:59:45,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:59:45,934:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:59:45,934:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:59:45,952:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,984:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,984:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,984:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:45,984:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,000:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,000:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,000:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,000:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,000:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,018:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,018:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,034:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,034:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:59:46,034:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,044:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:59:46,056:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,084:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,100:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,117:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,133:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,133:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,133:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,133:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,151:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,151:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,200:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:59:46,200:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 12:59:46,250:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,250:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,250:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,266:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,266:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,282:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,299:INFO:Calculating mean and std
2025-02-20 12:59:46,300:INFO:Creating metrics dataframe
2025-02-20 12:59:46,300:INFO:Uploading results into container
2025-02-20 12:59:46,300:INFO:Uploading model into container now
2025-02-20 12:59:46,300:INFO:_master_model_container: 8
2025-02-20 12:59:46,300:INFO:_display_container: 2
2025-02-20 12:59:46,300:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-20 12:59:46,300:INFO:create_model() successfully completed......................................
2025-02-20 12:59:46,366:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:46,366:INFO:Creating metrics dataframe
2025-02-20 12:59:46,385:INFO:Initializing Ada Boost Classifier
2025-02-20 12:59:46,385:INFO:Total runtime is 0.3119043270746867 minutes
2025-02-20 12:59:46,385:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:46,385:INFO:Initializing create_model()
2025-02-20 12:59:46,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:46,385:INFO:Checking exceptions
2025-02-20 12:59:46,385:INFO:Importing libraries
2025-02-20 12:59:46,385:INFO:Copying training dataset
2025-02-20 12:59:46,385:INFO:Defining folds
2025-02-20 12:59:46,385:INFO:Declaring metric variables
2025-02-20 12:59:46,400:INFO:Importing untrained model
2025-02-20 12:59:46,400:INFO:Ada Boost Classifier Imported successfully
2025-02-20 12:59:46,400:INFO:Starting cross validation
2025-02-20 12:59:46,416:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:46,625:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:59:46,638:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:59:46,663:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:59:46,680:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:59:46,705:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:59:46,705:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:59:46,745:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:59:46,746:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,756:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,756:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,766:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,768:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,778:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,780:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,782:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,787:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:59:46,789:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,790:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,794:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,809:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,850:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,866:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,866:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,887:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,889:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,903:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,903:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,917:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,917:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,917:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,934:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,934:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:46,983:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:59:47,000:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 12:59:47,049:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:47,049:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:47,049:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:47,066:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:47,066:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:47,066:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:47,097:INFO:Calculating mean and std
2025-02-20 12:59:47,099:INFO:Creating metrics dataframe
2025-02-20 12:59:47,099:INFO:Uploading results into container
2025-02-20 12:59:47,099:INFO:Uploading model into container now
2025-02-20 12:59:47,099:INFO:_master_model_container: 9
2025-02-20 12:59:47,099:INFO:_display_container: 2
2025-02-20 12:59:47,099:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6320)
2025-02-20 12:59:47,099:INFO:create_model() successfully completed......................................
2025-02-20 12:59:47,166:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:47,166:INFO:Creating metrics dataframe
2025-02-20 12:59:47,182:INFO:Initializing Gradient Boosting Classifier
2025-02-20 12:59:47,182:INFO:Total runtime is 0.325199294090271 minutes
2025-02-20 12:59:47,182:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:47,182:INFO:Initializing create_model()
2025-02-20 12:59:47,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:47,182:INFO:Checking exceptions
2025-02-20 12:59:47,182:INFO:Importing libraries
2025-02-20 12:59:47,182:INFO:Copying training dataset
2025-02-20 12:59:47,200:INFO:Defining folds
2025-02-20 12:59:47,200:INFO:Declaring metric variables
2025-02-20 12:59:47,200:INFO:Importing untrained model
2025-02-20 12:59:47,200:INFO:Gradient Boosting Classifier Imported successfully
2025-02-20 12:59:47,217:INFO:Starting cross validation
2025-02-20 12:59:47,217:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:48,499:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,499:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,520:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,525:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,531:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,548:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,716:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,735:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,745:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,758:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,781:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,814:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,814:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,831:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,866:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,882:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,900:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,966:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,966:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:48,989:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,015:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,031:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,031:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,397:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,413:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,413:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,413:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,431:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,432:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,448:INFO:Calculating mean and std
2025-02-20 12:59:49,448:INFO:Creating metrics dataframe
2025-02-20 12:59:49,448:INFO:Uploading results into container
2025-02-20 12:59:49,448:INFO:Uploading model into container now
2025-02-20 12:59:49,448:INFO:_master_model_container: 10
2025-02-20 12:59:49,448:INFO:_display_container: 2
2025-02-20 12:59:49,448:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6320, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-20 12:59:49,448:INFO:create_model() successfully completed......................................
2025-02-20 12:59:49,513:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:49,513:INFO:Creating metrics dataframe
2025-02-20 12:59:49,532:INFO:Initializing Linear Discriminant Analysis
2025-02-20 12:59:49,532:INFO:Total runtime is 0.3643544793128967 minutes
2025-02-20 12:59:49,532:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:49,532:INFO:Initializing create_model()
2025-02-20 12:59:49,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:49,532:INFO:Checking exceptions
2025-02-20 12:59:49,532:INFO:Importing libraries
2025-02-20 12:59:49,532:INFO:Copying training dataset
2025-02-20 12:59:49,532:INFO:Defining folds
2025-02-20 12:59:49,532:INFO:Declaring metric variables
2025-02-20 12:59:49,546:INFO:Importing untrained model
2025-02-20 12:59:49,550:INFO:Linear Discriminant Analysis Imported successfully
2025-02-20 12:59:49,561:INFO:Starting cross validation
2025-02-20 12:59:49,565:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:49,863:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,864:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,864:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,879:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,879:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:49,879:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:49,879:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,879:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,879:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,895:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,895:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,906:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:49,912:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,916:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,916:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,916:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:49,916:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,916:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,932:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,916:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,932:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:49,932:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:49,932:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,932:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,932:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,932:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,949:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:49,949:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,949:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:49,949:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:49,962:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:50,065:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:50,080:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:50,080:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:50,080:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:50,080:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:50,096:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:50,096:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:50,096:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:50,128:INFO:Calculating mean and std
2025-02-20 12:59:50,128:INFO:Creating metrics dataframe
2025-02-20 12:59:50,128:INFO:Uploading results into container
2025-02-20 12:59:50,128:INFO:Uploading model into container now
2025-02-20 12:59:50,128:INFO:_master_model_container: 11
2025-02-20 12:59:50,128:INFO:_display_container: 2
2025-02-20 12:59:50,128:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-20 12:59:50,128:INFO:create_model() successfully completed......................................
2025-02-20 12:59:50,196:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:50,196:INFO:Creating metrics dataframe
2025-02-20 12:59:50,202:INFO:Initializing Extra Trees Classifier
2025-02-20 12:59:50,202:INFO:Total runtime is 0.37552786270777383 minutes
2025-02-20 12:59:50,213:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:50,213:INFO:Initializing create_model()
2025-02-20 12:59:50,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:50,213:INFO:Checking exceptions
2025-02-20 12:59:50,213:INFO:Importing libraries
2025-02-20 12:59:50,213:INFO:Copying training dataset
2025-02-20 12:59:50,213:INFO:Defining folds
2025-02-20 12:59:50,213:INFO:Declaring metric variables
2025-02-20 12:59:50,213:INFO:Importing untrained model
2025-02-20 12:59:50,213:INFO:Extra Trees Classifier Imported successfully
2025-02-20 12:59:50,234:INFO:Starting cross validation
2025-02-20 12:59:50,234:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:50,924:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:50,935:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:50,975:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,005:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,011:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,016:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,016:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,037:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,040:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,045:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,053:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,068:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,100:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,114:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,115:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,115:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,131:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,140:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,164:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,164:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,178:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,179:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,179:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,179:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,480:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,480:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,480:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,480:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,495:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,495:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:51,511:INFO:Calculating mean and std
2025-02-20 12:59:51,511:INFO:Creating metrics dataframe
2025-02-20 12:59:51,511:INFO:Uploading results into container
2025-02-20 12:59:51,511:INFO:Uploading model into container now
2025-02-20 12:59:51,511:INFO:_master_model_container: 12
2025-02-20 12:59:51,517:INFO:_display_container: 2
2025-02-20 12:59:51,517:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6320, verbose=0,
                     warm_start=False)
2025-02-20 12:59:51,518:INFO:create_model() successfully completed......................................
2025-02-20 12:59:51,578:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:51,578:INFO:Creating metrics dataframe
2025-02-20 12:59:51,593:INFO:Initializing Light Gradient Boosting Machine
2025-02-20 12:59:51,593:INFO:Total runtime is 0.398715615272522 minutes
2025-02-20 12:59:51,593:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:51,593:INFO:Initializing create_model()
2025-02-20 12:59:51,593:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:51,593:INFO:Checking exceptions
2025-02-20 12:59:51,593:INFO:Importing libraries
2025-02-20 12:59:51,593:INFO:Copying training dataset
2025-02-20 12:59:51,593:INFO:Defining folds
2025-02-20 12:59:51,593:INFO:Declaring metric variables
2025-02-20 12:59:51,593:INFO:Importing untrained model
2025-02-20 12:59:51,609:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 12:59:51,622:INFO:Starting cross validation
2025-02-20 12:59:51,622:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:52,280:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,295:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,295:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:52,312:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,312:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,312:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,312:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,328:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,328:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:52,328:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:52,328:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,328:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,463:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,464:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,464:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,478:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:52,480:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,480:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,480:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:52,494:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,603:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,612:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,612:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,612:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:52,633:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,633:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,633:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:52,645:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,661:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,676:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,676:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:52,694:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,858:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,878:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,878:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,878:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:52,890:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,890:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,897:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:52,901:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:52,928:INFO:Calculating mean and std
2025-02-20 12:59:52,929:INFO:Creating metrics dataframe
2025-02-20 12:59:52,929:INFO:Uploading results into container
2025-02-20 12:59:52,929:INFO:Uploading model into container now
2025-02-20 12:59:52,929:INFO:_master_model_container: 13
2025-02-20 12:59:52,929:INFO:_display_container: 2
2025-02-20 12:59:52,937:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6320, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-20 12:59:52,937:INFO:create_model() successfully completed......................................
2025-02-20 12:59:53,012:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:53,012:INFO:Creating metrics dataframe
2025-02-20 12:59:53,012:INFO:Initializing Dummy Classifier
2025-02-20 12:59:53,012:INFO:Total runtime is 0.4223691026369731 minutes
2025-02-20 12:59:53,028:INFO:SubProcess create_model() called ==================================
2025-02-20 12:59:53,028:INFO:Initializing create_model()
2025-02-20 12:59:53,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164A6F0AC80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:53,028:INFO:Checking exceptions
2025-02-20 12:59:53,028:INFO:Importing libraries
2025-02-20 12:59:53,028:INFO:Copying training dataset
2025-02-20 12:59:53,028:INFO:Defining folds
2025-02-20 12:59:53,028:INFO:Declaring metric variables
2025-02-20 12:59:53,028:INFO:Importing untrained model
2025-02-20 12:59:53,044:INFO:Dummy Classifier Imported successfully
2025-02-20 12:59:53,053:INFO:Starting cross validation
2025-02-20 12:59:53,053:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 12:59:53,311:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,327:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,327:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,337:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:53,344:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,345:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,346:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,346:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,346:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:53,346:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:53,346:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,362:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,363:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,363:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:53,363:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,377:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,379:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,379:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:53,394:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,399:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,409:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,417:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:53,417:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,425:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,446:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,446:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,449:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:53,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,453:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,455:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:53,461:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:53,559:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,560:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,562:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:53,562:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:53,593:INFO:Calculating mean and std
2025-02-20 12:59:53,593:INFO:Creating metrics dataframe
2025-02-20 12:59:53,593:INFO:Uploading results into container
2025-02-20 12:59:53,593:INFO:Uploading model into container now
2025-02-20 12:59:53,593:INFO:_master_model_container: 14
2025-02-20 12:59:53,593:INFO:_display_container: 2
2025-02-20 12:59:53,593:INFO:DummyClassifier(constant=None, random_state=6320, strategy='prior')
2025-02-20 12:59:53,593:INFO:create_model() successfully completed......................................
2025-02-20 12:59:53,661:INFO:SubProcess create_model() end ==================================
2025-02-20 12:59:53,661:INFO:Creating metrics dataframe
2025-02-20 12:59:53,680:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-20 12:59:53,694:INFO:Initializing create_model()
2025-02-20 12:59:53,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6320, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 12:59:53,695:INFO:Checking exceptions
2025-02-20 12:59:53,695:INFO:Importing libraries
2025-02-20 12:59:53,695:INFO:Copying training dataset
2025-02-20 12:59:53,695:INFO:Defining folds
2025-02-20 12:59:53,695:INFO:Declaring metric variables
2025-02-20 12:59:53,695:INFO:Importing untrained model
2025-02-20 12:59:53,695:INFO:Declaring custom model
2025-02-20 12:59:53,695:INFO:Logistic Regression Imported successfully
2025-02-20 12:59:53,695:INFO:Cross validation set to False
2025-02-20 12:59:53,695:INFO:Fitting Model
2025-02-20 12:59:54,208:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 12:59:54,208:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6320, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 12:59:54,208:INFO:create_model() successfully completed......................................
2025-02-20 12:59:54,310:INFO:_master_model_container: 14
2025-02-20 12:59:54,310:INFO:_display_container: 2
2025-02-20 12:59:54,311:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6320, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 12:59:54,311:INFO:compare_models() successfully completed......................................
2025-02-20 12:59:54,459:INFO:Initializing predict_model()
2025-02-20 12:59:54,459:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164BA5C1090>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6320, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000164A6F1F760>)
2025-02-20 12:59:54,459:INFO:Checking exceptions
2025-02-20 12:59:54,459:INFO:Preloading libraries
2025-02-20 12:59:54,462:INFO:Set up data.
2025-02-20 12:59:54,462:INFO:Set up index.
2025-02-20 12:59:54,586:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2025-02-20 12:59:54,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:54,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:54,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:54,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:54,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 12:59:54,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 12:59:54,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 12:59:54,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2025-02-20 12:59:54,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 12:59:54,730:INFO:Initializing save_model()
2025-02-20 12:59:54,731:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6320, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 12:59:54,731:INFO:Adding model into prep_pipe
2025-02-20 12:59:54,747:INFO:LDA.pkl saved in current working directory
2025-02-20 12:59:54,765:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=6320,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 12:59:54,766:INFO:save_model() successfully completed......................................
2025-02-20 13:07:05,601:INFO:Initializing load_model()
2025-02-20 13:07:05,601:INFO:load_model(model_name=LDA, platform=None, authentication=None, verbose=True)
2025-02-20 13:14:01,369:INFO:PyCaret ClassificationExperiment
2025-02-20 13:14:01,369:INFO:Logging name: clf-default-name
2025-02-20 13:14:01,369:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-20 13:14:01,369:INFO:version 3.3.2
2025-02-20 13:14:01,370:INFO:Initializing setup()
2025-02-20 13:14:01,370:INFO:self.USI: d400
2025-02-20 13:14:01,370:INFO:self._variable_keys: {'_ml_usecase', 'n_jobs_param', 'fix_imbalance', 'logging_param', 'memory', 'y_test', 'y', 'data', 'idx', 'X', 'fold_shuffle_param', 'fold_generator', 'gpu_n_jobs_param', 'USI', 'exp_id', 'gpu_param', 'target_param', 'is_multiclass', 'y_train', 'html_param', 'log_plots_param', 'X_train', '_available_plots', 'X_test', 'exp_name_log', 'pipeline', 'fold_groups_param', 'seed'}
2025-02-20 13:14:01,370:INFO:Checking environment
2025-02-20 13:14:01,370:INFO:python_version: 3.10.16
2025-02-20 13:14:01,370:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-20 13:14:01,370:INFO:machine: AMD64
2025-02-20 13:14:01,370:INFO:platform: Windows-10-10.0.22631-SP0
2025-02-20 13:14:01,373:INFO:Memory: svmem(total=8299257856, available=607346688, percent=92.7, used=7691911168, free=607346688)
2025-02-20 13:14:01,373:INFO:Physical Core: 4
2025-02-20 13:14:01,373:INFO:Logical Core: 8
2025-02-20 13:14:01,373:INFO:Checking libraries
2025-02-20 13:14:01,373:INFO:System:
2025-02-20 13:14:01,373:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-20 13:14:01,373:INFO:executable: c:\Users\ksaig\anaconda3\envs\sai\python.exe
2025-02-20 13:14:01,373:INFO:   machine: Windows-10-10.0.22631-SP0
2025-02-20 13:14:01,373:INFO:PyCaret required dependencies:
2025-02-20 13:14:01,374:INFO:                 pip: 24.2
2025-02-20 13:14:01,374:INFO:          setuptools: 75.1.0
2025-02-20 13:14:01,374:INFO:             pycaret: 3.3.2
2025-02-20 13:14:01,374:INFO:             IPython: 8.32.0
2025-02-20 13:14:01,374:INFO:          ipywidgets: 8.1.5
2025-02-20 13:14:01,374:INFO:                tqdm: 4.67.1
2025-02-20 13:14:01,374:INFO:               numpy: 1.26.4
2025-02-20 13:14:01,374:INFO:              pandas: 2.1.4
2025-02-20 13:14:01,374:INFO:              jinja2: 3.1.5
2025-02-20 13:14:01,374:INFO:               scipy: 1.11.4
2025-02-20 13:14:01,374:INFO:              joblib: 1.3.2
2025-02-20 13:14:01,374:INFO:             sklearn: 1.4.2
2025-02-20 13:14:01,374:INFO:                pyod: 2.0.3
2025-02-20 13:14:01,374:INFO:            imblearn: 0.13.0
2025-02-20 13:14:01,374:INFO:   category_encoders: 2.7.0
2025-02-20 13:14:01,374:INFO:            lightgbm: 4.6.0
2025-02-20 13:14:01,374:INFO:               numba: 0.61.0
2025-02-20 13:14:01,374:INFO:            requests: 2.32.3
2025-02-20 13:14:01,374:INFO:          matplotlib: 3.7.5
2025-02-20 13:14:01,374:INFO:          scikitplot: 0.3.7
2025-02-20 13:14:01,374:INFO:         yellowbrick: 1.5
2025-02-20 13:14:01,374:INFO:              plotly: 5.24.1
2025-02-20 13:14:01,374:INFO:    plotly-resampler: Not installed
2025-02-20 13:14:01,374:INFO:             kaleido: 0.2.1
2025-02-20 13:14:01,374:INFO:           schemdraw: 0.15
2025-02-20 13:14:01,374:INFO:         statsmodels: 0.14.4
2025-02-20 13:14:01,374:INFO:              sktime: 0.26.0
2025-02-20 13:14:01,375:INFO:               tbats: 1.1.3
2025-02-20 13:14:01,375:INFO:            pmdarima: 2.0.4
2025-02-20 13:14:01,375:INFO:              psutil: 6.1.1
2025-02-20 13:14:01,375:INFO:          markupsafe: 3.0.2
2025-02-20 13:14:01,375:INFO:             pickle5: Not installed
2025-02-20 13:14:01,375:INFO:         cloudpickle: 3.1.1
2025-02-20 13:14:01,375:INFO:         deprecation: 2.1.0
2025-02-20 13:14:01,375:INFO:              xxhash: 3.5.0
2025-02-20 13:14:01,375:INFO:           wurlitzer: Not installed
2025-02-20 13:14:01,375:INFO:PyCaret optional dependencies:
2025-02-20 13:14:01,375:INFO:                shap: Not installed
2025-02-20 13:14:01,375:INFO:           interpret: Not installed
2025-02-20 13:14:01,375:INFO:                umap: Not installed
2025-02-20 13:14:01,375:INFO:     ydata_profiling: Not installed
2025-02-20 13:14:01,375:INFO:  explainerdashboard: Not installed
2025-02-20 13:14:01,375:INFO:             autoviz: Not installed
2025-02-20 13:14:01,375:INFO:           fairlearn: Not installed
2025-02-20 13:14:01,375:INFO:          deepchecks: Not installed
2025-02-20 13:14:01,375:INFO:             xgboost: Not installed
2025-02-20 13:14:01,375:INFO:            catboost: Not installed
2025-02-20 13:14:01,375:INFO:              kmodes: Not installed
2025-02-20 13:14:01,375:INFO:             mlxtend: Not installed
2025-02-20 13:14:01,375:INFO:       statsforecast: Not installed
2025-02-20 13:14:01,375:INFO:        tune_sklearn: Not installed
2025-02-20 13:14:01,375:INFO:                 ray: Not installed
2025-02-20 13:14:01,375:INFO:            hyperopt: Not installed
2025-02-20 13:14:01,375:INFO:              optuna: Not installed
2025-02-20 13:14:01,375:INFO:               skopt: Not installed
2025-02-20 13:14:01,375:INFO:              mlflow: Not installed
2025-02-20 13:14:01,375:INFO:              gradio: Not installed
2025-02-20 13:14:01,376:INFO:             fastapi: Not installed
2025-02-20 13:14:01,376:INFO:             uvicorn: Not installed
2025-02-20 13:14:01,376:INFO:              m2cgen: Not installed
2025-02-20 13:14:01,376:INFO:           evidently: Not installed
2025-02-20 13:14:01,376:INFO:               fugue: Not installed
2025-02-20 13:14:01,376:INFO:           streamlit: Not installed
2025-02-20 13:14:01,376:INFO:             prophet: Not installed
2025-02-20 13:14:01,376:INFO:None
2025-02-20 13:14:01,376:INFO:Set up data.
2025-02-20 13:14:01,387:INFO:Set up folding strategy.
2025-02-20 13:14:01,387:INFO:Set up train/test split.
2025-02-20 13:14:01,391:INFO:Set up index.
2025-02-20 13:14:01,391:INFO:Assigning column types.
2025-02-20 13:14:01,391:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-20 13:14:01,437:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 13:14:01,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 13:14:01,459:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,499:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 13:14:01,500:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 13:14:01,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,524:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-20 13:14:01,552:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 13:14:01,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,617:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 13:14:01,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,633:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-20 13:14:01,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,702:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,748:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:01,748:INFO:Preparing preprocessing pipeline...
2025-02-20 13:14:01,764:INFO:Set up label encoding.
2025-02-20 13:14:01,764:INFO:Set up simple imputation.
2025-02-20 13:14:01,764:INFO:Set up encoding of categorical features.
2025-02-20 13:14:01,764:INFO:Set up column name cleaning.
2025-02-20 13:14:01,885:INFO:Finished creating preprocessing pipeline.
2025-02-20 13:14:01,885:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-02-20 13:14:01,885:INFO:Creating final display dataframe.
2025-02-20 13:14:02,214:INFO:Setup _display_container:                     Description             Value
0                    Session id               215
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (7032, 12)
5        Transformed data shape        (7032, 17)
6   Transformed train set shape        (4922, 17)
7    Transformed test set shape        (2110, 17)
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              d400
2025-02-20 13:14:02,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:02,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:02,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:02,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:14:02,331:INFO:setup() successfully completed in 0.97s...............
2025-02-20 13:14:02,363:INFO:Initializing compare_models()
2025-02-20 13:14:02,363:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-20 13:14:02,363:INFO:Checking exceptions
2025-02-20 13:14:02,378:INFO:Preparing display monitor
2025-02-20 13:14:02,403:INFO:Initializing Logistic Regression
2025-02-20 13:14:02,403:INFO:Total runtime is 0.0 minutes
2025-02-20 13:14:02,408:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:02,408:INFO:Initializing create_model()
2025-02-20 13:14:02,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:02,409:INFO:Checking exceptions
2025-02-20 13:14:02,409:INFO:Importing libraries
2025-02-20 13:14:02,409:INFO:Copying training dataset
2025-02-20 13:14:02,416:INFO:Defining folds
2025-02-20 13:14:02,416:INFO:Declaring metric variables
2025-02-20 13:14:02,421:INFO:Importing untrained model
2025-02-20 13:14:02,423:INFO:Logistic Regression Imported successfully
2025-02-20 13:14:02,430:INFO:Starting cross validation
2025-02-20 13:14:02,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:10,532:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:10,610:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:10,665:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:10,677:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:10,694:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:10,694:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:10,862:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:10,877:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:10,877:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:10,893:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:10,913:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:10,961:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:10,977:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:10,977:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:11,046:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,046:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,077:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,085:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,101:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,127:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:11,193:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:11,227:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,243:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,260:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,293:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,293:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,317:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,328:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:11,410:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,427:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,433:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,643:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:11,643:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:11,693:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,693:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,693:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,708:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,709:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,709:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:11,742:INFO:Calculating mean and std
2025-02-20 13:14:11,743:INFO:Creating metrics dataframe
2025-02-20 13:14:11,743:INFO:Uploading results into container
2025-02-20 13:14:11,748:INFO:Uploading model into container now
2025-02-20 13:14:11,749:INFO:_master_model_container: 1
2025-02-20 13:14:11,749:INFO:_display_container: 2
2025-02-20 13:14:11,749:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=215, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 13:14:11,749:INFO:create_model() successfully completed......................................
2025-02-20 13:14:11,950:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:11,950:INFO:Creating metrics dataframe
2025-02-20 13:14:11,958:INFO:Initializing K Neighbors Classifier
2025-02-20 13:14:11,958:INFO:Total runtime is 0.15924691359202067 minutes
2025-02-20 13:14:11,960:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:11,960:INFO:Initializing create_model()
2025-02-20 13:14:11,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:11,960:INFO:Checking exceptions
2025-02-20 13:14:11,960:INFO:Importing libraries
2025-02-20 13:14:11,960:INFO:Copying training dataset
2025-02-20 13:14:11,960:INFO:Defining folds
2025-02-20 13:14:11,960:INFO:Declaring metric variables
2025-02-20 13:14:11,977:INFO:Importing untrained model
2025-02-20 13:14:11,977:INFO:K Neighbors Classifier Imported successfully
2025-02-20 13:14:11,995:INFO:Starting cross validation
2025-02-20 13:14:11,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:12,677:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,695:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,712:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,776:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,776:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,776:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,796:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,797:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,798:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,801:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,807:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,808:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,809:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,809:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,809:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,824:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,826:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,826:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,826:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,841:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,842:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,842:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,842:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:12,842:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,002:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,009:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,009:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,009:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,024:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,025:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,058:INFO:Calculating mean and std
2025-02-20 13:14:13,059:INFO:Creating metrics dataframe
2025-02-20 13:14:13,062:INFO:Uploading results into container
2025-02-20 13:14:13,062:INFO:Uploading model into container now
2025-02-20 13:14:13,062:INFO:_master_model_container: 2
2025-02-20 13:14:13,062:INFO:_display_container: 2
2025-02-20 13:14:13,062:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-20 13:14:13,062:INFO:create_model() successfully completed......................................
2025-02-20 13:14:13,208:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:13,208:INFO:Creating metrics dataframe
2025-02-20 13:14:13,225:INFO:Initializing Naive Bayes
2025-02-20 13:14:13,225:INFO:Total runtime is 0.1803614060084025 minutes
2025-02-20 13:14:13,225:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:13,225:INFO:Initializing create_model()
2025-02-20 13:14:13,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:13,225:INFO:Checking exceptions
2025-02-20 13:14:13,225:INFO:Importing libraries
2025-02-20 13:14:13,225:INFO:Copying training dataset
2025-02-20 13:14:13,242:INFO:Defining folds
2025-02-20 13:14:13,244:INFO:Declaring metric variables
2025-02-20 13:14:13,245:INFO:Importing untrained model
2025-02-20 13:14:13,259:INFO:Naive Bayes Imported successfully
2025-02-20 13:14:13,274:INFO:Starting cross validation
2025-02-20 13:14:13,275:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:13,542:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,542:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,558:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,558:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,577:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,578:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,589:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,592:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,609:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,609:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,627:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,627:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,627:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,627:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,642:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,642:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,642:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,642:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,642:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,642:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,658:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,658:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,677:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,758:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,758:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,758:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,758:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,773:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,773:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:13,791:INFO:Calculating mean and std
2025-02-20 13:14:13,792:INFO:Creating metrics dataframe
2025-02-20 13:14:13,792:INFO:Uploading results into container
2025-02-20 13:14:13,792:INFO:Uploading model into container now
2025-02-20 13:14:13,792:INFO:_master_model_container: 3
2025-02-20 13:14:13,792:INFO:_display_container: 2
2025-02-20 13:14:13,792:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-20 13:14:13,792:INFO:create_model() successfully completed......................................
2025-02-20 13:14:13,925:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:13,925:INFO:Creating metrics dataframe
2025-02-20 13:14:13,942:INFO:Initializing Decision Tree Classifier
2025-02-20 13:14:13,942:INFO:Total runtime is 0.1923103372255961 minutes
2025-02-20 13:14:13,959:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:13,959:INFO:Initializing create_model()
2025-02-20 13:14:13,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:13,959:INFO:Checking exceptions
2025-02-20 13:14:13,959:INFO:Importing libraries
2025-02-20 13:14:13,959:INFO:Copying training dataset
2025-02-20 13:14:13,984:INFO:Defining folds
2025-02-20 13:14:13,984:INFO:Declaring metric variables
2025-02-20 13:14:13,993:INFO:Importing untrained model
2025-02-20 13:14:13,993:INFO:Decision Tree Classifier Imported successfully
2025-02-20 13:14:14,024:INFO:Starting cross validation
2025-02-20 13:14:14,025:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:14,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,423:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,423:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,424:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,424:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,424:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,424:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,424:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,424:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,424:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,424:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,441:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,441:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,441:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,441:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,441:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,441:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,441:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,458:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,584:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,588:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,591:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,591:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,591:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,591:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:14,623:INFO:Calculating mean and std
2025-02-20 13:14:14,624:INFO:Creating metrics dataframe
2025-02-20 13:14:14,624:INFO:Uploading results into container
2025-02-20 13:14:14,624:INFO:Uploading model into container now
2025-02-20 13:14:14,624:INFO:_master_model_container: 4
2025-02-20 13:14:14,624:INFO:_display_container: 2
2025-02-20 13:14:14,624:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=215, splitter='best')
2025-02-20 13:14:14,624:INFO:create_model() successfully completed......................................
2025-02-20 13:14:14,756:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:14,756:INFO:Creating metrics dataframe
2025-02-20 13:14:14,757:INFO:Initializing SVM - Linear Kernel
2025-02-20 13:14:14,757:INFO:Total runtime is 0.20589590072631833 minutes
2025-02-20 13:14:14,757:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:14,757:INFO:Initializing create_model()
2025-02-20 13:14:14,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:14,757:INFO:Checking exceptions
2025-02-20 13:14:14,757:INFO:Importing libraries
2025-02-20 13:14:14,757:INFO:Copying training dataset
2025-02-20 13:14:14,774:INFO:Defining folds
2025-02-20 13:14:14,775:INFO:Declaring metric variables
2025-02-20 13:14:14,778:INFO:Importing untrained model
2025-02-20 13:14:14,786:INFO:SVM - Linear Kernel Imported successfully
2025-02-20 13:14:14,791:INFO:Starting cross validation
2025-02-20 13:14:14,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:15,124:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,124:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,124:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,124:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,140:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,140:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,140:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,140:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,140:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,140:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,155:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,157:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,157:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,157:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,157:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,175:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,185:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,186:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,340:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,340:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,340:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,358:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,358:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,375:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,388:INFO:Calculating mean and std
2025-02-20 13:14:15,389:INFO:Creating metrics dataframe
2025-02-20 13:14:15,390:INFO:Uploading results into container
2025-02-20 13:14:15,390:INFO:Uploading model into container now
2025-02-20 13:14:15,390:INFO:_master_model_container: 5
2025-02-20 13:14:15,390:INFO:_display_container: 2
2025-02-20 13:14:15,390:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=215, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-20 13:14:15,390:INFO:create_model() successfully completed......................................
2025-02-20 13:14:15,557:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:15,557:INFO:Creating metrics dataframe
2025-02-20 13:14:15,576:INFO:Initializing Ridge Classifier
2025-02-20 13:14:15,577:INFO:Total runtime is 0.21955856084823605 minutes
2025-02-20 13:14:15,585:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:15,586:INFO:Initializing create_model()
2025-02-20 13:14:15,586:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:15,586:INFO:Checking exceptions
2025-02-20 13:14:15,586:INFO:Importing libraries
2025-02-20 13:14:15,586:INFO:Copying training dataset
2025-02-20 13:14:15,590:INFO:Defining folds
2025-02-20 13:14:15,590:INFO:Declaring metric variables
2025-02-20 13:14:15,607:INFO:Importing untrained model
2025-02-20 13:14:15,607:INFO:Ridge Classifier Imported successfully
2025-02-20 13:14:15,640:INFO:Starting cross validation
2025-02-20 13:14:15,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:15,940:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,940:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,940:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,940:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,956:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,956:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,956:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,956:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,956:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,956:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,976:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,978:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,987:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,989:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:15,991:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,013:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,013:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,023:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,023:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,023:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,034:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,034:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,039:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,039:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,189:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,208:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,208:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,224:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,224:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,224:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:16,254:INFO:Calculating mean and std
2025-02-20 13:14:16,256:INFO:Creating metrics dataframe
2025-02-20 13:14:16,256:INFO:Uploading results into container
2025-02-20 13:14:16,256:INFO:Uploading model into container now
2025-02-20 13:14:16,256:INFO:_master_model_container: 6
2025-02-20 13:14:16,256:INFO:_display_container: 2
2025-02-20 13:14:16,256:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=215, solver='auto',
                tol=0.0001)
2025-02-20 13:14:16,256:INFO:create_model() successfully completed......................................
2025-02-20 13:14:16,406:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:16,406:INFO:Creating metrics dataframe
2025-02-20 13:14:16,423:INFO:Initializing Random Forest Classifier
2025-02-20 13:14:16,423:INFO:Total runtime is 0.233663006623586 minutes
2025-02-20 13:14:16,423:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:16,423:INFO:Initializing create_model()
2025-02-20 13:14:16,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:16,423:INFO:Checking exceptions
2025-02-20 13:14:16,423:INFO:Importing libraries
2025-02-20 13:14:16,423:INFO:Copying training dataset
2025-02-20 13:14:16,439:INFO:Defining folds
2025-02-20 13:14:16,439:INFO:Declaring metric variables
2025-02-20 13:14:16,456:INFO:Importing untrained model
2025-02-20 13:14:16,457:INFO:Random Forest Classifier Imported successfully
2025-02-20 13:14:16,482:INFO:Starting cross validation
2025-02-20 13:14:16,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:17,481:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,483:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,496:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,505:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,508:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,508:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,508:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,522:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,525:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,525:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,525:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,538:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,538:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,538:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,554:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,664:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,665:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,671:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,686:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,688:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,688:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,762:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:17,772:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,021:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,038:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,038:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,059:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,063:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,066:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,088:INFO:Calculating mean and std
2025-02-20 13:14:18,088:INFO:Creating metrics dataframe
2025-02-20 13:14:18,088:INFO:Uploading results into container
2025-02-20 13:14:18,088:INFO:Uploading model into container now
2025-02-20 13:14:18,088:INFO:_master_model_container: 7
2025-02-20 13:14:18,088:INFO:_display_container: 2
2025-02-20 13:14:18,088:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=215, verbose=0,
                       warm_start=False)
2025-02-20 13:14:18,088:INFO:create_model() successfully completed......................................
2025-02-20 13:14:18,188:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:18,188:INFO:Creating metrics dataframe
2025-02-20 13:14:18,205:INFO:Initializing Quadratic Discriminant Analysis
2025-02-20 13:14:18,205:INFO:Total runtime is 0.26335664590199787 minutes
2025-02-20 13:14:18,205:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:18,205:INFO:Initializing create_model()
2025-02-20 13:14:18,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:18,205:INFO:Checking exceptions
2025-02-20 13:14:18,205:INFO:Importing libraries
2025-02-20 13:14:18,205:INFO:Copying training dataset
2025-02-20 13:14:18,221:INFO:Defining folds
2025-02-20 13:14:18,221:INFO:Declaring metric variables
2025-02-20 13:14:18,221:INFO:Importing untrained model
2025-02-20 13:14:18,221:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-20 13:14:18,238:INFO:Starting cross validation
2025-02-20 13:14:18,238:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:18,439:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:14:18,439:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:14:18,447:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:14:18,455:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:14:18,457:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:14:18,466:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:14:18,471:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:14:18,487:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:14:18,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,553:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,555:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,556:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,563:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,565:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,566:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,572:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,572:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,587:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,656:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:14:18,658:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:14:18,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:18,720:INFO:Calculating mean and std
2025-02-20 13:14:18,720:INFO:Creating metrics dataframe
2025-02-20 13:14:18,720:INFO:Uploading results into container
2025-02-20 13:14:18,720:INFO:Uploading model into container now
2025-02-20 13:14:18,720:INFO:_master_model_container: 8
2025-02-20 13:14:18,720:INFO:_display_container: 2
2025-02-20 13:14:18,720:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-20 13:14:18,720:INFO:create_model() successfully completed......................................
2025-02-20 13:14:18,837:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:18,837:INFO:Creating metrics dataframe
2025-02-20 13:14:18,855:INFO:Initializing Ada Boost Classifier
2025-02-20 13:14:18,856:INFO:Total runtime is 0.27421354850133256 minutes
2025-02-20 13:14:18,864:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:18,865:INFO:Initializing create_model()
2025-02-20 13:14:18,865:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:18,866:INFO:Checking exceptions
2025-02-20 13:14:18,866:INFO:Importing libraries
2025-02-20 13:14:18,866:INFO:Copying training dataset
2025-02-20 13:14:18,871:INFO:Defining folds
2025-02-20 13:14:18,871:INFO:Declaring metric variables
2025-02-20 13:14:18,871:INFO:Importing untrained model
2025-02-20 13:14:18,871:INFO:Ada Boost Classifier Imported successfully
2025-02-20 13:14:18,887:INFO:Starting cross validation
2025-02-20 13:14:18,887:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:19,089:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:14:19,089:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:14:19,089:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:14:19,089:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:14:19,107:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:14:19,107:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:14:19,111:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:14:19,137:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:14:19,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,203:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,203:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,203:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,220:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,235:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,237:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,237:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:14:19,303:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:14:19,336:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,336:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,336:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,336:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,355:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,359:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:19,369:INFO:Calculating mean and std
2025-02-20 13:14:19,370:INFO:Creating metrics dataframe
2025-02-20 13:14:19,370:INFO:Uploading results into container
2025-02-20 13:14:19,370:INFO:Uploading model into container now
2025-02-20 13:14:19,370:INFO:_master_model_container: 9
2025-02-20 13:14:19,370:INFO:_display_container: 2
2025-02-20 13:14:19,370:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=215)
2025-02-20 13:14:19,370:INFO:create_model() successfully completed......................................
2025-02-20 13:14:19,502:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:19,502:INFO:Creating metrics dataframe
2025-02-20 13:14:19,503:INFO:Initializing Gradient Boosting Classifier
2025-02-20 13:14:19,503:INFO:Total runtime is 0.2849910497665405 minutes
2025-02-20 13:14:19,503:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:19,503:INFO:Initializing create_model()
2025-02-20 13:14:19,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:19,503:INFO:Checking exceptions
2025-02-20 13:14:19,503:INFO:Importing libraries
2025-02-20 13:14:19,503:INFO:Copying training dataset
2025-02-20 13:14:19,520:INFO:Defining folds
2025-02-20 13:14:19,520:INFO:Declaring metric variables
2025-02-20 13:14:19,520:INFO:Importing untrained model
2025-02-20 13:14:19,520:INFO:Gradient Boosting Classifier Imported successfully
2025-02-20 13:14:19,536:INFO:Starting cross validation
2025-02-20 13:14:19,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:20,587:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,587:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,604:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,604:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,604:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:20,604:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,618:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,621:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,623:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:20,623:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:20,623:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,623:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,623:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,623:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,637:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:20,637:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,637:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,637:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,649:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,656:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:20,658:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,661:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,663:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:20,666:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,668:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,670:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,670:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,682:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:20,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:20,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:20,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,251:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,267:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,268:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,268:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,268:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,268:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,268:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,268:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,300:INFO:Calculating mean and std
2025-02-20 13:14:21,301:INFO:Creating metrics dataframe
2025-02-20 13:14:21,301:INFO:Uploading results into container
2025-02-20 13:14:21,301:INFO:Uploading model into container now
2025-02-20 13:14:21,301:INFO:_master_model_container: 10
2025-02-20 13:14:21,301:INFO:_display_container: 2
2025-02-20 13:14:21,301:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=215, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-20 13:14:21,301:INFO:create_model() successfully completed......................................
2025-02-20 13:14:21,402:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:21,402:INFO:Creating metrics dataframe
2025-02-20 13:14:21,418:INFO:Initializing Linear Discriminant Analysis
2025-02-20 13:14:21,418:INFO:Total runtime is 0.3169143756230672 minutes
2025-02-20 13:14:21,418:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:21,418:INFO:Initializing create_model()
2025-02-20 13:14:21,418:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:21,418:INFO:Checking exceptions
2025-02-20 13:14:21,418:INFO:Importing libraries
2025-02-20 13:14:21,418:INFO:Copying training dataset
2025-02-20 13:14:21,436:INFO:Defining folds
2025-02-20 13:14:21,436:INFO:Declaring metric variables
2025-02-20 13:14:21,439:INFO:Importing untrained model
2025-02-20 13:14:21,446:INFO:Linear Discriminant Analysis Imported successfully
2025-02-20 13:14:21,453:INFO:Starting cross validation
2025-02-20 13:14:21,453:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:21,724:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,738:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,744:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,747:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,749:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,749:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,757:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,757:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,757:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,757:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,757:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,757:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,766:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,769:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,784:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,786:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,786:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,793:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,799:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,799:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,802:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,802:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,802:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,937:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,937:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,946:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:21,951:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:21,966:INFO:Calculating mean and std
2025-02-20 13:14:21,967:INFO:Creating metrics dataframe
2025-02-20 13:14:21,967:INFO:Uploading results into container
2025-02-20 13:14:21,967:INFO:Uploading model into container now
2025-02-20 13:14:21,967:INFO:_master_model_container: 11
2025-02-20 13:14:21,967:INFO:_display_container: 2
2025-02-20 13:14:21,967:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-20 13:14:21,967:INFO:create_model() successfully completed......................................
2025-02-20 13:14:22,068:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:22,068:INFO:Creating metrics dataframe
2025-02-20 13:14:22,084:INFO:Initializing Extra Trees Classifier
2025-02-20 13:14:22,084:INFO:Total runtime is 0.32801608641942337 minutes
2025-02-20 13:14:22,084:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:22,084:INFO:Initializing create_model()
2025-02-20 13:14:22,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:22,084:INFO:Checking exceptions
2025-02-20 13:14:22,084:INFO:Importing libraries
2025-02-20 13:14:22,084:INFO:Copying training dataset
2025-02-20 13:14:22,084:INFO:Defining folds
2025-02-20 13:14:22,100:INFO:Declaring metric variables
2025-02-20 13:14:22,101:INFO:Importing untrained model
2025-02-20 13:14:22,101:INFO:Extra Trees Classifier Imported successfully
2025-02-20 13:14:22,118:INFO:Starting cross validation
2025-02-20 13:14:22,118:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:22,811:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,817:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,837:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,843:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,843:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,856:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,856:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,860:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,866:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,867:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,867:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,873:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,884:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,884:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,884:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,919:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,919:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,966:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,966:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,984:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,984:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:22,984:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:23,000:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:23,250:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:23,250:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:23,267:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:23,267:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:23,284:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:23,284:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:23,300:INFO:Calculating mean and std
2025-02-20 13:14:23,300:INFO:Creating metrics dataframe
2025-02-20 13:14:23,300:INFO:Uploading results into container
2025-02-20 13:14:23,300:INFO:Uploading model into container now
2025-02-20 13:14:23,300:INFO:_master_model_container: 12
2025-02-20 13:14:23,300:INFO:_display_container: 2
2025-02-20 13:14:23,300:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=215, verbose=0,
                     warm_start=False)
2025-02-20 13:14:23,300:INFO:create_model() successfully completed......................................
2025-02-20 13:14:23,432:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:23,432:INFO:Creating metrics dataframe
2025-02-20 13:14:23,447:INFO:Initializing Light Gradient Boosting Machine
2025-02-20 13:14:23,447:INFO:Total runtime is 0.3507347226142883 minutes
2025-02-20 13:14:23,449:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:23,449:INFO:Initializing create_model()
2025-02-20 13:14:23,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:23,449:INFO:Checking exceptions
2025-02-20 13:14:23,449:INFO:Importing libraries
2025-02-20 13:14:23,449:INFO:Copying training dataset
2025-02-20 13:14:23,449:INFO:Defining folds
2025-02-20 13:14:23,449:INFO:Declaring metric variables
2025-02-20 13:14:23,466:INFO:Importing untrained model
2025-02-20 13:14:23,466:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 13:14:23,466:INFO:Starting cross validation
2025-02-20 13:14:23,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:24,082:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,082:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,082:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,082:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,097:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:24,099:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,099:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,099:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,099:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:24,108:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:24,108:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,108:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,115:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,116:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,132:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:24,136:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,221:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,240:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,245:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:24,249:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,249:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,267:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,267:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:24,275:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,367:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,381:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,382:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,382:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:24,382:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,382:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,395:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:24,399:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,500:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,500:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,500:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,517:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,517:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:24,517:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:24,517:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,517:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,547:INFO:Calculating mean and std
2025-02-20 13:14:24,550:INFO:Creating metrics dataframe
2025-02-20 13:14:24,550:INFO:Uploading results into container
2025-02-20 13:14:24,550:INFO:Uploading model into container now
2025-02-20 13:14:24,550:INFO:_master_model_container: 13
2025-02-20 13:14:24,550:INFO:_display_container: 2
2025-02-20 13:14:24,550:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=215, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-20 13:14:24,550:INFO:create_model() successfully completed......................................
2025-02-20 13:14:24,682:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:24,682:INFO:Creating metrics dataframe
2025-02-20 13:14:24,700:INFO:Initializing Dummy Classifier
2025-02-20 13:14:24,700:INFO:Total runtime is 0.3716109792391459 minutes
2025-02-20 13:14:24,715:INFO:SubProcess create_model() called ==================================
2025-02-20 13:14:24,715:INFO:Initializing create_model()
2025-02-20 13:14:24,715:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000164BA643910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:24,715:INFO:Checking exceptions
2025-02-20 13:14:24,715:INFO:Importing libraries
2025-02-20 13:14:24,715:INFO:Copying training dataset
2025-02-20 13:14:24,715:INFO:Defining folds
2025-02-20 13:14:24,715:INFO:Declaring metric variables
2025-02-20 13:14:24,715:INFO:Importing untrained model
2025-02-20 13:14:24,736:INFO:Dummy Classifier Imported successfully
2025-02-20 13:14:24,744:INFO:Starting cross validation
2025-02-20 13:14:24,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:14:24,982:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,998:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,998:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,998:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:24,998:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:25,016:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:25,016:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,017:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,021:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,022:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,027:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,027:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,029:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:25,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:25,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:25,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,046:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:25,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:25,064:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,065:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,065:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:25,065:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,181:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,198:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,198:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:25,198:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,225:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,232:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,232:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:25,232:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:25,263:INFO:Calculating mean and std
2025-02-20 13:14:25,265:INFO:Creating metrics dataframe
2025-02-20 13:14:25,265:INFO:Uploading results into container
2025-02-20 13:14:25,265:INFO:Uploading model into container now
2025-02-20 13:14:25,265:INFO:_master_model_container: 14
2025-02-20 13:14:25,265:INFO:_display_container: 2
2025-02-20 13:14:25,265:INFO:DummyClassifier(constant=None, random_state=215, strategy='prior')
2025-02-20 13:14:25,265:INFO:create_model() successfully completed......................................
2025-02-20 13:14:25,381:INFO:SubProcess create_model() end ==================================
2025-02-20 13:14:25,381:INFO:Creating metrics dataframe
2025-02-20 13:14:25,400:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-20 13:14:25,424:INFO:Initializing create_model()
2025-02-20 13:14:25,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=215, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:14:25,424:INFO:Checking exceptions
2025-02-20 13:14:25,427:INFO:Importing libraries
2025-02-20 13:14:25,427:INFO:Copying training dataset
2025-02-20 13:14:25,431:INFO:Defining folds
2025-02-20 13:14:25,431:INFO:Declaring metric variables
2025-02-20 13:14:25,431:INFO:Importing untrained model
2025-02-20 13:14:25,431:INFO:Declaring custom model
2025-02-20 13:14:25,431:INFO:Logistic Regression Imported successfully
2025-02-20 13:14:25,431:INFO:Cross validation set to False
2025-02-20 13:14:25,431:INFO:Fitting Model
2025-02-20 13:14:25,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:14:25,902:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=215, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 13:14:25,902:INFO:create_model() successfully completed......................................
2025-02-20 13:14:26,047:INFO:_master_model_container: 14
2025-02-20 13:14:26,047:INFO:_display_container: 2
2025-02-20 13:14:26,047:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=215, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 13:14:26,047:INFO:compare_models() successfully completed......................................
2025-02-20 13:14:26,101:INFO:Initializing predict_model()
2025-02-20 13:14:26,101:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=215, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000164BE3080D0>)
2025-02-20 13:14:26,101:INFO:Checking exceptions
2025-02-20 13:14:26,101:INFO:Preloading libraries
2025-02-20 13:14:26,115:INFO:Set up data.
2025-02-20 13:14:26,117:INFO:Set up index.
2025-02-20 13:14:26,214:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2025-02-20 13:14:26,214:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:26,214:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:26,214:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:26,214:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:26,214:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:14:26,214:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:14:26,214:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 13:14:26,214:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2025-02-20 13:14:26,214:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 13:14:26,385:INFO:Initializing save_model()
2025-02-20 13:14:26,385:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=215, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 13:14:26,385:INFO:Adding model into prep_pipe
2025-02-20 13:14:26,442:INFO:LDA.pkl saved in current working directory
2025-02-20 13:14:26,450:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=215,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 13:14:26,450:INFO:save_model() successfully completed......................................
2025-02-20 13:14:26,648:INFO:Initializing load_model()
2025-02-20 13:14:26,648:INFO:load_model(model_name=LDA, platform=None, authentication=None, verbose=True)
2025-02-20 13:14:26,792:INFO:Initializing predict_model()
2025-02-20 13:14:26,792:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000164C042EDA0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=215,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000164BBB4B910>)
2025-02-20 13:14:26,792:INFO:Checking exceptions
2025-02-20 13:14:26,792:INFO:Preloading libraries
2025-02-20 13:14:26,795:INFO:Set up data.
2025-02-20 13:14:26,801:INFO:Set up index.
2025-02-20 13:49:18,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 13:49:18,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 13:49:18,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 13:49:18,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 13:49:19,749:INFO:PyCaret ClassificationExperiment
2025-02-20 13:49:19,749:INFO:Logging name: clf-default-name
2025-02-20 13:49:19,749:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-20 13:49:19,749:INFO:version 3.3.2
2025-02-20 13:49:19,749:INFO:Initializing setup()
2025-02-20 13:49:19,749:INFO:self.USI: 133a
2025-02-20 13:49:19,749:INFO:self._variable_keys: {'data', 'memory', 'y_train', 'y_test', 'X_train', 'log_plots_param', 'logging_param', 'html_param', 'fold_groups_param', '_available_plots', 'X_test', 'gpu_param', 'fix_imbalance', 'fold_generator', 'seed', 'y', 'exp_id', 'X', 'exp_name_log', 'target_param', 'n_jobs_param', '_ml_usecase', 'idx', 'is_multiclass', 'pipeline', 'fold_shuffle_param', 'USI', 'gpu_n_jobs_param'}
2025-02-20 13:49:19,749:INFO:Checking environment
2025-02-20 13:49:19,749:INFO:python_version: 3.10.16
2025-02-20 13:49:19,749:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-20 13:49:19,749:INFO:machine: AMD64
2025-02-20 13:49:19,749:INFO:platform: Windows-10-10.0.22631-SP0
2025-02-20 13:49:19,752:INFO:Memory: svmem(total=8299257856, available=1325535232, percent=84.0, used=6973722624, free=1325535232)
2025-02-20 13:49:19,752:INFO:Physical Core: 4
2025-02-20 13:49:19,752:INFO:Logical Core: 8
2025-02-20 13:49:19,752:INFO:Checking libraries
2025-02-20 13:49:19,752:INFO:System:
2025-02-20 13:49:19,752:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-20 13:49:19,752:INFO:executable: c:\Users\ksaig\anaconda3\envs\sai\python.exe
2025-02-20 13:49:19,752:INFO:   machine: Windows-10-10.0.22631-SP0
2025-02-20 13:49:19,752:INFO:PyCaret required dependencies:
2025-02-20 13:49:19,789:INFO:                 pip: 24.2
2025-02-20 13:49:19,789:INFO:          setuptools: 75.1.0
2025-02-20 13:49:19,789:INFO:             pycaret: 3.3.2
2025-02-20 13:49:19,789:INFO:             IPython: 8.32.0
2025-02-20 13:49:19,789:INFO:          ipywidgets: 8.1.5
2025-02-20 13:49:19,789:INFO:                tqdm: 4.67.1
2025-02-20 13:49:19,789:INFO:               numpy: 1.26.4
2025-02-20 13:49:19,789:INFO:              pandas: 2.1.4
2025-02-20 13:49:19,789:INFO:              jinja2: 3.1.5
2025-02-20 13:49:19,789:INFO:               scipy: 1.11.4
2025-02-20 13:49:19,789:INFO:              joblib: 1.3.2
2025-02-20 13:49:19,789:INFO:             sklearn: 1.4.2
2025-02-20 13:49:19,789:INFO:                pyod: 2.0.3
2025-02-20 13:49:19,789:INFO:            imblearn: 0.13.0
2025-02-20 13:49:19,789:INFO:   category_encoders: 2.7.0
2025-02-20 13:49:19,789:INFO:            lightgbm: 4.6.0
2025-02-20 13:49:19,789:INFO:               numba: 0.61.0
2025-02-20 13:49:19,789:INFO:            requests: 2.32.3
2025-02-20 13:49:19,789:INFO:          matplotlib: 3.7.5
2025-02-20 13:49:19,790:INFO:          scikitplot: 0.3.7
2025-02-20 13:49:19,790:INFO:         yellowbrick: 1.5
2025-02-20 13:49:19,790:INFO:              plotly: 5.24.1
2025-02-20 13:49:19,790:INFO:    plotly-resampler: Not installed
2025-02-20 13:49:19,790:INFO:             kaleido: 0.2.1
2025-02-20 13:49:19,790:INFO:           schemdraw: 0.15
2025-02-20 13:49:19,790:INFO:         statsmodels: 0.14.4
2025-02-20 13:49:19,790:INFO:              sktime: 0.26.0
2025-02-20 13:49:19,790:INFO:               tbats: 1.1.3
2025-02-20 13:49:19,790:INFO:            pmdarima: 2.0.4
2025-02-20 13:49:19,790:INFO:              psutil: 6.1.1
2025-02-20 13:49:19,790:INFO:          markupsafe: 3.0.2
2025-02-20 13:49:19,790:INFO:             pickle5: Not installed
2025-02-20 13:49:19,790:INFO:         cloudpickle: 3.1.1
2025-02-20 13:49:19,790:INFO:         deprecation: 2.1.0
2025-02-20 13:49:19,790:INFO:              xxhash: 3.5.0
2025-02-20 13:49:19,790:INFO:           wurlitzer: Not installed
2025-02-20 13:49:19,791:INFO:PyCaret optional dependencies:
2025-02-20 13:49:19,804:INFO:                shap: Not installed
2025-02-20 13:49:19,804:INFO:           interpret: Not installed
2025-02-20 13:49:19,804:INFO:                umap: Not installed
2025-02-20 13:49:19,804:INFO:     ydata_profiling: Not installed
2025-02-20 13:49:19,804:INFO:  explainerdashboard: Not installed
2025-02-20 13:49:19,804:INFO:             autoviz: Not installed
2025-02-20 13:49:19,804:INFO:           fairlearn: Not installed
2025-02-20 13:49:19,804:INFO:          deepchecks: Not installed
2025-02-20 13:49:19,804:INFO:             xgboost: Not installed
2025-02-20 13:49:19,804:INFO:            catboost: Not installed
2025-02-20 13:49:19,804:INFO:              kmodes: Not installed
2025-02-20 13:49:19,804:INFO:             mlxtend: Not installed
2025-02-20 13:49:19,804:INFO:       statsforecast: Not installed
2025-02-20 13:49:19,804:INFO:        tune_sklearn: Not installed
2025-02-20 13:49:19,804:INFO:                 ray: Not installed
2025-02-20 13:49:19,804:INFO:            hyperopt: Not installed
2025-02-20 13:49:19,805:INFO:              optuna: Not installed
2025-02-20 13:49:19,805:INFO:               skopt: Not installed
2025-02-20 13:49:19,805:INFO:              mlflow: Not installed
2025-02-20 13:49:19,805:INFO:              gradio: Not installed
2025-02-20 13:49:19,805:INFO:             fastapi: Not installed
2025-02-20 13:49:19,805:INFO:             uvicorn: Not installed
2025-02-20 13:49:19,805:INFO:              m2cgen: Not installed
2025-02-20 13:49:19,805:INFO:           evidently: Not installed
2025-02-20 13:49:19,805:INFO:               fugue: Not installed
2025-02-20 13:49:19,805:INFO:           streamlit: Not installed
2025-02-20 13:49:19,805:INFO:             prophet: Not installed
2025-02-20 13:49:19,805:INFO:None
2025-02-20 13:49:19,805:INFO:Set up data.
2025-02-20 13:49:19,824:INFO:Set up folding strategy.
2025-02-20 13:49:19,824:INFO:Set up train/test split.
2025-02-20 13:49:19,855:INFO:Set up index.
2025-02-20 13:49:19,856:INFO:Assigning column types.
2025-02-20 13:49:19,858:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-20 13:49:19,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 13:49:19,907:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 13:49:19,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:19,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:19,988:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 13:49:19,988:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 13:49:20,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,017:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-20 13:49:20,056:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 13:49:20,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,121:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 13:49:20,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,156:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-20 13:49:20,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,292:INFO:Preparing preprocessing pipeline...
2025-02-20 13:49:20,292:INFO:Set up label encoding.
2025-02-20 13:49:20,292:INFO:Set up simple imputation.
2025-02-20 13:49:20,292:INFO:Set up encoding of categorical features.
2025-02-20 13:49:20,292:INFO:Set up column name cleaning.
2025-02-20 13:49:20,467:INFO:Finished creating preprocessing pipeline.
2025-02-20 13:49:20,484:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-02-20 13:49:20,484:INFO:Creating final display dataframe.
2025-02-20 13:49:20,860:INFO:Setup _display_container:                     Description             Value
0                    Session id              1366
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (7032, 12)
5        Transformed data shape        (7032, 17)
6   Transformed train set shape        (4922, 17)
7    Transformed test set shape        (2110, 17)
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              133a
2025-02-20 13:49:20,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 13:49:20,984:INFO:setup() successfully completed in 1.25s...............
2025-02-20 13:49:21,000:INFO:Initializing compare_models()
2025-02-20 13:49:21,000:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-20 13:49:21,000:INFO:Checking exceptions
2025-02-20 13:49:21,000:INFO:Preparing display monitor
2025-02-20 13:49:21,037:INFO:Initializing Logistic Regression
2025-02-20 13:49:21,038:INFO:Total runtime is 1.6589959462483723e-05 minutes
2025-02-20 13:49:21,041:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:21,042:INFO:Initializing create_model()
2025-02-20 13:49:21,042:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:21,042:INFO:Checking exceptions
2025-02-20 13:49:21,042:INFO:Importing libraries
2025-02-20 13:49:21,042:INFO:Copying training dataset
2025-02-20 13:49:21,049:INFO:Defining folds
2025-02-20 13:49:21,049:INFO:Declaring metric variables
2025-02-20 13:49:21,056:INFO:Importing untrained model
2025-02-20 13:49:21,060:INFO:Logistic Regression Imported successfully
2025-02-20 13:49:21,069:INFO:Starting cross validation
2025-02-20 13:49:21,072:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:29,402:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:29,427:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:29,427:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:29,442:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:29,458:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:29,491:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,512:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:29,512:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,520:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:29,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,552:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,552:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,568:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,577:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,577:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,610:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,610:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,625:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,641:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,648:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,648:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,840:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:29,890:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,908:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:29,911:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,139:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:30,155:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:30,186:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,186:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,186:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,186:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,186:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,202:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,218:INFO:Calculating mean and std
2025-02-20 13:49:30,218:INFO:Creating metrics dataframe
2025-02-20 13:49:30,218:INFO:Uploading results into container
2025-02-20 13:49:30,223:INFO:Uploading model into container now
2025-02-20 13:49:30,223:INFO:_master_model_container: 1
2025-02-20 13:49:30,224:INFO:_display_container: 2
2025-02-20 13:49:30,225:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1366, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 13:49:30,225:INFO:create_model() successfully completed......................................
2025-02-20 13:49:30,306:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:30,306:INFO:Creating metrics dataframe
2025-02-20 13:49:30,314:INFO:Initializing K Neighbors Classifier
2025-02-20 13:49:30,314:INFO:Total runtime is 0.15461754004160563 minutes
2025-02-20 13:49:30,317:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:30,317:INFO:Initializing create_model()
2025-02-20 13:49:30,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:30,318:INFO:Checking exceptions
2025-02-20 13:49:30,318:INFO:Importing libraries
2025-02-20 13:49:30,318:INFO:Copying training dataset
2025-02-20 13:49:30,324:INFO:Defining folds
2025-02-20 13:49:30,325:INFO:Declaring metric variables
2025-02-20 13:49:30,325:INFO:Importing untrained model
2025-02-20 13:49:30,325:INFO:K Neighbors Classifier Imported successfully
2025-02-20 13:49:30,342:INFO:Starting cross validation
2025-02-20 13:49:30,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:30,840:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,856:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,856:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,856:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,861:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,861:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,861:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,861:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,872:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,872:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,872:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,872:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,887:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,887:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,903:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,909:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,909:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,909:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,909:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,909:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,909:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,909:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,925:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:30,925:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,051:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,067:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,067:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,067:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,067:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,075:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,091:INFO:Calculating mean and std
2025-02-20 13:49:31,092:INFO:Creating metrics dataframe
2025-02-20 13:49:31,092:INFO:Uploading results into container
2025-02-20 13:49:31,092:INFO:Uploading model into container now
2025-02-20 13:49:31,092:INFO:_master_model_container: 2
2025-02-20 13:49:31,092:INFO:_display_container: 2
2025-02-20 13:49:31,092:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-20 13:49:31,092:INFO:create_model() successfully completed......................................
2025-02-20 13:49:31,154:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:31,154:INFO:Creating metrics dataframe
2025-02-20 13:49:31,174:INFO:Initializing Naive Bayes
2025-02-20 13:49:31,174:INFO:Total runtime is 0.16895219484965007 minutes
2025-02-20 13:49:31,177:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:31,177:INFO:Initializing create_model()
2025-02-20 13:49:31,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:31,177:INFO:Checking exceptions
2025-02-20 13:49:31,177:INFO:Importing libraries
2025-02-20 13:49:31,177:INFO:Copying training dataset
2025-02-20 13:49:31,177:INFO:Defining folds
2025-02-20 13:49:31,177:INFO:Declaring metric variables
2025-02-20 13:49:31,177:INFO:Importing untrained model
2025-02-20 13:49:31,192:INFO:Naive Bayes Imported successfully
2025-02-20 13:49:31,192:INFO:Starting cross validation
2025-02-20 13:49:31,192:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:31,474:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,474:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,490:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,490:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,490:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,490:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,490:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,490:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,490:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,515:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,516:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,517:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,547:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,547:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,556:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,556:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,556:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,556:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,572:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,573:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,573:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,588:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,593:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,671:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:31,718:INFO:Calculating mean and std
2025-02-20 13:49:31,718:INFO:Creating metrics dataframe
2025-02-20 13:49:31,718:INFO:Uploading results into container
2025-02-20 13:49:31,718:INFO:Uploading model into container now
2025-02-20 13:49:31,718:INFO:_master_model_container: 3
2025-02-20 13:49:31,718:INFO:_display_container: 2
2025-02-20 13:49:31,718:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-20 13:49:31,718:INFO:create_model() successfully completed......................................
2025-02-20 13:49:31,775:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:31,775:INFO:Creating metrics dataframe
2025-02-20 13:49:31,790:INFO:Initializing Decision Tree Classifier
2025-02-20 13:49:31,790:INFO:Total runtime is 0.1792170763015747 minutes
2025-02-20 13:49:31,798:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:31,798:INFO:Initializing create_model()
2025-02-20 13:49:31,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:31,798:INFO:Checking exceptions
2025-02-20 13:49:31,798:INFO:Importing libraries
2025-02-20 13:49:31,798:INFO:Copying training dataset
2025-02-20 13:49:31,798:INFO:Defining folds
2025-02-20 13:49:31,798:INFO:Declaring metric variables
2025-02-20 13:49:31,808:INFO:Importing untrained model
2025-02-20 13:49:31,808:INFO:Decision Tree Classifier Imported successfully
2025-02-20 13:49:31,808:INFO:Starting cross validation
2025-02-20 13:49:31,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:32,091:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,091:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,091:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,110:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,128:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,128:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,129:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,131:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,136:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,138:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,147:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,149:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,274:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,274:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,274:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,290:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,290:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,306:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,321:INFO:Calculating mean and std
2025-02-20 13:49:32,321:INFO:Creating metrics dataframe
2025-02-20 13:49:32,321:INFO:Uploading results into container
2025-02-20 13:49:32,321:INFO:Uploading model into container now
2025-02-20 13:49:32,321:INFO:_master_model_container: 4
2025-02-20 13:49:32,321:INFO:_display_container: 2
2025-02-20 13:49:32,321:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1366, splitter='best')
2025-02-20 13:49:32,321:INFO:create_model() successfully completed......................................
2025-02-20 13:49:32,386:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:32,386:INFO:Creating metrics dataframe
2025-02-20 13:49:32,391:INFO:Initializing SVM - Linear Kernel
2025-02-20 13:49:32,391:INFO:Total runtime is 0.18923895359039308 minutes
2025-02-20 13:49:32,391:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:32,391:INFO:Initializing create_model()
2025-02-20 13:49:32,391:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:32,391:INFO:Checking exceptions
2025-02-20 13:49:32,391:INFO:Importing libraries
2025-02-20 13:49:32,391:INFO:Copying training dataset
2025-02-20 13:49:32,407:INFO:Defining folds
2025-02-20 13:49:32,407:INFO:Declaring metric variables
2025-02-20 13:49:32,407:INFO:Importing untrained model
2025-02-20 13:49:32,407:INFO:SVM - Linear Kernel Imported successfully
2025-02-20 13:49:32,407:INFO:Starting cross validation
2025-02-20 13:49:32,425:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,789:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,805:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,805:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,805:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,805:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,805:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,821:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,821:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,821:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,821:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,836:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,836:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,846:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,852:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,859:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,862:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,872:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,881:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:32,887:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,019:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,030:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,037:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,043:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,049:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,053:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,070:INFO:Calculating mean and std
2025-02-20 13:49:33,072:INFO:Creating metrics dataframe
2025-02-20 13:49:33,072:INFO:Uploading results into container
2025-02-20 13:49:33,072:INFO:Uploading model into container now
2025-02-20 13:49:33,072:INFO:_master_model_container: 5
2025-02-20 13:49:33,072:INFO:_display_container: 2
2025-02-20 13:49:33,072:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1366, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-20 13:49:33,072:INFO:create_model() successfully completed......................................
2025-02-20 13:49:33,162:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:33,162:INFO:Creating metrics dataframe
2025-02-20 13:49:33,170:INFO:Initializing Ridge Classifier
2025-02-20 13:49:33,170:INFO:Total runtime is 0.20221740007400515 minutes
2025-02-20 13:49:33,174:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:33,175:INFO:Initializing create_model()
2025-02-20 13:49:33,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:33,175:INFO:Checking exceptions
2025-02-20 13:49:33,175:INFO:Importing libraries
2025-02-20 13:49:33,175:INFO:Copying training dataset
2025-02-20 13:49:33,182:INFO:Defining folds
2025-02-20 13:49:33,182:INFO:Declaring metric variables
2025-02-20 13:49:33,186:INFO:Importing untrained model
2025-02-20 13:49:33,191:INFO:Ridge Classifier Imported successfully
2025-02-20 13:49:33,198:INFO:Starting cross validation
2025-02-20 13:49:33,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:33,507:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,507:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,507:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,507:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,524:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,524:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,524:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,524:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,540:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,558:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,558:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,558:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,576:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,576:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,576:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,595:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,595:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,608:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,739:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,739:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,739:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,739:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,739:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,757:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:33,772:INFO:Calculating mean and std
2025-02-20 13:49:33,774:INFO:Creating metrics dataframe
2025-02-20 13:49:33,774:INFO:Uploading results into container
2025-02-20 13:49:33,774:INFO:Uploading model into container now
2025-02-20 13:49:33,774:INFO:_master_model_container: 6
2025-02-20 13:49:33,774:INFO:_display_container: 2
2025-02-20 13:49:33,778:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1366, solver='auto',
                tol=0.0001)
2025-02-20 13:49:33,778:INFO:create_model() successfully completed......................................
2025-02-20 13:49:33,840:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:33,840:INFO:Creating metrics dataframe
2025-02-20 13:49:33,856:INFO:Initializing Random Forest Classifier
2025-02-20 13:49:33,856:INFO:Total runtime is 0.2136589924494426 minutes
2025-02-20 13:49:33,858:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:33,858:INFO:Initializing create_model()
2025-02-20 13:49:33,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:33,858:INFO:Checking exceptions
2025-02-20 13:49:33,858:INFO:Importing libraries
2025-02-20 13:49:33,858:INFO:Copying training dataset
2025-02-20 13:49:33,858:INFO:Defining folds
2025-02-20 13:49:33,858:INFO:Declaring metric variables
2025-02-20 13:49:33,858:INFO:Importing untrained model
2025-02-20 13:49:33,874:INFO:Random Forest Classifier Imported successfully
2025-02-20 13:49:33,882:INFO:Starting cross validation
2025-02-20 13:49:33,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:34,857:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:34,876:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:34,903:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:34,948:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:34,958:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:34,973:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:34,989:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,010:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,023:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,029:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,042:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,042:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,099:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,105:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,124:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,147:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,158:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,166:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,169:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,179:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,190:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,190:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,206:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,206:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,620:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,620:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,620:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,636:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,636:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,636:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:35,652:INFO:Calculating mean and std
2025-02-20 13:49:35,652:INFO:Creating metrics dataframe
2025-02-20 13:49:35,652:INFO:Uploading results into container
2025-02-20 13:49:35,652:INFO:Uploading model into container now
2025-02-20 13:49:35,652:INFO:_master_model_container: 7
2025-02-20 13:49:35,652:INFO:_display_container: 2
2025-02-20 13:49:35,652:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1366, verbose=0,
                       warm_start=False)
2025-02-20 13:49:35,652:INFO:create_model() successfully completed......................................
2025-02-20 13:49:35,721:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:35,721:INFO:Creating metrics dataframe
2025-02-20 13:49:35,735:INFO:Initializing Quadratic Discriminant Analysis
2025-02-20 13:49:35,735:INFO:Total runtime is 0.2449791828791301 minutes
2025-02-20 13:49:35,738:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:35,738:INFO:Initializing create_model()
2025-02-20 13:49:35,738:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:35,738:INFO:Checking exceptions
2025-02-20 13:49:35,738:INFO:Importing libraries
2025-02-20 13:49:35,738:INFO:Copying training dataset
2025-02-20 13:49:35,751:INFO:Defining folds
2025-02-20 13:49:35,751:INFO:Declaring metric variables
2025-02-20 13:49:35,756:INFO:Importing untrained model
2025-02-20 13:49:35,756:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-20 13:49:35,773:INFO:Starting cross validation
2025-02-20 13:49:35,779:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:36,009:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:49:36,017:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:49:36,030:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:49:36,030:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:49:36,053:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:49:36,090:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:49:36,095:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:49:36,111:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:49:36,142:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,142:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,142:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,157:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,157:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,157:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,157:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,157:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,172:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,172:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,184:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,185:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,193:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,197:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,207:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,210:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,217:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,220:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,230:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,230:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,230:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,245:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,261:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,320:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:49:36,339:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 13:49:36,369:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,369:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,369:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,385:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,385:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,385:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,417:INFO:Calculating mean and std
2025-02-20 13:49:36,417:INFO:Creating metrics dataframe
2025-02-20 13:49:36,417:INFO:Uploading results into container
2025-02-20 13:49:36,417:INFO:Uploading model into container now
2025-02-20 13:49:36,417:INFO:_master_model_container: 8
2025-02-20 13:49:36,417:INFO:_display_container: 2
2025-02-20 13:49:36,417:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-20 13:49:36,417:INFO:create_model() successfully completed......................................
2025-02-20 13:49:36,506:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:36,506:INFO:Creating metrics dataframe
2025-02-20 13:49:36,528:INFO:Initializing Ada Boost Classifier
2025-02-20 13:49:36,528:INFO:Total runtime is 0.2581881483395895 minutes
2025-02-20 13:49:36,528:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:36,528:INFO:Initializing create_model()
2025-02-20 13:49:36,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:36,528:INFO:Checking exceptions
2025-02-20 13:49:36,536:INFO:Importing libraries
2025-02-20 13:49:36,536:INFO:Copying training dataset
2025-02-20 13:49:36,545:INFO:Defining folds
2025-02-20 13:49:36,545:INFO:Declaring metric variables
2025-02-20 13:49:36,548:INFO:Importing untrained model
2025-02-20 13:49:36,552:INFO:Ada Boost Classifier Imported successfully
2025-02-20 13:49:36,553:INFO:Starting cross validation
2025-02-20 13:49:36,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:36,885:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:49:36,885:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:49:36,917:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:49:36,926:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:49:36,926:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:49:36,954:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:49:36,985:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:36,985:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,005:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,005:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:49:37,010:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:37,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:37,030:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,030:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,030:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,036:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,036:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,036:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:49:37,036:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:37,036:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,036:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,036:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,036:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:37,054:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:37,054:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,070:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,070:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,094:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,103:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:37,103:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,122:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,134:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,148:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,150:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:37,158:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,161:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,180:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:37,180:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,254:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:49:37,254:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 13:49:37,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:37,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,318:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,318:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:37,318:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:37,333:INFO:Calculating mean and std
2025-02-20 13:49:37,333:INFO:Creating metrics dataframe
2025-02-20 13:49:37,337:INFO:Uploading results into container
2025-02-20 13:49:37,339:INFO:Uploading model into container now
2025-02-20 13:49:37,339:INFO:_master_model_container: 9
2025-02-20 13:49:37,339:INFO:_display_container: 2
2025-02-20 13:49:37,339:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1366)
2025-02-20 13:49:37,339:INFO:create_model() successfully completed......................................
2025-02-20 13:49:37,421:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:37,422:INFO:Creating metrics dataframe
2025-02-20 13:49:37,423:INFO:Initializing Gradient Boosting Classifier
2025-02-20 13:49:37,423:INFO:Total runtime is 0.2731076916058859 minutes
2025-02-20 13:49:37,438:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:37,439:INFO:Initializing create_model()
2025-02-20 13:49:37,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:37,439:INFO:Checking exceptions
2025-02-20 13:49:37,439:INFO:Importing libraries
2025-02-20 13:49:37,440:INFO:Copying training dataset
2025-02-20 13:49:37,450:INFO:Defining folds
2025-02-20 13:49:37,450:INFO:Declaring metric variables
2025-02-20 13:49:37,459:INFO:Importing untrained model
2025-02-20 13:49:37,464:INFO:Gradient Boosting Classifier Imported successfully
2025-02-20 13:49:37,473:INFO:Starting cross validation
2025-02-20 13:49:37,473:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:38,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,933:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:38,933:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,933:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,933:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,933:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,948:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:38,948:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:38,950:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:38,954:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,954:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:38,957:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:39,512:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:39,518:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:39,518:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:39,524:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:39,526:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:39,526:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:39,526:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:39,534:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:39,551:INFO:Calculating mean and std
2025-02-20 13:49:39,552:INFO:Creating metrics dataframe
2025-02-20 13:49:39,555:INFO:Uploading results into container
2025-02-20 13:49:39,558:INFO:Uploading model into container now
2025-02-20 13:49:39,558:INFO:_master_model_container: 10
2025-02-20 13:49:39,558:INFO:_display_container: 2
2025-02-20 13:49:39,558:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1366, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-20 13:49:39,558:INFO:create_model() successfully completed......................................
2025-02-20 13:49:39,653:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:39,653:INFO:Creating metrics dataframe
2025-02-20 13:49:39,658:INFO:Initializing Linear Discriminant Analysis
2025-02-20 13:49:39,658:INFO:Total runtime is 0.3103605190912883 minutes
2025-02-20 13:49:39,669:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:39,670:INFO:Initializing create_model()
2025-02-20 13:49:39,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:39,670:INFO:Checking exceptions
2025-02-20 13:49:39,670:INFO:Importing libraries
2025-02-20 13:49:39,671:INFO:Copying training dataset
2025-02-20 13:49:39,677:INFO:Defining folds
2025-02-20 13:49:39,677:INFO:Declaring metric variables
2025-02-20 13:49:39,689:INFO:Importing untrained model
2025-02-20 13:49:39,689:INFO:Linear Discriminant Analysis Imported successfully
2025-02-20 13:49:39,689:INFO:Starting cross validation
2025-02-20 13:49:39,703:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:40,001:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,018:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,018:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,018:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,032:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,048:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,048:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:40,048:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:40,048:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,048:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,048:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,063:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,063:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:40,063:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,182:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,182:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,182:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,182:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,182:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:40,182:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,182:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:40,198:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:40,213:INFO:Calculating mean and std
2025-02-20 13:49:40,213:INFO:Creating metrics dataframe
2025-02-20 13:49:40,213:INFO:Uploading results into container
2025-02-20 13:49:40,213:INFO:Uploading model into container now
2025-02-20 13:49:40,213:INFO:_master_model_container: 11
2025-02-20 13:49:40,213:INFO:_display_container: 2
2025-02-20 13:49:40,213:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-20 13:49:40,213:INFO:create_model() successfully completed......................................
2025-02-20 13:49:40,267:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:40,267:INFO:Creating metrics dataframe
2025-02-20 13:49:40,285:INFO:Initializing Extra Trees Classifier
2025-02-20 13:49:40,285:INFO:Total runtime is 0.3208051562309266 minutes
2025-02-20 13:49:40,285:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:40,285:INFO:Initializing create_model()
2025-02-20 13:49:40,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:40,285:INFO:Checking exceptions
2025-02-20 13:49:40,285:INFO:Importing libraries
2025-02-20 13:49:40,285:INFO:Copying training dataset
2025-02-20 13:49:40,302:INFO:Defining folds
2025-02-20 13:49:40,302:INFO:Declaring metric variables
2025-02-20 13:49:40,302:INFO:Importing untrained model
2025-02-20 13:49:40,302:INFO:Extra Trees Classifier Imported successfully
2025-02-20 13:49:40,349:INFO:Starting cross validation
2025-02-20 13:49:40,352:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:40,998:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,018:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,033:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,033:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,033:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,071:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,080:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,080:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,080:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,096:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,096:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,133:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,133:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,149:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,164:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,180:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,180:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,487:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,487:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,500:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,517:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,517:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,517:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:41,547:INFO:Calculating mean and std
2025-02-20 13:49:41,547:INFO:Creating metrics dataframe
2025-02-20 13:49:41,555:INFO:Uploading results into container
2025-02-20 13:49:41,555:INFO:Uploading model into container now
2025-02-20 13:49:41,555:INFO:_master_model_container: 12
2025-02-20 13:49:41,555:INFO:_display_container: 2
2025-02-20 13:49:41,555:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1366, verbose=0,
                     warm_start=False)
2025-02-20 13:49:41,555:INFO:create_model() successfully completed......................................
2025-02-20 13:49:41,631:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:41,631:INFO:Creating metrics dataframe
2025-02-20 13:49:41,651:INFO:Initializing Light Gradient Boosting Machine
2025-02-20 13:49:41,654:INFO:Total runtime is 0.3435658097267152 minutes
2025-02-20 13:49:41,660:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:41,660:INFO:Initializing create_model()
2025-02-20 13:49:41,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:41,660:INFO:Checking exceptions
2025-02-20 13:49:41,665:INFO:Importing libraries
2025-02-20 13:49:41,665:INFO:Copying training dataset
2025-02-20 13:49:41,666:INFO:Defining folds
2025-02-20 13:49:41,666:INFO:Declaring metric variables
2025-02-20 13:49:41,666:INFO:Importing untrained model
2025-02-20 13:49:41,684:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 13:49:41,684:INFO:Starting cross validation
2025-02-20 13:49:41,684:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:42,446:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,446:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,446:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,459:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,459:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:42,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:42,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:42,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,478:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,478:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,478:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:42,492:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,578:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,594:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,594:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,594:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:42,609:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,609:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,616:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:42,617:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,698:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,713:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,713:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,729:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:42,729:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,729:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,729:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:42,744:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,880:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,897:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,897:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,897:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:42,897:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,897:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,911:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:42,911:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:42,943:INFO:Calculating mean and std
2025-02-20 13:49:42,945:INFO:Creating metrics dataframe
2025-02-20 13:49:42,949:INFO:Uploading results into container
2025-02-20 13:49:42,950:INFO:Uploading model into container now
2025-02-20 13:49:42,951:INFO:_master_model_container: 13
2025-02-20 13:49:42,951:INFO:_display_container: 2
2025-02-20 13:49:42,951:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1366, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-20 13:49:42,951:INFO:create_model() successfully completed......................................
2025-02-20 13:49:43,014:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:43,014:INFO:Creating metrics dataframe
2025-02-20 13:49:43,031:INFO:Initializing Dummy Classifier
2025-02-20 13:49:43,031:INFO:Total runtime is 0.36657092571258554 minutes
2025-02-20 13:49:43,031:INFO:SubProcess create_model() called ==================================
2025-02-20 13:49:43,031:INFO:Initializing create_model()
2025-02-20 13:49:43,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD5DA08A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:43,031:INFO:Checking exceptions
2025-02-20 13:49:43,031:INFO:Importing libraries
2025-02-20 13:49:43,031:INFO:Copying training dataset
2025-02-20 13:49:43,031:INFO:Defining folds
2025-02-20 13:49:43,031:INFO:Declaring metric variables
2025-02-20 13:49:43,031:INFO:Importing untrained model
2025-02-20 13:49:43,046:INFO:Dummy Classifier Imported successfully
2025-02-20 13:49:43,056:INFO:Starting cross validation
2025-02-20 13:49:43,056:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 13:49:43,330:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,330:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,338:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,338:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,348:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,364:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,364:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:43,364:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,364:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,364:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,372:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,372:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,372:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:43,372:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:43,372:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:43,380:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,380:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,380:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,380:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,380:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:43,380:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,495:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,511:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,514:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:43,514:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,514:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,514:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,514:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:43,514:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:43,546:INFO:Calculating mean and std
2025-02-20 13:49:43,546:INFO:Creating metrics dataframe
2025-02-20 13:49:43,546:INFO:Uploading results into container
2025-02-20 13:49:43,546:INFO:Uploading model into container now
2025-02-20 13:49:43,546:INFO:_master_model_container: 14
2025-02-20 13:49:43,546:INFO:_display_container: 2
2025-02-20 13:49:43,546:INFO:DummyClassifier(constant=None, random_state=1366, strategy='prior')
2025-02-20 13:49:43,546:INFO:create_model() successfully completed......................................
2025-02-20 13:49:43,609:INFO:SubProcess create_model() end ==================================
2025-02-20 13:49:43,609:INFO:Creating metrics dataframe
2025-02-20 13:49:43,632:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-20 13:49:43,633:INFO:Initializing create_model()
2025-02-20 13:49:43,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1366, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 13:49:43,633:INFO:Checking exceptions
2025-02-20 13:49:43,633:INFO:Importing libraries
2025-02-20 13:49:43,633:INFO:Copying training dataset
2025-02-20 13:49:43,647:INFO:Defining folds
2025-02-20 13:49:43,647:INFO:Declaring metric variables
2025-02-20 13:49:43,647:INFO:Importing untrained model
2025-02-20 13:49:43,647:INFO:Declaring custom model
2025-02-20 13:49:43,647:INFO:Logistic Regression Imported successfully
2025-02-20 13:49:43,647:INFO:Cross validation set to False
2025-02-20 13:49:43,647:INFO:Fitting Model
2025-02-20 13:49:44,108:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 13:49:44,108:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1366, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 13:49:44,108:INFO:create_model() successfully completed......................................
2025-02-20 13:49:44,201:INFO:_master_model_container: 14
2025-02-20 13:49:44,201:INFO:_display_container: 2
2025-02-20 13:49:44,201:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1366, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 13:49:44,201:INFO:compare_models() successfully completed......................................
2025-02-20 13:49:44,316:INFO:Initializing predict_model()
2025-02-20 13:49:44,316:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1366, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD5D9BBE20>)
2025-02-20 13:49:44,316:INFO:Checking exceptions
2025-02-20 13:49:44,316:INFO:Preloading libraries
2025-02-20 13:49:44,330:INFO:Set up data.
2025-02-20 13:49:44,332:INFO:Set up index.
2025-02-20 13:49:44,418:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2025-02-20 13:49:44,420:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:44,421:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:44,423:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:44,424:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:44,425:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 13:49:44,426:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 13:49:44,427:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 13:49:44,427:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2025-02-20 13:49:44,428:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 13:49:44,522:INFO:Initializing save_model()
2025-02-20 13:49:44,522:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1366, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 13:49:44,522:INFO:Adding model into prep_pipe
2025-02-20 13:49:44,541:INFO:LDA.pkl saved in current working directory
2025-02-20 13:49:44,566:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1366,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 13:49:44,566:INFO:save_model() successfully completed......................................
2025-02-20 13:49:44,713:INFO:Initializing load_model()
2025-02-20 13:49:44,713:INFO:load_model(model_name=LDA, platform=None, authentication=None, verbose=True)
2025-02-20 13:49:44,930:INFO:Initializing predict_model()
2025-02-20 13:49:44,930:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1366,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD6DC4A440>)
2025-02-20 13:49:44,930:INFO:Checking exceptions
2025-02-20 13:49:44,930:INFO:Preloading libraries
2025-02-20 13:49:44,930:INFO:Set up data.
2025-02-20 13:49:44,947:INFO:Set up index.
2025-02-20 13:49:57,072:INFO:Initializing load_model()
2025-02-20 13:49:57,072:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 13:50:22,284:INFO:Initializing save_model()
2025-02-20 13:50:22,284:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1366, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=GBC, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 13:50:22,284:INFO:Adding model into prep_pipe
2025-02-20 13:50:22,298:INFO:GBC.pkl saved in current working directory
2025-02-20 13:50:22,308:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1366,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 13:50:22,308:INFO:save_model() successfully completed......................................
2025-02-20 13:50:43,095:INFO:Initializing load_model()
2025-02-20 13:50:43,095:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 13:50:48,905:INFO:Initializing predict_model()
2025-02-20 13:50:48,905:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0124E0B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1366,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD04DA0DC0>)
2025-02-20 13:50:48,905:INFO:Checking exceptions
2025-02-20 13:50:48,905:INFO:Preloading libraries
2025-02-20 13:50:48,906:INFO:Set up data.
2025-02-20 13:50:48,906:INFO:Set up index.
2025-02-20 13:50:55,970:INFO:Initializing load_model()
2025-02-20 13:50:55,970:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 13:53:20,224:INFO:Initializing load_model()
2025-02-20 13:53:20,224:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 13:53:33,817:INFO:Initializing load_model()
2025-02-20 13:53:33,817:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 13:58:01,100:INFO:Initializing load_model()
2025-02-20 13:58:01,100:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 13:58:41,581:INFO:Initializing load_model()
2025-02-20 13:58:41,582:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 14:02:12,726:INFO:Initializing load_model()
2025-02-20 14:02:12,727:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 14:03:31,091:INFO:Initializing save_model()
2025-02-20 14:03:31,091:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1366, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 14:03:31,091:INFO:Adding model into prep_pipe
2025-02-20 14:03:31,109:INFO:LDA.pkl saved in current working directory
2025-02-20 14:03:31,130:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1366,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 14:03:31,130:INFO:save_model() successfully completed......................................
2025-02-20 14:03:37,167:INFO:PyCaret ClassificationExperiment
2025-02-20 14:03:37,179:INFO:Logging name: clf-default-name
2025-02-20 14:03:37,179:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-20 14:03:37,179:INFO:version 3.3.2
2025-02-20 14:03:37,179:INFO:Initializing setup()
2025-02-20 14:03:37,179:INFO:self.USI: 6359
2025-02-20 14:03:37,179:INFO:self._variable_keys: {'data', 'memory', 'y_train', 'y_test', 'X_train', 'log_plots_param', 'logging_param', 'html_param', 'fold_groups_param', '_available_plots', 'X_test', 'gpu_param', 'fix_imbalance', 'fold_generator', 'seed', 'y', 'exp_id', 'X', 'exp_name_log', 'target_param', 'n_jobs_param', '_ml_usecase', 'idx', 'is_multiclass', 'pipeline', 'fold_shuffle_param', 'USI', 'gpu_n_jobs_param'}
2025-02-20 14:03:37,179:INFO:Checking environment
2025-02-20 14:03:37,179:INFO:python_version: 3.10.16
2025-02-20 14:03:37,179:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-20 14:03:37,179:INFO:machine: AMD64
2025-02-20 14:03:37,179:INFO:platform: Windows-10-10.0.22631-SP0
2025-02-20 14:03:37,179:INFO:Memory: svmem(total=8299257856, available=936116224, percent=88.7, used=7363141632, free=936116224)
2025-02-20 14:03:37,183:INFO:Physical Core: 4
2025-02-20 14:03:37,183:INFO:Logical Core: 8
2025-02-20 14:03:37,183:INFO:Checking libraries
2025-02-20 14:03:37,183:INFO:System:
2025-02-20 14:03:37,183:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-20 14:03:37,183:INFO:executable: c:\Users\ksaig\anaconda3\envs\sai\python.exe
2025-02-20 14:03:37,184:INFO:   machine: Windows-10-10.0.22631-SP0
2025-02-20 14:03:37,184:INFO:PyCaret required dependencies:
2025-02-20 14:03:37,184:INFO:                 pip: 24.2
2025-02-20 14:03:37,184:INFO:          setuptools: 75.1.0
2025-02-20 14:03:37,184:INFO:             pycaret: 3.3.2
2025-02-20 14:03:37,184:INFO:             IPython: 8.32.0
2025-02-20 14:03:37,184:INFO:          ipywidgets: 8.1.5
2025-02-20 14:03:37,184:INFO:                tqdm: 4.67.1
2025-02-20 14:03:37,184:INFO:               numpy: 1.26.4
2025-02-20 14:03:37,184:INFO:              pandas: 2.1.4
2025-02-20 14:03:37,184:INFO:              jinja2: 3.1.5
2025-02-20 14:03:37,184:INFO:               scipy: 1.11.4
2025-02-20 14:03:37,184:INFO:              joblib: 1.3.2
2025-02-20 14:03:37,184:INFO:             sklearn: 1.4.2
2025-02-20 14:03:37,184:INFO:                pyod: 2.0.3
2025-02-20 14:03:37,184:INFO:            imblearn: 0.13.0
2025-02-20 14:03:37,184:INFO:   category_encoders: 2.7.0
2025-02-20 14:03:37,184:INFO:            lightgbm: 4.6.0
2025-02-20 14:03:37,184:INFO:               numba: 0.61.0
2025-02-20 14:03:37,184:INFO:            requests: 2.32.3
2025-02-20 14:03:37,184:INFO:          matplotlib: 3.7.5
2025-02-20 14:03:37,184:INFO:          scikitplot: 0.3.7
2025-02-20 14:03:37,184:INFO:         yellowbrick: 1.5
2025-02-20 14:03:37,184:INFO:              plotly: 5.24.1
2025-02-20 14:03:37,184:INFO:    plotly-resampler: Not installed
2025-02-20 14:03:37,184:INFO:             kaleido: 0.2.1
2025-02-20 14:03:37,184:INFO:           schemdraw: 0.15
2025-02-20 14:03:37,184:INFO:         statsmodels: 0.14.4
2025-02-20 14:03:37,184:INFO:              sktime: 0.26.0
2025-02-20 14:03:37,184:INFO:               tbats: 1.1.3
2025-02-20 14:03:37,184:INFO:            pmdarima: 2.0.4
2025-02-20 14:03:37,184:INFO:              psutil: 6.1.1
2025-02-20 14:03:37,184:INFO:          markupsafe: 3.0.2
2025-02-20 14:03:37,184:INFO:             pickle5: Not installed
2025-02-20 14:03:37,184:INFO:         cloudpickle: 3.1.1
2025-02-20 14:03:37,184:INFO:         deprecation: 2.1.0
2025-02-20 14:03:37,184:INFO:              xxhash: 3.5.0
2025-02-20 14:03:37,184:INFO:           wurlitzer: Not installed
2025-02-20 14:03:37,184:INFO:PyCaret optional dependencies:
2025-02-20 14:03:37,184:INFO:                shap: Not installed
2025-02-20 14:03:37,184:INFO:           interpret: Not installed
2025-02-20 14:03:37,184:INFO:                umap: Not installed
2025-02-20 14:03:37,184:INFO:     ydata_profiling: Not installed
2025-02-20 14:03:37,184:INFO:  explainerdashboard: Not installed
2025-02-20 14:03:37,184:INFO:             autoviz: Not installed
2025-02-20 14:03:37,184:INFO:           fairlearn: Not installed
2025-02-20 14:03:37,184:INFO:          deepchecks: Not installed
2025-02-20 14:03:37,184:INFO:             xgboost: Not installed
2025-02-20 14:03:37,184:INFO:            catboost: Not installed
2025-02-20 14:03:37,184:INFO:              kmodes: Not installed
2025-02-20 14:03:37,184:INFO:             mlxtend: Not installed
2025-02-20 14:03:37,184:INFO:       statsforecast: Not installed
2025-02-20 14:03:37,184:INFO:        tune_sklearn: Not installed
2025-02-20 14:03:37,184:INFO:                 ray: Not installed
2025-02-20 14:03:37,184:INFO:            hyperopt: Not installed
2025-02-20 14:03:37,184:INFO:              optuna: Not installed
2025-02-20 14:03:37,184:INFO:               skopt: Not installed
2025-02-20 14:03:37,184:INFO:              mlflow: Not installed
2025-02-20 14:03:37,184:INFO:              gradio: Not installed
2025-02-20 14:03:37,184:INFO:             fastapi: Not installed
2025-02-20 14:03:37,184:INFO:             uvicorn: Not installed
2025-02-20 14:03:37,184:INFO:              m2cgen: Not installed
2025-02-20 14:03:37,184:INFO:           evidently: Not installed
2025-02-20 14:03:37,184:INFO:               fugue: Not installed
2025-02-20 14:03:37,184:INFO:           streamlit: Not installed
2025-02-20 14:03:37,184:INFO:             prophet: Not installed
2025-02-20 14:03:37,184:INFO:None
2025-02-20 14:03:37,184:INFO:Set up data.
2025-02-20 14:03:37,184:INFO:Set up folding strategy.
2025-02-20 14:03:37,199:INFO:Set up train/test split.
2025-02-20 14:03:37,208:INFO:Set up index.
2025-02-20 14:03:37,208:INFO:Assigning column types.
2025-02-20 14:03:37,208:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-20 14:03:37,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 14:03:37,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 14:03:37,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 14:03:37,316:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 14:03:37,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,335:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-20 14:03:37,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 14:03:37,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,435:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 14:03:37,451:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,451:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-20 14:03:37,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:37,576:INFO:Preparing preprocessing pipeline...
2025-02-20 14:03:37,576:INFO:Set up label encoding.
2025-02-20 14:03:37,576:INFO:Set up simple imputation.
2025-02-20 14:03:37,576:INFO:Set up encoding of categorical features.
2025-02-20 14:03:37,576:INFO:Set up column name cleaning.
2025-02-20 14:03:37,702:INFO:Finished creating preprocessing pipeline.
2025-02-20 14:03:37,702:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-02-20 14:03:37,702:INFO:Creating final display dataframe.
2025-02-20 14:03:38,026:INFO:Setup _display_container:                     Description             Value
0                    Session id              2138
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (7032, 12)
5        Transformed data shape        (7032, 17)
6   Transformed train set shape        (4922, 17)
7    Transformed test set shape        (2110, 17)
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              6359
2025-02-20 14:03:38,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:38,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:38,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:38,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:03:38,146:INFO:setup() successfully completed in 0.98s...............
2025-02-20 14:03:38,184:INFO:Initializing compare_models()
2025-02-20 14:03:38,184:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-20 14:03:38,184:INFO:Checking exceptions
2025-02-20 14:03:38,184:INFO:Preparing display monitor
2025-02-20 14:03:38,221:INFO:Initializing Logistic Regression
2025-02-20 14:03:38,222:INFO:Total runtime is 1.6677379608154298e-05 minutes
2025-02-20 14:03:38,227:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:38,227:INFO:Initializing create_model()
2025-02-20 14:03:38,227:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:38,227:INFO:Checking exceptions
2025-02-20 14:03:38,227:INFO:Importing libraries
2025-02-20 14:03:38,227:INFO:Copying training dataset
2025-02-20 14:03:38,246:INFO:Defining folds
2025-02-20 14:03:38,246:INFO:Declaring metric variables
2025-02-20 14:03:38,257:INFO:Importing untrained model
2025-02-20 14:03:38,261:INFO:Logistic Regression Imported successfully
2025-02-20 14:03:38,270:INFO:Starting cross validation
2025-02-20 14:03:38,291:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:45,891:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:45,893:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:45,909:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:45,923:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:45,971:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:45,971:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:45,971:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:45,986:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:45,986:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:45,996:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:45,996:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,003:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,003:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:46,003:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,018:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,018:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,034:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,039:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,068:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,081:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,081:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,081:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,081:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:46,102:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,113:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,144:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:46,176:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,196:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,201:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,223:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,227:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,239:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,611:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:46,611:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:46,643:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,643:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,643:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,643:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,659:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,659:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:46,675:INFO:Calculating mean and std
2025-02-20 14:03:46,675:INFO:Creating metrics dataframe
2025-02-20 14:03:46,675:INFO:Uploading results into container
2025-02-20 14:03:46,675:INFO:Uploading model into container now
2025-02-20 14:03:46,675:INFO:_master_model_container: 1
2025-02-20 14:03:46,675:INFO:_display_container: 2
2025-02-20 14:03:46,675:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2138, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 14:03:46,675:INFO:create_model() successfully completed......................................
2025-02-20 14:03:46,773:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:46,773:INFO:Creating metrics dataframe
2025-02-20 14:03:46,773:INFO:Initializing K Neighbors Classifier
2025-02-20 14:03:46,773:INFO:Total runtime is 0.14251936276753743 minutes
2025-02-20 14:03:46,773:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:46,773:INFO:Initializing create_model()
2025-02-20 14:03:46,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:46,773:INFO:Checking exceptions
2025-02-20 14:03:46,773:INFO:Importing libraries
2025-02-20 14:03:46,773:INFO:Copying training dataset
2025-02-20 14:03:46,793:INFO:Defining folds
2025-02-20 14:03:46,793:INFO:Declaring metric variables
2025-02-20 14:03:46,793:INFO:Importing untrained model
2025-02-20 14:03:46,793:INFO:K Neighbors Classifier Imported successfully
2025-02-20 14:03:46,793:INFO:Starting cross validation
2025-02-20 14:03:46,811:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:47,354:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,354:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,354:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,370:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,370:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,370:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,370:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,370:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,370:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,385:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,385:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,385:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,385:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,401:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,407:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,417:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,417:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,440:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,448:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,464:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,471:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,480:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,482:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,484:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,655:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,671:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,671:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,671:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,671:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,671:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:47,703:INFO:Calculating mean and std
2025-02-20 14:03:47,703:INFO:Creating metrics dataframe
2025-02-20 14:03:47,703:INFO:Uploading results into container
2025-02-20 14:03:47,703:INFO:Uploading model into container now
2025-02-20 14:03:47,703:INFO:_master_model_container: 2
2025-02-20 14:03:47,703:INFO:_display_container: 2
2025-02-20 14:03:47,703:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-20 14:03:47,703:INFO:create_model() successfully completed......................................
2025-02-20 14:03:47,787:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:47,787:INFO:Creating metrics dataframe
2025-02-20 14:03:47,804:INFO:Initializing Naive Bayes
2025-02-20 14:03:47,804:INFO:Total runtime is 0.15970276991526286 minutes
2025-02-20 14:03:47,804:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:47,804:INFO:Initializing create_model()
2025-02-20 14:03:47,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:47,804:INFO:Checking exceptions
2025-02-20 14:03:47,804:INFO:Importing libraries
2025-02-20 14:03:47,804:INFO:Copying training dataset
2025-02-20 14:03:47,819:INFO:Defining folds
2025-02-20 14:03:47,819:INFO:Declaring metric variables
2025-02-20 14:03:47,819:INFO:Importing untrained model
2025-02-20 14:03:47,819:INFO:Naive Bayes Imported successfully
2025-02-20 14:03:47,819:INFO:Starting cross validation
2025-02-20 14:03:47,834:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,177:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,324:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,324:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,324:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,339:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,339:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,339:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,355:INFO:Calculating mean and std
2025-02-20 14:03:48,355:INFO:Creating metrics dataframe
2025-02-20 14:03:48,355:INFO:Uploading results into container
2025-02-20 14:03:48,355:INFO:Uploading model into container now
2025-02-20 14:03:48,355:INFO:_master_model_container: 3
2025-02-20 14:03:48,355:INFO:_display_container: 2
2025-02-20 14:03:48,355:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-20 14:03:48,355:INFO:create_model() successfully completed......................................
2025-02-20 14:03:48,425:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:48,425:INFO:Creating metrics dataframe
2025-02-20 14:03:48,442:INFO:Initializing Decision Tree Classifier
2025-02-20 14:03:48,442:INFO:Total runtime is 0.17034014066060385 minutes
2025-02-20 14:03:48,442:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:48,442:INFO:Initializing create_model()
2025-02-20 14:03:48,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:48,442:INFO:Checking exceptions
2025-02-20 14:03:48,442:INFO:Importing libraries
2025-02-20 14:03:48,442:INFO:Copying training dataset
2025-02-20 14:03:48,442:INFO:Defining folds
2025-02-20 14:03:48,442:INFO:Declaring metric variables
2025-02-20 14:03:48,442:INFO:Importing untrained model
2025-02-20 14:03:48,459:INFO:Decision Tree Classifier Imported successfully
2025-02-20 14:03:48,467:INFO:Starting cross validation
2025-02-20 14:03:48,468:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:48,742:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,742:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,742:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,742:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,758:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,762:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:48,767:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,771:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,771:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,773:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:48,775:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,775:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,775:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:48,775:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,792:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,792:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,792:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,792:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:48,808:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,808:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,808:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,808:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,808:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,808:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:48,825:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:48,825:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,825:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,825:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,825:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:48,825:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,908:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,908:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,924:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,925:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:48,925:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,925:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,925:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:48,925:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:48,940:INFO:Calculating mean and std
2025-02-20 14:03:48,941:INFO:Creating metrics dataframe
2025-02-20 14:03:48,942:INFO:Uploading results into container
2025-02-20 14:03:48,942:INFO:Uploading model into container now
2025-02-20 14:03:48,942:INFO:_master_model_container: 4
2025-02-20 14:03:48,942:INFO:_display_container: 2
2025-02-20 14:03:48,942:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2138, splitter='best')
2025-02-20 14:03:48,942:INFO:create_model() successfully completed......................................
2025-02-20 14:03:49,042:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:49,042:INFO:Creating metrics dataframe
2025-02-20 14:03:49,065:INFO:Initializing SVM - Linear Kernel
2025-02-20 14:03:49,065:INFO:Total runtime is 0.18072525660196942 minutes
2025-02-20 14:03:49,067:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:49,068:INFO:Initializing create_model()
2025-02-20 14:03:49,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:49,068:INFO:Checking exceptions
2025-02-20 14:03:49,068:INFO:Importing libraries
2025-02-20 14:03:49,068:INFO:Copying training dataset
2025-02-20 14:03:49,074:INFO:Defining folds
2025-02-20 14:03:49,074:INFO:Declaring metric variables
2025-02-20 14:03:49,075:INFO:Importing untrained model
2025-02-20 14:03:49,075:INFO:SVM - Linear Kernel Imported successfully
2025-02-20 14:03:49,091:INFO:Starting cross validation
2025-02-20 14:03:49,091:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:49,391:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,425:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,425:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,425:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,425:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,425:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,425:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,441:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,441:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,460:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,473:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,476:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,476:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,476:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,476:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,476:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,591:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,591:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,608:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,608:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,608:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,608:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,623:INFO:Calculating mean and std
2025-02-20 14:03:49,624:INFO:Creating metrics dataframe
2025-02-20 14:03:49,624:INFO:Uploading results into container
2025-02-20 14:03:49,624:INFO:Uploading model into container now
2025-02-20 14:03:49,624:INFO:_master_model_container: 5
2025-02-20 14:03:49,624:INFO:_display_container: 2
2025-02-20 14:03:49,624:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2138, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-20 14:03:49,624:INFO:create_model() successfully completed......................................
2025-02-20 14:03:49,708:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:49,708:INFO:Creating metrics dataframe
2025-02-20 14:03:49,708:INFO:Initializing Ridge Classifier
2025-02-20 14:03:49,708:INFO:Total runtime is 0.19143850008646648 minutes
2025-02-20 14:03:49,708:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:49,708:INFO:Initializing create_model()
2025-02-20 14:03:49,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:49,708:INFO:Checking exceptions
2025-02-20 14:03:49,708:INFO:Importing libraries
2025-02-20 14:03:49,708:INFO:Copying training dataset
2025-02-20 14:03:49,724:INFO:Defining folds
2025-02-20 14:03:49,724:INFO:Declaring metric variables
2025-02-20 14:03:49,724:INFO:Importing untrained model
2025-02-20 14:03:49,724:INFO:Ridge Classifier Imported successfully
2025-02-20 14:03:49,724:INFO:Starting cross validation
2025-02-20 14:03:49,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:49,994:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:49,994:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,007:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,007:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,007:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,007:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,007:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,007:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,007:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,007:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,007:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,024:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,024:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,024:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,024:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,024:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,024:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,024:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,024:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,040:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,040:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,044:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,050:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,057:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,153:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,155:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,158:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,158:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,158:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,158:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:50,173:INFO:Calculating mean and std
2025-02-20 14:03:50,174:INFO:Creating metrics dataframe
2025-02-20 14:03:50,174:INFO:Uploading results into container
2025-02-20 14:03:50,174:INFO:Uploading model into container now
2025-02-20 14:03:50,174:INFO:_master_model_container: 6
2025-02-20 14:03:50,174:INFO:_display_container: 2
2025-02-20 14:03:50,174:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2138, solver='auto',
                tol=0.0001)
2025-02-20 14:03:50,174:INFO:create_model() successfully completed......................................
2025-02-20 14:03:50,252:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:50,252:INFO:Creating metrics dataframe
2025-02-20 14:03:50,257:INFO:Initializing Random Forest Classifier
2025-02-20 14:03:50,257:INFO:Total runtime is 0.20059802134831747 minutes
2025-02-20 14:03:50,257:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:50,257:INFO:Initializing create_model()
2025-02-20 14:03:50,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:50,257:INFO:Checking exceptions
2025-02-20 14:03:50,257:INFO:Importing libraries
2025-02-20 14:03:50,257:INFO:Copying training dataset
2025-02-20 14:03:50,257:INFO:Defining folds
2025-02-20 14:03:50,257:INFO:Declaring metric variables
2025-02-20 14:03:50,273:INFO:Importing untrained model
2025-02-20 14:03:50,274:INFO:Random Forest Classifier Imported successfully
2025-02-20 14:03:50,274:INFO:Starting cross validation
2025-02-20 14:03:50,274:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:51,148:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,160:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,173:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,198:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,206:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,218:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,223:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,226:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,226:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,244:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,244:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,254:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,256:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,256:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,273:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,273:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,273:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,273:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,380:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,380:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,390:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,423:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,423:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,423:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,706:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,706:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,706:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,722:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,722:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,722:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:51,754:INFO:Calculating mean and std
2025-02-20 14:03:51,755:INFO:Creating metrics dataframe
2025-02-20 14:03:51,756:INFO:Uploading results into container
2025-02-20 14:03:51,756:INFO:Uploading model into container now
2025-02-20 14:03:51,756:INFO:_master_model_container: 7
2025-02-20 14:03:51,756:INFO:_display_container: 2
2025-02-20 14:03:51,756:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2138, verbose=0,
                       warm_start=False)
2025-02-20 14:03:51,756:INFO:create_model() successfully completed......................................
2025-02-20 14:03:51,822:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:51,822:INFO:Creating metrics dataframe
2025-02-20 14:03:51,844:INFO:Initializing Quadratic Discriminant Analysis
2025-02-20 14:03:51,844:INFO:Total runtime is 0.22704482475916546 minutes
2025-02-20 14:03:51,847:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:51,848:INFO:Initializing create_model()
2025-02-20 14:03:51,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:51,848:INFO:Checking exceptions
2025-02-20 14:03:51,848:INFO:Importing libraries
2025-02-20 14:03:51,848:INFO:Copying training dataset
2025-02-20 14:03:51,853:INFO:Defining folds
2025-02-20 14:03:51,853:INFO:Declaring metric variables
2025-02-20 14:03:51,856:INFO:Importing untrained model
2025-02-20 14:03:51,856:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-20 14:03:51,856:INFO:Starting cross validation
2025-02-20 14:03:51,856:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:52,056:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:03:52,056:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:03:52,056:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:03:52,073:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:03:52,073:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:03:52,073:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:03:52,073:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:03:52,106:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:03:52,143:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,144:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,148:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,148:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,153:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,156:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,171:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,172:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,172:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,172:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,172:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,172:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,191:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,191:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,272:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:03:52,272:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:03:52,305:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,305:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,305:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,305:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,305:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,305:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,337:INFO:Calculating mean and std
2025-02-20 14:03:52,338:INFO:Creating metrics dataframe
2025-02-20 14:03:52,340:INFO:Uploading results into container
2025-02-20 14:03:52,341:INFO:Uploading model into container now
2025-02-20 14:03:52,342:INFO:_master_model_container: 8
2025-02-20 14:03:52,342:INFO:_display_container: 2
2025-02-20 14:03:52,342:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-20 14:03:52,342:INFO:create_model() successfully completed......................................
2025-02-20 14:03:52,423:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:52,423:INFO:Creating metrics dataframe
2025-02-20 14:03:52,423:INFO:Initializing Ada Boost Classifier
2025-02-20 14:03:52,423:INFO:Total runtime is 0.23669701417287192 minutes
2025-02-20 14:03:52,438:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:52,438:INFO:Initializing create_model()
2025-02-20 14:03:52,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:52,439:INFO:Checking exceptions
2025-02-20 14:03:52,439:INFO:Importing libraries
2025-02-20 14:03:52,439:INFO:Copying training dataset
2025-02-20 14:03:52,444:INFO:Defining folds
2025-02-20 14:03:52,444:INFO:Declaring metric variables
2025-02-20 14:03:52,447:INFO:Importing untrained model
2025-02-20 14:03:52,451:INFO:Ada Boost Classifier Imported successfully
2025-02-20 14:03:52,457:INFO:Starting cross validation
2025-02-20 14:03:52,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:52,639:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:03:52,657:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:03:52,657:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:03:52,657:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:03:52,657:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:03:52,672:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:03:52,688:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:03:52,705:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:03:52,705:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,722:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,737:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:52,742:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,742:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,743:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,744:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,747:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,752:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,753:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,754:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,755:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:52,755:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,755:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,755:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:52,755:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:52,755:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,755:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:52,755:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,755:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,755:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,770:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,772:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:52,772:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,772:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,788:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,788:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,788:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:52,788:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,788:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,788:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:52,788:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,855:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:03:52,871:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:03:52,888:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,903:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,905:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:52,905:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,905:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,905:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,905:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:52,905:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:52,937:INFO:Calculating mean and std
2025-02-20 14:03:52,937:INFO:Creating metrics dataframe
2025-02-20 14:03:52,940:INFO:Uploading results into container
2025-02-20 14:03:52,940:INFO:Uploading model into container now
2025-02-20 14:03:52,941:INFO:_master_model_container: 9
2025-02-20 14:03:52,941:INFO:_display_container: 2
2025-02-20 14:03:52,941:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2138)
2025-02-20 14:03:52,941:INFO:create_model() successfully completed......................................
2025-02-20 14:03:53,021:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:53,021:INFO:Creating metrics dataframe
2025-02-20 14:03:53,021:INFO:Initializing Gradient Boosting Classifier
2025-02-20 14:03:53,021:INFO:Total runtime is 0.24666551748911542 minutes
2025-02-20 14:03:53,021:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:53,021:INFO:Initializing create_model()
2025-02-20 14:03:53,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:53,021:INFO:Checking exceptions
2025-02-20 14:03:53,021:INFO:Importing libraries
2025-02-20 14:03:53,021:INFO:Copying training dataset
2025-02-20 14:03:53,040:INFO:Defining folds
2025-02-20 14:03:53,040:INFO:Declaring metric variables
2025-02-20 14:03:53,042:INFO:Importing untrained model
2025-02-20 14:03:53,045:INFO:Gradient Boosting Classifier Imported successfully
2025-02-20 14:03:53,053:INFO:Starting cross validation
2025-02-20 14:03:53,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:54,054:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,071:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,071:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,071:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:54,071:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,087:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:54,087:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,087:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,104:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,125:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,131:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:54,132:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,136:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,139:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,139:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:54,153:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,206:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,206:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,206:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,219:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,220:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,223:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,224:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:54,225:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:54,228:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:54,228:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,229:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,232:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,237:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,237:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,237:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:54,237:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,703:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,703:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,703:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:54,703:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,722:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,728:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,730:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:54,732:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:54,752:INFO:Calculating mean and std
2025-02-20 14:03:54,753:INFO:Creating metrics dataframe
2025-02-20 14:03:54,753:INFO:Uploading results into container
2025-02-20 14:03:54,753:INFO:Uploading model into container now
2025-02-20 14:03:54,753:INFO:_master_model_container: 10
2025-02-20 14:03:54,753:INFO:_display_container: 2
2025-02-20 14:03:54,753:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2138, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-20 14:03:54,753:INFO:create_model() successfully completed......................................
2025-02-20 14:03:54,834:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:54,835:INFO:Creating metrics dataframe
2025-02-20 14:03:54,836:INFO:Initializing Linear Discriminant Analysis
2025-02-20 14:03:54,836:INFO:Total runtime is 0.27691527605056765 minutes
2025-02-20 14:03:54,836:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:54,836:INFO:Initializing create_model()
2025-02-20 14:03:54,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:54,836:INFO:Checking exceptions
2025-02-20 14:03:54,836:INFO:Importing libraries
2025-02-20 14:03:54,836:INFO:Copying training dataset
2025-02-20 14:03:54,853:INFO:Defining folds
2025-02-20 14:03:54,853:INFO:Declaring metric variables
2025-02-20 14:03:54,853:INFO:Importing untrained model
2025-02-20 14:03:54,853:INFO:Linear Discriminant Analysis Imported successfully
2025-02-20 14:03:54,869:INFO:Starting cross validation
2025-02-20 14:03:54,870:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:55,143:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,143:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,143:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,143:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,152:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,153:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,153:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,153:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,153:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:55,161:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:55,161:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,161:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,161:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,161:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:55,161:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:55,161:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,161:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:55,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:55,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,186:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:55,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,202:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,204:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,204:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:55,218:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,286:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,303:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,303:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:55,303:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,303:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,303:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,303:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:55,303:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:55,334:INFO:Calculating mean and std
2025-02-20 14:03:55,336:INFO:Creating metrics dataframe
2025-02-20 14:03:55,336:INFO:Uploading results into container
2025-02-20 14:03:55,336:INFO:Uploading model into container now
2025-02-20 14:03:55,336:INFO:_master_model_container: 11
2025-02-20 14:03:55,336:INFO:_display_container: 2
2025-02-20 14:03:55,336:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-20 14:03:55,336:INFO:create_model() successfully completed......................................
2025-02-20 14:03:55,403:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:55,403:INFO:Creating metrics dataframe
2025-02-20 14:03:55,424:INFO:Initializing Extra Trees Classifier
2025-02-20 14:03:55,424:INFO:Total runtime is 0.28670680125554404 minutes
2025-02-20 14:03:55,428:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:55,429:INFO:Initializing create_model()
2025-02-20 14:03:55,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:55,429:INFO:Checking exceptions
2025-02-20 14:03:55,429:INFO:Importing libraries
2025-02-20 14:03:55,429:INFO:Copying training dataset
2025-02-20 14:03:55,435:INFO:Defining folds
2025-02-20 14:03:55,435:INFO:Declaring metric variables
2025-02-20 14:03:55,436:INFO:Importing untrained model
2025-02-20 14:03:55,436:INFO:Extra Trees Classifier Imported successfully
2025-02-20 14:03:55,436:INFO:Starting cross validation
2025-02-20 14:03:55,436:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:56,052:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,052:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,069:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,075:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,075:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,085:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,085:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,102:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,102:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,102:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,124:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,135:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,135:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,135:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,152:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,152:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,152:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,152:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,202:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,202:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,221:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,223:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,229:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,235:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,468:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,468:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,468:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:56,501:INFO:Calculating mean and std
2025-02-20 14:03:56,502:INFO:Creating metrics dataframe
2025-02-20 14:03:56,502:INFO:Uploading results into container
2025-02-20 14:03:56,502:INFO:Uploading model into container now
2025-02-20 14:03:56,502:INFO:_master_model_container: 12
2025-02-20 14:03:56,502:INFO:_display_container: 2
2025-02-20 14:03:56,502:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2138, verbose=0,
                     warm_start=False)
2025-02-20 14:03:56,502:INFO:create_model() successfully completed......................................
2025-02-20 14:03:56,584:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:56,584:INFO:Creating metrics dataframe
2025-02-20 14:03:56,585:INFO:Initializing Light Gradient Boosting Machine
2025-02-20 14:03:56,585:INFO:Total runtime is 0.30605398416519164 minutes
2025-02-20 14:03:56,585:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:56,585:INFO:Initializing create_model()
2025-02-20 14:03:56,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:56,585:INFO:Checking exceptions
2025-02-20 14:03:56,585:INFO:Importing libraries
2025-02-20 14:03:56,585:INFO:Copying training dataset
2025-02-20 14:03:56,602:INFO:Defining folds
2025-02-20 14:03:56,602:INFO:Declaring metric variables
2025-02-20 14:03:56,602:INFO:Importing untrained model
2025-02-20 14:03:56,602:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 14:03:56,602:INFO:Starting cross validation
2025-02-20 14:03:56,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:57,275:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,285:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,290:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:57,290:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,297:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,305:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,310:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:57,314:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,319:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,319:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,335:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:57,335:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,335:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,351:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,352:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:57,362:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,488:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,505:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,510:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:57,526:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,591:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,597:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,603:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,609:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,611:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:57,614:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:57,615:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,619:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,699:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,706:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,712:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:57,719:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,818:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,818:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,835:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,835:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,839:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:57,839:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:57,839:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,839:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:57,867:INFO:Calculating mean and std
2025-02-20 14:03:57,868:INFO:Creating metrics dataframe
2025-02-20 14:03:57,868:INFO:Uploading results into container
2025-02-20 14:03:57,868:INFO:Uploading model into container now
2025-02-20 14:03:57,874:INFO:_master_model_container: 13
2025-02-20 14:03:57,874:INFO:_display_container: 2
2025-02-20 14:03:57,874:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2138, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-20 14:03:57,874:INFO:create_model() successfully completed......................................
2025-02-20 14:03:57,967:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:57,967:INFO:Creating metrics dataframe
2025-02-20 14:03:57,967:INFO:Initializing Dummy Classifier
2025-02-20 14:03:57,967:INFO:Total runtime is 0.32909998099009197 minutes
2025-02-20 14:03:57,984:INFO:SubProcess create_model() called ==================================
2025-02-20 14:03:57,985:INFO:Initializing create_model()
2025-02-20 14:03:57,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD059EA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:57,985:INFO:Checking exceptions
2025-02-20 14:03:57,985:INFO:Importing libraries
2025-02-20 14:03:57,985:INFO:Copying training dataset
2025-02-20 14:03:57,985:INFO:Defining folds
2025-02-20 14:03:57,985:INFO:Declaring metric variables
2025-02-20 14:03:57,985:INFO:Importing untrained model
2025-02-20 14:03:58,001:INFO:Dummy Classifier Imported successfully
2025-02-20 14:03:58,002:INFO:Starting cross validation
2025-02-20 14:03:58,002:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:03:58,284:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,295:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,295:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:58,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,310:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,310:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,318:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:58,319:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,323:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,323:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:58,323:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,323:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,323:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,334:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,334:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:58,338:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:58,338:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,345:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,358:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,366:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,366:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:58,366:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,366:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,366:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,381:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,381:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,381:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:58,381:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:58,381:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,396:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,472:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,472:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,478:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,478:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,484:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:58,484:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:58,484:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,484:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:58,499:INFO:Calculating mean and std
2025-02-20 14:03:58,500:INFO:Creating metrics dataframe
2025-02-20 14:03:58,502:INFO:Uploading results into container
2025-02-20 14:03:58,502:INFO:Uploading model into container now
2025-02-20 14:03:58,502:INFO:_master_model_container: 14
2025-02-20 14:03:58,502:INFO:_display_container: 2
2025-02-20 14:03:58,503:INFO:DummyClassifier(constant=None, random_state=2138, strategy='prior')
2025-02-20 14:03:58,503:INFO:create_model() successfully completed......................................
2025-02-20 14:03:58,567:INFO:SubProcess create_model() end ==================================
2025-02-20 14:03:58,567:INFO:Creating metrics dataframe
2025-02-20 14:03:58,583:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-20 14:03:58,602:INFO:Initializing create_model()
2025-02-20 14:03:58,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2138, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:03:58,603:INFO:Checking exceptions
2025-02-20 14:03:58,604:INFO:Importing libraries
2025-02-20 14:03:58,604:INFO:Copying training dataset
2025-02-20 14:03:58,610:INFO:Defining folds
2025-02-20 14:03:58,610:INFO:Declaring metric variables
2025-02-20 14:03:58,610:INFO:Importing untrained model
2025-02-20 14:03:58,610:INFO:Declaring custom model
2025-02-20 14:03:58,610:INFO:Logistic Regression Imported successfully
2025-02-20 14:03:58,612:INFO:Cross validation set to False
2025-02-20 14:03:58,612:INFO:Fitting Model
2025-02-20 14:03:59,010:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:03:59,011:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2138, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 14:03:59,011:INFO:create_model() successfully completed......................................
2025-02-20 14:03:59,133:INFO:_master_model_container: 14
2025-02-20 14:03:59,133:INFO:_display_container: 2
2025-02-20 14:03:59,133:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2138, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 14:03:59,133:INFO:compare_models() successfully completed......................................
2025-02-20 14:03:59,188:INFO:Initializing predict_model()
2025-02-20 14:03:59,188:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2138, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD0142CAF0>)
2025-02-20 14:03:59,188:INFO:Checking exceptions
2025-02-20 14:03:59,188:INFO:Preloading libraries
2025-02-20 14:03:59,199:INFO:Set up data.
2025-02-20 14:03:59,201:INFO:Set up index.
2025-02-20 14:03:59,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2025-02-20 14:03:59,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:59,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:59,477:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:59,481:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:59,488:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:03:59,489:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:03:59,489:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 14:03:59,489:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2025-02-20 14:03:59,489:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 14:03:59,670:INFO:Initializing save_model()
2025-02-20 14:03:59,670:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2138, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 14:03:59,670:INFO:Adding model into prep_pipe
2025-02-20 14:03:59,685:INFO:LDA.pkl saved in current working directory
2025-02-20 14:03:59,704:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2138,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 14:03:59,704:INFO:save_model() successfully completed......................................
2025-02-20 14:03:59,910:INFO:Initializing load_model()
2025-02-20 14:03:59,912:INFO:load_model(model_name=LDA, platform=None, authentication=None, verbose=True)
2025-02-20 14:04:00,153:INFO:Initializing predict_model()
2025-02-20 14:04:00,153:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2138,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD0142C940>)
2025-02-20 14:04:00,153:INFO:Checking exceptions
2025-02-20 14:04:00,153:INFO:Preloading libraries
2025-02-20 14:04:00,153:INFO:Set up data.
2025-02-20 14:04:00,170:INFO:Set up index.
2025-02-20 14:04:00,469:INFO:Initializing load_model()
2025-02-20 14:04:00,469:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 14:07:35,931:INFO:Initializing save_model()
2025-02-20 14:07:35,932:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2138, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=GBC, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 14:07:35,932:INFO:Adding model into prep_pipe
2025-02-20 14:07:35,948:INFO:GBC.pkl saved in current working directory
2025-02-20 14:07:35,948:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2138,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 14:07:35,948:INFO:save_model() successfully completed......................................
2025-02-20 14:07:45,768:INFO:Initializing load_model()
2025-02-20 14:07:45,768:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 14:08:49,596:INFO:Initializing predict_model()
2025-02-20 14:08:49,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2138,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD05E1DA20>)
2025-02-20 14:08:49,597:INFO:Checking exceptions
2025-02-20 14:08:49,597:INFO:Preloading libraries
2025-02-20 14:08:49,600:INFO:Set up data.
2025-02-20 14:08:49,602:INFO:Set up index.
2025-02-20 14:13:02,420:INFO:Initializing save_model()
2025-02-20 14:13:02,420:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2138, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 14:13:02,424:INFO:Adding model into prep_pipe
2025-02-20 14:13:02,443:INFO:LDA.pkl saved in current working directory
2025-02-20 14:13:02,460:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2138,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 14:13:02,461:INFO:save_model() successfully completed......................................
2025-02-20 14:13:10,176:INFO:Initializing load_model()
2025-02-20 14:13:10,176:INFO:load_model(model_name=LDA, platform=None, authentication=None, verbose=True)
2025-02-20 14:13:15,413:INFO:Initializing predict_model()
2025-02-20 14:13:15,413:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD05779D50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=2138,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD012F8940>)
2025-02-20 14:13:15,413:INFO:Checking exceptions
2025-02-20 14:13:15,413:INFO:Preloading libraries
2025-02-20 14:13:15,413:INFO:Set up data.
2025-02-20 14:13:15,431:INFO:Set up index.
2025-02-20 14:13:33,162:INFO:PyCaret ClassificationExperiment
2025-02-20 14:13:33,162:INFO:Logging name: clf-default-name
2025-02-20 14:13:33,162:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-20 14:13:33,162:INFO:version 3.3.2
2025-02-20 14:13:33,162:INFO:Initializing setup()
2025-02-20 14:13:33,162:INFO:self.USI: a987
2025-02-20 14:13:33,162:INFO:self._variable_keys: {'data', 'memory', 'y_train', 'y_test', 'X_train', 'log_plots_param', 'logging_param', 'html_param', 'fold_groups_param', '_available_plots', 'X_test', 'gpu_param', 'fix_imbalance', 'fold_generator', 'seed', 'y', 'exp_id', 'X', 'exp_name_log', 'target_param', 'n_jobs_param', '_ml_usecase', 'idx', 'is_multiclass', 'pipeline', 'fold_shuffle_param', 'USI', 'gpu_n_jobs_param'}
2025-02-20 14:13:33,162:INFO:Checking environment
2025-02-20 14:13:33,162:INFO:python_version: 3.10.16
2025-02-20 14:13:33,162:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-20 14:13:33,162:INFO:machine: AMD64
2025-02-20 14:13:33,162:INFO:platform: Windows-10-10.0.22631-SP0
2025-02-20 14:13:33,171:INFO:Memory: svmem(total=8299257856, available=1632624640, percent=80.3, used=6666633216, free=1632624640)
2025-02-20 14:13:33,172:INFO:Physical Core: 4
2025-02-20 14:13:33,172:INFO:Logical Core: 8
2025-02-20 14:13:33,172:INFO:Checking libraries
2025-02-20 14:13:33,172:INFO:System:
2025-02-20 14:13:33,172:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-20 14:13:33,172:INFO:executable: c:\Users\ksaig\anaconda3\envs\sai\python.exe
2025-02-20 14:13:33,173:INFO:   machine: Windows-10-10.0.22631-SP0
2025-02-20 14:13:33,173:INFO:PyCaret required dependencies:
2025-02-20 14:13:33,173:INFO:                 pip: 24.2
2025-02-20 14:13:33,173:INFO:          setuptools: 75.1.0
2025-02-20 14:13:33,173:INFO:             pycaret: 3.3.2
2025-02-20 14:13:33,173:INFO:             IPython: 8.32.0
2025-02-20 14:13:33,173:INFO:          ipywidgets: 8.1.5
2025-02-20 14:13:33,173:INFO:                tqdm: 4.67.1
2025-02-20 14:13:33,173:INFO:               numpy: 1.26.4
2025-02-20 14:13:33,173:INFO:              pandas: 2.1.4
2025-02-20 14:13:33,173:INFO:              jinja2: 3.1.5
2025-02-20 14:13:33,173:INFO:               scipy: 1.11.4
2025-02-20 14:13:33,173:INFO:              joblib: 1.3.2
2025-02-20 14:13:33,174:INFO:             sklearn: 1.4.2
2025-02-20 14:13:33,174:INFO:                pyod: 2.0.3
2025-02-20 14:13:33,174:INFO:            imblearn: 0.13.0
2025-02-20 14:13:33,174:INFO:   category_encoders: 2.7.0
2025-02-20 14:13:33,174:INFO:            lightgbm: 4.6.0
2025-02-20 14:13:33,174:INFO:               numba: 0.61.0
2025-02-20 14:13:33,174:INFO:            requests: 2.32.3
2025-02-20 14:13:33,174:INFO:          matplotlib: 3.7.5
2025-02-20 14:13:33,174:INFO:          scikitplot: 0.3.7
2025-02-20 14:13:33,174:INFO:         yellowbrick: 1.5
2025-02-20 14:13:33,174:INFO:              plotly: 5.24.1
2025-02-20 14:13:33,174:INFO:    plotly-resampler: Not installed
2025-02-20 14:13:33,174:INFO:             kaleido: 0.2.1
2025-02-20 14:13:33,174:INFO:           schemdraw: 0.15
2025-02-20 14:13:33,174:INFO:         statsmodels: 0.14.4
2025-02-20 14:13:33,174:INFO:              sktime: 0.26.0
2025-02-20 14:13:33,174:INFO:               tbats: 1.1.3
2025-02-20 14:13:33,174:INFO:            pmdarima: 2.0.4
2025-02-20 14:13:33,176:INFO:              psutil: 6.1.1
2025-02-20 14:13:33,176:INFO:          markupsafe: 3.0.2
2025-02-20 14:13:33,176:INFO:             pickle5: Not installed
2025-02-20 14:13:33,176:INFO:         cloudpickle: 3.1.1
2025-02-20 14:13:33,176:INFO:         deprecation: 2.1.0
2025-02-20 14:13:33,176:INFO:              xxhash: 3.5.0
2025-02-20 14:13:33,176:INFO:           wurlitzer: Not installed
2025-02-20 14:13:33,176:INFO:PyCaret optional dependencies:
2025-02-20 14:13:33,176:INFO:                shap: Not installed
2025-02-20 14:13:33,176:INFO:           interpret: Not installed
2025-02-20 14:13:33,176:INFO:                umap: Not installed
2025-02-20 14:13:33,176:INFO:     ydata_profiling: Not installed
2025-02-20 14:13:33,177:INFO:  explainerdashboard: Not installed
2025-02-20 14:13:33,177:INFO:             autoviz: Not installed
2025-02-20 14:13:33,177:INFO:           fairlearn: Not installed
2025-02-20 14:13:33,177:INFO:          deepchecks: Not installed
2025-02-20 14:13:33,177:INFO:             xgboost: Not installed
2025-02-20 14:13:33,178:INFO:            catboost: Not installed
2025-02-20 14:13:33,178:INFO:              kmodes: Not installed
2025-02-20 14:13:33,178:INFO:             mlxtend: Not installed
2025-02-20 14:13:33,178:INFO:       statsforecast: Not installed
2025-02-20 14:13:33,178:INFO:        tune_sklearn: Not installed
2025-02-20 14:13:33,178:INFO:                 ray: Not installed
2025-02-20 14:13:33,178:INFO:            hyperopt: Not installed
2025-02-20 14:13:33,178:INFO:              optuna: Not installed
2025-02-20 14:13:33,178:INFO:               skopt: Not installed
2025-02-20 14:13:33,178:INFO:              mlflow: Not installed
2025-02-20 14:13:33,178:INFO:              gradio: Not installed
2025-02-20 14:13:33,178:INFO:             fastapi: Not installed
2025-02-20 14:13:33,178:INFO:             uvicorn: Not installed
2025-02-20 14:13:33,178:INFO:              m2cgen: Not installed
2025-02-20 14:13:33,178:INFO:           evidently: Not installed
2025-02-20 14:13:33,178:INFO:               fugue: Not installed
2025-02-20 14:13:33,178:INFO:           streamlit: Not installed
2025-02-20 14:13:33,178:INFO:             prophet: Not installed
2025-02-20 14:13:33,178:INFO:None
2025-02-20 14:13:33,178:INFO:Set up data.
2025-02-20 14:13:33,197:INFO:Set up folding strategy.
2025-02-20 14:13:33,197:INFO:Set up train/test split.
2025-02-20 14:13:33,198:INFO:Set up index.
2025-02-20 14:13:33,198:INFO:Assigning column types.
2025-02-20 14:13:33,198:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-20 14:13:33,246:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 14:13:33,246:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 14:13:33,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,297:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 14:13:33,297:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 14:13:33,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,328:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-20 14:13:33,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 14:13:33,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,429:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-20 14:13:33,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,444:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-20 14:13:33,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:33,570:INFO:Preparing preprocessing pipeline...
2025-02-20 14:13:33,570:INFO:Set up label encoding.
2025-02-20 14:13:33,570:INFO:Set up simple imputation.
2025-02-20 14:13:33,586:INFO:Set up encoding of categorical features.
2025-02-20 14:13:33,586:INFO:Set up column name cleaning.
2025-02-20 14:13:33,710:INFO:Finished creating preprocessing pipeline.
2025-02-20 14:13:33,710:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-02-20 14:13:33,710:INFO:Creating final display dataframe.
2025-02-20 14:13:34,015:INFO:Setup _display_container:                     Description             Value
0                    Session id              3942
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (7032, 12)
5        Transformed data shape        (7032, 17)
6   Transformed train set shape        (4922, 17)
7    Transformed test set shape        (2110, 17)
8              Numeric features                 8
9          Categorical features                 3
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              a987
2025-02-20 14:13:34,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:34,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:34,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:34,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 14:13:34,159:INFO:setup() successfully completed in 1.0s...............
2025-02-20 14:13:34,174:INFO:Initializing compare_models()
2025-02-20 14:13:34,174:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-20 14:13:34,174:INFO:Checking exceptions
2025-02-20 14:13:34,174:INFO:Preparing display monitor
2025-02-20 14:13:34,219:INFO:Initializing Logistic Regression
2025-02-20 14:13:34,219:INFO:Total runtime is 0.0 minutes
2025-02-20 14:13:34,219:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:34,219:INFO:Initializing create_model()
2025-02-20 14:13:34,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:34,219:INFO:Checking exceptions
2025-02-20 14:13:34,219:INFO:Importing libraries
2025-02-20 14:13:34,219:INFO:Copying training dataset
2025-02-20 14:13:34,232:INFO:Defining folds
2025-02-20 14:13:34,232:INFO:Declaring metric variables
2025-02-20 14:13:34,236:INFO:Importing untrained model
2025-02-20 14:13:34,243:INFO:Logistic Regression Imported successfully
2025-02-20 14:13:34,253:INFO:Starting cross validation
2025-02-20 14:13:34,256:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:42,059:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:42,147:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,161:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,175:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,229:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:42,229:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:42,259:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:42,285:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:42,308:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,325:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,328:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,329:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:42,330:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:42,330:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,330:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,344:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,344:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,359:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,359:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,359:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,375:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,390:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,390:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,406:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,430:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,430:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,430:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,446:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,724:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:42,772:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,772:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,772:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,819:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:42,846:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,861:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,861:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,893:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:42,924:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,924:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,924:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:42,940:INFO:Calculating mean and std
2025-02-20 14:13:42,940:INFO:Creating metrics dataframe
2025-02-20 14:13:42,940:INFO:Uploading results into container
2025-02-20 14:13:42,940:INFO:Uploading model into container now
2025-02-20 14:13:42,940:INFO:_master_model_container: 1
2025-02-20 14:13:42,940:INFO:_display_container: 2
2025-02-20 14:13:42,940:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 14:13:42,940:INFO:create_model() successfully completed......................................
2025-02-20 14:13:43,024:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:43,024:INFO:Creating metrics dataframe
2025-02-20 14:13:43,040:INFO:Initializing K Neighbors Classifier
2025-02-20 14:13:43,040:INFO:Total runtime is 0.14700640042622884 minutes
2025-02-20 14:13:43,040:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:43,040:INFO:Initializing create_model()
2025-02-20 14:13:43,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:43,040:INFO:Checking exceptions
2025-02-20 14:13:43,040:INFO:Importing libraries
2025-02-20 14:13:43,040:INFO:Copying training dataset
2025-02-20 14:13:43,040:INFO:Defining folds
2025-02-20 14:13:43,040:INFO:Declaring metric variables
2025-02-20 14:13:43,040:INFO:Importing untrained model
2025-02-20 14:13:43,059:INFO:K Neighbors Classifier Imported successfully
2025-02-20 14:13:43,067:INFO:Starting cross validation
2025-02-20 14:13:43,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:43,573:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,589:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,596:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,596:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,611:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,611:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,611:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,624:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,624:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,624:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,624:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,624:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,630:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,630:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,630:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,640:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,640:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,640:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,640:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,640:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,640:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,640:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,640:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,640:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,792:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,792:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,792:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,805:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,805:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,805:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:43,820:INFO:Calculating mean and std
2025-02-20 14:13:43,821:INFO:Creating metrics dataframe
2025-02-20 14:13:43,823:INFO:Uploading results into container
2025-02-20 14:13:43,824:INFO:Uploading model into container now
2025-02-20 14:13:43,824:INFO:_master_model_container: 2
2025-02-20 14:13:43,824:INFO:_display_container: 2
2025-02-20 14:13:43,824:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-20 14:13:43,826:INFO:create_model() successfully completed......................................
2025-02-20 14:13:43,890:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:43,905:INFO:Creating metrics dataframe
2025-02-20 14:13:43,910:INFO:Initializing Naive Bayes
2025-02-20 14:13:43,910:INFO:Total runtime is 0.16150763829549153 minutes
2025-02-20 14:13:43,910:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:43,910:INFO:Initializing create_model()
2025-02-20 14:13:43,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:43,910:INFO:Checking exceptions
2025-02-20 14:13:43,910:INFO:Importing libraries
2025-02-20 14:13:43,910:INFO:Copying training dataset
2025-02-20 14:13:43,910:INFO:Defining folds
2025-02-20 14:13:43,910:INFO:Declaring metric variables
2025-02-20 14:13:43,922:INFO:Importing untrained model
2025-02-20 14:13:43,922:INFO:Naive Bayes Imported successfully
2025-02-20 14:13:43,934:INFO:Starting cross validation
2025-02-20 14:13:43,934:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:44,208:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,208:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,222:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,224:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,224:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,224:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,224:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,224:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,224:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,241:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,241:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,245:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,246:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,246:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,246:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,246:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,246:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,256:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,256:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,256:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,263:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,263:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,271:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,275:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,372:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,388:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,388:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,388:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,388:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,388:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,421:INFO:Calculating mean and std
2025-02-20 14:13:44,421:INFO:Creating metrics dataframe
2025-02-20 14:13:44,421:INFO:Uploading results into container
2025-02-20 14:13:44,421:INFO:Uploading model into container now
2025-02-20 14:13:44,421:INFO:_master_model_container: 3
2025-02-20 14:13:44,421:INFO:_display_container: 2
2025-02-20 14:13:44,421:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-20 14:13:44,421:INFO:create_model() successfully completed......................................
2025-02-20 14:13:44,517:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:44,517:INFO:Creating metrics dataframe
2025-02-20 14:13:44,523:INFO:Initializing Decision Tree Classifier
2025-02-20 14:13:44,524:INFO:Total runtime is 0.17174818515777587 minutes
2025-02-20 14:13:44,526:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:44,527:INFO:Initializing create_model()
2025-02-20 14:13:44,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:44,527:INFO:Checking exceptions
2025-02-20 14:13:44,527:INFO:Importing libraries
2025-02-20 14:13:44,527:INFO:Copying training dataset
2025-02-20 14:13:44,532:INFO:Defining folds
2025-02-20 14:13:44,532:INFO:Declaring metric variables
2025-02-20 14:13:44,535:INFO:Importing untrained model
2025-02-20 14:13:44,540:INFO:Decision Tree Classifier Imported successfully
2025-02-20 14:13:44,542:INFO:Starting cross validation
2025-02-20 14:13:44,542:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:44,821:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,826:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,826:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,826:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:44,838:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,856:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,856:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,857:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:44,860:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,861:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,862:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:44,862:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,862:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,862:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:44,862:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,862:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:44,871:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,871:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,886:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,888:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,888:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:44,888:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,987:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,993:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,993:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,995:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:44,995:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:44,995:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,004:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:45,009:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,021:INFO:Calculating mean and std
2025-02-20 14:13:45,021:INFO:Creating metrics dataframe
2025-02-20 14:13:45,021:INFO:Uploading results into container
2025-02-20 14:13:45,021:INFO:Uploading model into container now
2025-02-20 14:13:45,021:INFO:_master_model_container: 4
2025-02-20 14:13:45,021:INFO:_display_container: 2
2025-02-20 14:13:45,021:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3942, splitter='best')
2025-02-20 14:13:45,021:INFO:create_model() successfully completed......................................
2025-02-20 14:13:45,104:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:45,104:INFO:Creating metrics dataframe
2025-02-20 14:13:45,108:INFO:Initializing SVM - Linear Kernel
2025-02-20 14:13:45,108:INFO:Total runtime is 0.18148599863052367 minutes
2025-02-20 14:13:45,108:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:45,108:INFO:Initializing create_model()
2025-02-20 14:13:45,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:45,108:INFO:Checking exceptions
2025-02-20 14:13:45,108:INFO:Importing libraries
2025-02-20 14:13:45,108:INFO:Copying training dataset
2025-02-20 14:13:45,123:INFO:Defining folds
2025-02-20 14:13:45,123:INFO:Declaring metric variables
2025-02-20 14:13:45,123:INFO:Importing untrained model
2025-02-20 14:13:45,123:INFO:SVM - Linear Kernel Imported successfully
2025-02-20 14:13:45,141:INFO:Starting cross validation
2025-02-20 14:13:45,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:45,465:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,472:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,477:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,482:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,487:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,492:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,495:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,509:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,521:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,536:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,553:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,554:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,554:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,554:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,569:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,570:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,571:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,571:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,571:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,587:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,674:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,674:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,690:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,703:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,707:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,707:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:45,720:INFO:Calculating mean and std
2025-02-20 14:13:45,720:INFO:Creating metrics dataframe
2025-02-20 14:13:45,720:INFO:Uploading results into container
2025-02-20 14:13:45,720:INFO:Uploading model into container now
2025-02-20 14:13:45,720:INFO:_master_model_container: 5
2025-02-20 14:13:45,720:INFO:_display_container: 2
2025-02-20 14:13:45,720:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3942, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-20 14:13:45,720:INFO:create_model() successfully completed......................................
2025-02-20 14:13:45,787:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:45,787:INFO:Creating metrics dataframe
2025-02-20 14:13:45,804:INFO:Initializing Ridge Classifier
2025-02-20 14:13:45,804:INFO:Total runtime is 0.19307374954223633 minutes
2025-02-20 14:13:45,812:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:45,812:INFO:Initializing create_model()
2025-02-20 14:13:45,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:45,812:INFO:Checking exceptions
2025-02-20 14:13:45,812:INFO:Importing libraries
2025-02-20 14:13:45,812:INFO:Copying training dataset
2025-02-20 14:13:45,812:INFO:Defining folds
2025-02-20 14:13:45,812:INFO:Declaring metric variables
2025-02-20 14:13:45,823:INFO:Importing untrained model
2025-02-20 14:13:45,824:INFO:Ridge Classifier Imported successfully
2025-02-20 14:13:45,824:INFO:Starting cross validation
2025-02-20 14:13:45,840:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:46,153:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,153:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,153:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,170:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,171:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,172:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,176:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,178:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,178:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,178:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,178:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,186:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,187:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,192:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,203:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,203:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,211:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,211:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,218:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,220:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,337:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,338:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,342:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,342:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,346:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,346:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:46,386:INFO:Calculating mean and std
2025-02-20 14:13:46,387:INFO:Creating metrics dataframe
2025-02-20 14:13:46,387:INFO:Uploading results into container
2025-02-20 14:13:46,387:INFO:Uploading model into container now
2025-02-20 14:13:46,387:INFO:_master_model_container: 6
2025-02-20 14:13:46,387:INFO:_display_container: 2
2025-02-20 14:13:46,387:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3942, solver='auto',
                tol=0.0001)
2025-02-20 14:13:46,387:INFO:create_model() successfully completed......................................
2025-02-20 14:13:46,473:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:46,473:INFO:Creating metrics dataframe
2025-02-20 14:13:46,473:INFO:Initializing Random Forest Classifier
2025-02-20 14:13:46,473:INFO:Total runtime is 0.20422975222269693 minutes
2025-02-20 14:13:46,486:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:46,486:INFO:Initializing create_model()
2025-02-20 14:13:46,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:46,486:INFO:Checking exceptions
2025-02-20 14:13:46,486:INFO:Importing libraries
2025-02-20 14:13:46,486:INFO:Copying training dataset
2025-02-20 14:13:46,486:INFO:Defining folds
2025-02-20 14:13:46,486:INFO:Declaring metric variables
2025-02-20 14:13:46,486:INFO:Importing untrained model
2025-02-20 14:13:46,486:INFO:Random Forest Classifier Imported successfully
2025-02-20 14:13:46,507:INFO:Starting cross validation
2025-02-20 14:13:46,507:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:47,353:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,361:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,369:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:47,369:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,428:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,428:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,428:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,436:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,436:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,436:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,436:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:47,436:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:47,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,452:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,469:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,485:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,485:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,538:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,552:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,552:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:47,552:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,575:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,587:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,589:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,602:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,602:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,602:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:47,619:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:47,902:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,918:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:47,951:INFO:Calculating mean and std
2025-02-20 14:13:47,952:INFO:Creating metrics dataframe
2025-02-20 14:13:47,952:INFO:Uploading results into container
2025-02-20 14:13:47,952:INFO:Uploading model into container now
2025-02-20 14:13:47,952:INFO:_master_model_container: 7
2025-02-20 14:13:47,952:INFO:_display_container: 2
2025-02-20 14:13:47,952:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3942, verbose=0,
                       warm_start=False)
2025-02-20 14:13:47,952:INFO:create_model() successfully completed......................................
2025-02-20 14:13:48,035:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:48,035:INFO:Creating metrics dataframe
2025-02-20 14:13:48,043:INFO:Initializing Quadratic Discriminant Analysis
2025-02-20 14:13:48,043:INFO:Total runtime is 0.23039477268854777 minutes
2025-02-20 14:13:48,051:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:48,052:INFO:Initializing create_model()
2025-02-20 14:13:48,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:48,052:INFO:Checking exceptions
2025-02-20 14:13:48,052:INFO:Importing libraries
2025-02-20 14:13:48,052:INFO:Copying training dataset
2025-02-20 14:13:48,054:INFO:Defining folds
2025-02-20 14:13:48,054:INFO:Declaring metric variables
2025-02-20 14:13:48,054:INFO:Importing untrained model
2025-02-20 14:13:48,054:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-20 14:13:48,074:INFO:Starting cross validation
2025-02-20 14:13:48,074:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:48,287:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:13:48,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:13:48,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:13:48,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:13:48,302:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:13:48,318:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:13:48,318:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:13:48,335:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:13:48,373:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,373:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,384:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,393:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,393:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,394:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,395:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,397:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,399:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,401:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,405:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,405:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,406:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,407:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,410:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,413:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,415:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,415:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,418:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,418:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,418:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,418:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,433:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,507:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:13:48,507:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-20 14:13:48,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,551:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,554:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,557:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,567:INFO:Calculating mean and std
2025-02-20 14:13:48,570:INFO:Creating metrics dataframe
2025-02-20 14:13:48,571:INFO:Uploading results into container
2025-02-20 14:13:48,572:INFO:Uploading model into container now
2025-02-20 14:13:48,572:INFO:_master_model_container: 8
2025-02-20 14:13:48,572:INFO:_display_container: 2
2025-02-20 14:13:48,572:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-20 14:13:48,573:INFO:create_model() successfully completed......................................
2025-02-20 14:13:48,651:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:48,651:INFO:Creating metrics dataframe
2025-02-20 14:13:48,651:INFO:Initializing Ada Boost Classifier
2025-02-20 14:13:48,666:INFO:Total runtime is 0.24078672329584758 minutes
2025-02-20 14:13:48,670:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:48,670:INFO:Initializing create_model()
2025-02-20 14:13:48,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:48,670:INFO:Checking exceptions
2025-02-20 14:13:48,670:INFO:Importing libraries
2025-02-20 14:13:48,670:INFO:Copying training dataset
2025-02-20 14:13:48,670:INFO:Defining folds
2025-02-20 14:13:48,670:INFO:Declaring metric variables
2025-02-20 14:13:48,670:INFO:Importing untrained model
2025-02-20 14:13:48,686:INFO:Ada Boost Classifier Imported successfully
2025-02-20 14:13:48,693:INFO:Starting cross validation
2025-02-20 14:13:48,693:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:48,884:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:13:48,884:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:13:48,884:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:13:48,901:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:13:48,901:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:13:48,925:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:13:48,925:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:13:48,934:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:13:48,968:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,968:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,983:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,986:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,986:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,986:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,986:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,986:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:48,986:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,002:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,002:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,002:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,002:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,002:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,002:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,020:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,021:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,023:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,028:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,030:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,033:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,037:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,039:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,101:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:13:49,101:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-20 14:13:49,137:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,137:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,150:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,152:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,152:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,152:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:49,183:INFO:Calculating mean and std
2025-02-20 14:13:49,184:INFO:Creating metrics dataframe
2025-02-20 14:13:49,186:INFO:Uploading results into container
2025-02-20 14:13:49,187:INFO:Uploading model into container now
2025-02-20 14:13:49,187:INFO:_master_model_container: 9
2025-02-20 14:13:49,188:INFO:_display_container: 2
2025-02-20 14:13:49,188:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3942)
2025-02-20 14:13:49,188:INFO:create_model() successfully completed......................................
2025-02-20 14:13:49,268:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:49,268:INFO:Creating metrics dataframe
2025-02-20 14:13:49,268:INFO:Initializing Gradient Boosting Classifier
2025-02-20 14:13:49,268:INFO:Total runtime is 0.25081642866134646 minutes
2025-02-20 14:13:49,283:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:49,283:INFO:Initializing create_model()
2025-02-20 14:13:49,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:49,283:INFO:Checking exceptions
2025-02-20 14:13:49,284:INFO:Importing libraries
2025-02-20 14:13:49,284:INFO:Copying training dataset
2025-02-20 14:13:49,284:INFO:Defining folds
2025-02-20 14:13:49,284:INFO:Declaring metric variables
2025-02-20 14:13:49,284:INFO:Importing untrained model
2025-02-20 14:13:49,296:INFO:Gradient Boosting Classifier Imported successfully
2025-02-20 14:13:49,305:INFO:Starting cross validation
2025-02-20 14:13:49,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:50,354:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,372:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,372:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,372:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:50,383:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,383:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,383:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:50,383:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,402:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,416:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:50,416:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:50,416:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,416:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,435:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,435:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,435:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:50,449:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,450:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,450:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:50,450:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,468:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,468:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,468:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,484:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:50,484:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,484:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,484:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:50,498:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,983:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,983:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,998:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,999:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:50,999:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,999:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:50,999:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:50,999:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,015:INFO:Calculating mean and std
2025-02-20 14:13:51,016:INFO:Creating metrics dataframe
2025-02-20 14:13:51,018:INFO:Uploading results into container
2025-02-20 14:13:51,019:INFO:Uploading model into container now
2025-02-20 14:13:51,020:INFO:_master_model_container: 10
2025-02-20 14:13:51,020:INFO:_display_container: 2
2025-02-20 14:13:51,021:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3942, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-20 14:13:51,021:INFO:create_model() successfully completed......................................
2025-02-20 14:13:51,100:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:51,100:INFO:Creating metrics dataframe
2025-02-20 14:13:51,100:INFO:Initializing Linear Discriminant Analysis
2025-02-20 14:13:51,100:INFO:Total runtime is 0.28134003480275477 minutes
2025-02-20 14:13:51,100:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:51,100:INFO:Initializing create_model()
2025-02-20 14:13:51,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:51,100:INFO:Checking exceptions
2025-02-20 14:13:51,100:INFO:Importing libraries
2025-02-20 14:13:51,100:INFO:Copying training dataset
2025-02-20 14:13:51,115:INFO:Defining folds
2025-02-20 14:13:51,115:INFO:Declaring metric variables
2025-02-20 14:13:51,115:INFO:Importing untrained model
2025-02-20 14:13:51,125:INFO:Linear Discriminant Analysis Imported successfully
2025-02-20 14:13:51,135:INFO:Starting cross validation
2025-02-20 14:13:51,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:51,408:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,417:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,417:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,417:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,432:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:51,432:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:51,432:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,432:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,432:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,444:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,449:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,465:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:51,471:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,471:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,473:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,473:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:51,482:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,482:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,482:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:51,482:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,499:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,499:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,515:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,515:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,515:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:51,528:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:51,531:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,534:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,536:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,542:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,545:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:51,548:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,615:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,630:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,632:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:51,632:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,632:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,632:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,632:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:51,632:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:51,663:INFO:Calculating mean and std
2025-02-20 14:13:51,665:INFO:Creating metrics dataframe
2025-02-20 14:13:51,665:INFO:Uploading results into container
2025-02-20 14:13:51,665:INFO:Uploading model into container now
2025-02-20 14:13:51,665:INFO:_master_model_container: 11
2025-02-20 14:13:51,665:INFO:_display_container: 2
2025-02-20 14:13:51,665:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-20 14:13:51,665:INFO:create_model() successfully completed......................................
2025-02-20 14:13:51,751:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:51,751:INFO:Creating metrics dataframe
2025-02-20 14:13:51,751:INFO:Initializing Extra Trees Classifier
2025-02-20 14:13:51,751:INFO:Total runtime is 0.2922002792358399 minutes
2025-02-20 14:13:51,767:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:51,767:INFO:Initializing create_model()
2025-02-20 14:13:51,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:51,767:INFO:Checking exceptions
2025-02-20 14:13:51,767:INFO:Importing libraries
2025-02-20 14:13:51,767:INFO:Copying training dataset
2025-02-20 14:13:51,767:INFO:Defining folds
2025-02-20 14:13:51,767:INFO:Declaring metric variables
2025-02-20 14:13:51,767:INFO:Importing untrained model
2025-02-20 14:13:51,785:INFO:Extra Trees Classifier Imported successfully
2025-02-20 14:13:51,817:INFO:Starting cross validation
2025-02-20 14:13:51,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:52,506:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,523:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,523:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,530:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,537:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,538:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,538:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,547:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,548:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,560:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,572:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,572:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,581:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,586:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,599:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,621:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,621:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,635:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,635:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,638:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,638:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,664:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,664:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,679:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,900:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,900:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,900:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,931:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,931:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,931:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:52,963:INFO:Calculating mean and std
2025-02-20 14:13:52,965:INFO:Creating metrics dataframe
2025-02-20 14:13:52,965:INFO:Uploading results into container
2025-02-20 14:13:52,965:INFO:Uploading model into container now
2025-02-20 14:13:52,965:INFO:_master_model_container: 12
2025-02-20 14:13:52,965:INFO:_display_container: 2
2025-02-20 14:13:52,965:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3942, verbose=0,
                     warm_start=False)
2025-02-20 14:13:52,965:INFO:create_model() successfully completed......................................
2025-02-20 14:13:53,051:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:53,051:INFO:Creating metrics dataframe
2025-02-20 14:13:53,055:INFO:Initializing Light Gradient Boosting Machine
2025-02-20 14:13:53,055:INFO:Total runtime is 0.3139249404271444 minutes
2025-02-20 14:13:53,064:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:53,065:INFO:Initializing create_model()
2025-02-20 14:13:53,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:53,065:INFO:Checking exceptions
2025-02-20 14:13:53,065:INFO:Importing libraries
2025-02-20 14:13:53,065:INFO:Copying training dataset
2025-02-20 14:13:53,069:INFO:Defining folds
2025-02-20 14:13:53,069:INFO:Declaring metric variables
2025-02-20 14:13:53,069:INFO:Importing untrained model
2025-02-20 14:13:53,080:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 14:13:53,083:INFO:Starting cross validation
2025-02-20 14:13:53,083:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:53,647:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,663:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,663:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,663:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,663:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:53,663:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,676:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,676:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,683:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:53,683:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:53,684:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,687:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,693:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,698:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:53,698:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,798:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,803:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,813:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:53,813:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,813:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,830:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,837:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:53,839:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,924:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,930:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,930:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:53,930:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,944:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,946:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:53,946:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:53,963:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,069:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,082:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,087:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,091:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,091:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,095:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,095:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,099:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,113:INFO:Calculating mean and std
2025-02-20 14:13:54,115:INFO:Creating metrics dataframe
2025-02-20 14:13:54,115:INFO:Uploading results into container
2025-02-20 14:13:54,115:INFO:Uploading model into container now
2025-02-20 14:13:54,115:INFO:_master_model_container: 13
2025-02-20 14:13:54,115:INFO:_display_container: 2
2025-02-20 14:13:54,122:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3942, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-20 14:13:54,122:INFO:create_model() successfully completed......................................
2025-02-20 14:13:54,216:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:54,216:INFO:Creating metrics dataframe
2025-02-20 14:13:54,216:INFO:Initializing Dummy Classifier
2025-02-20 14:13:54,229:INFO:Total runtime is 0.33349416653315234 minutes
2025-02-20 14:13:54,232:INFO:SubProcess create_model() called ==================================
2025-02-20 14:13:54,232:INFO:Initializing create_model()
2025-02-20 14:13:54,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AD06005540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:54,232:INFO:Checking exceptions
2025-02-20 14:13:54,232:INFO:Importing libraries
2025-02-20 14:13:54,232:INFO:Copying training dataset
2025-02-20 14:13:54,232:INFO:Defining folds
2025-02-20 14:13:54,232:INFO:Declaring metric variables
2025-02-20 14:13:54,232:INFO:Importing untrained model
2025-02-20 14:13:54,248:INFO:Dummy Classifier Imported successfully
2025-02-20 14:13:54,269:INFO:Starting cross validation
2025-02-20 14:13:54,271:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 14:13:54,546:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,546:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,546:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,546:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,546:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,563:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,566:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,568:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,568:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,568:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,578:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,581:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,584:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,590:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,592:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,596:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,596:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,596:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,596:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,596:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,596:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,596:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,596:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,613:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,613:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,613:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,613:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,631:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,634:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,643:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,648:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,653:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,727:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,732:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,733:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,733:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,733:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,733:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,733:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:54,733:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:54,749:INFO:Calculating mean and std
2025-02-20 14:13:54,749:INFO:Creating metrics dataframe
2025-02-20 14:13:54,749:INFO:Uploading results into container
2025-02-20 14:13:54,749:INFO:Uploading model into container now
2025-02-20 14:13:54,749:INFO:_master_model_container: 14
2025-02-20 14:13:54,749:INFO:_display_container: 2
2025-02-20 14:13:54,749:INFO:DummyClassifier(constant=None, random_state=3942, strategy='prior')
2025-02-20 14:13:54,749:INFO:create_model() successfully completed......................................
2025-02-20 14:13:54,835:INFO:SubProcess create_model() end ==================================
2025-02-20 14:13:54,835:INFO:Creating metrics dataframe
2025-02-20 14:13:54,844:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-20 14:13:54,849:INFO:Initializing create_model()
2025-02-20 14:13:54,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 14:13:54,849:INFO:Checking exceptions
2025-02-20 14:13:54,849:INFO:Importing libraries
2025-02-20 14:13:54,849:INFO:Copying training dataset
2025-02-20 14:13:54,849:INFO:Defining folds
2025-02-20 14:13:54,849:INFO:Declaring metric variables
2025-02-20 14:13:54,849:INFO:Importing untrained model
2025-02-20 14:13:54,849:INFO:Declaring custom model
2025-02-20 14:13:54,849:INFO:Logistic Regression Imported successfully
2025-02-20 14:13:54,849:INFO:Cross validation set to False
2025-02-20 14:13:54,849:INFO:Fitting Model
2025-02-20 14:13:55,277:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-20 14:13:55,277:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 14:13:55,278:INFO:create_model() successfully completed......................................
2025-02-20 14:13:55,386:INFO:_master_model_container: 14
2025-02-20 14:13:55,386:INFO:_display_container: 2
2025-02-20 14:13:55,386:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-20 14:13:55,386:INFO:compare_models() successfully completed......................................
2025-02-20 14:13:55,565:INFO:Initializing predict_model()
2025-02-20 14:13:55,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD05E1ED40>)
2025-02-20 14:13:55,566:INFO:Checking exceptions
2025-02-20 14:13:55,566:INFO:Preloading libraries
2025-02-20 14:13:55,567:INFO:Set up data.
2025-02-20 14:13:55,575:INFO:Set up index.
2025-02-20 14:13:55,653:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(traceback.format_exc())

2025-02-20 14:13:55,653:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:55,661:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:55,662:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:55,664:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:55,665:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-20 14:13:55,666:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-20 14:13:55,667:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 14:13:55,667:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2025-02-20 14:13:55,668:WARNING:c:\Users\ksaig\anaconda3\envs\sai\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2025-02-20 14:13:55,805:INFO:Initializing save_model()
2025-02-20 14:13:55,805:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=LDA, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 14:13:55,806:INFO:Adding model into prep_pipe
2025-02-20 14:13:55,820:INFO:LDA.pkl saved in current working directory
2025-02-20 14:13:55,830:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3942,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 14:13:55,830:INFO:save_model() successfully completed......................................
2025-02-20 14:13:56,038:INFO:Initializing load_model()
2025-02-20 14:13:56,038:INFO:load_model(model_name=LDA, platform=None, authentication=None, verbose=True)
2025-02-20 14:13:56,164:INFO:Initializing predict_model()
2025-02-20 14:13:56,164:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3942,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD05E1EA70>)
2025-02-20 14:13:56,164:INFO:Checking exceptions
2025-02-20 14:13:56,164:INFO:Preloading libraries
2025-02-20 14:13:56,166:INFO:Set up data.
2025-02-20 14:13:56,171:INFO:Set up index.
2025-02-20 14:14:54,259:INFO:Initializing save_model()
2025-02-20 14:14:54,259:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3942, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=GBC, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=['customerID'],
                                    transformer=TargetEncoder(cols=['customerID'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-20 14:14:54,259:INFO:Adding model into prep_pipe
2025-02-20 14:14:54,280:INFO:GBC.pkl saved in current working directory
2025-02-20 14:14:54,294:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCharges_ratio',
                                             'tenure_ratio'],
                                    transformer=...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3942,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-02-20 14:14:54,294:INFO:save_model() successfully completed......................................
2025-02-20 14:15:17,940:INFO:Initializing load_model()
2025-02-20 14:15:17,940:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 14:15:23,918:INFO:Initializing predict_model()
2025-02-20 14:15:23,918:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3942,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD05E1CF70>)
2025-02-20 14:15:23,918:INFO:Checking exceptions
2025-02-20 14:15:23,918:INFO:Preloading libraries
2025-02-20 14:15:23,918:INFO:Set up data.
2025-02-20 14:15:23,918:INFO:Set up index.
2025-02-20 14:17:52,024:INFO:Initializing load_model()
2025-02-20 14:17:52,024:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 14:17:52,050:INFO:Initializing predict_model()
2025-02-20 14:17:52,050:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3942,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD05DA4040>)
2025-02-20 14:17:52,050:INFO:Checking exceptions
2025-02-20 14:17:52,050:INFO:Preloading libraries
2025-02-20 14:17:52,055:INFO:Set up data.
2025-02-20 14:17:52,057:INFO:Set up index.
2025-02-20 14:20:57,729:INFO:Initializing load_model()
2025-02-20 14:20:57,729:INFO:load_model(model_name=GBC, platform=None, authentication=None, verbose=True)
2025-02-20 14:20:57,763:INFO:Initializing predict_model()
2025-02-20 14:20:57,763:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD04C0DED0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ksaig\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'tenure',
                                             'PhoneService', 'MonthlyCharges',
                                             'TotalCharges', 'churn',
                                             'Monthlycharges_TotalCha...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=3942,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD0877BA30>)
2025-02-20 14:20:57,763:INFO:Checking exceptions
2025-02-20 14:20:57,763:INFO:Preloading libraries
2025-02-20 14:20:57,763:INFO:Set up data.
2025-02-20 14:20:57,763:INFO:Set up index.
